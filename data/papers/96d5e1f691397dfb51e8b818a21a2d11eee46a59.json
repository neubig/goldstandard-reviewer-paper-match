{"title": "Coded computation for multicore setups", "abstract": "Consider a distributed computing setup consisting of a master node and n worker nodes, each equipped with p cores, and a function f (x) = g(f1(x), f2(x),\u2026, fk(x)), where each fi can be computed independently of the rest. Assuming that the worker computational times have exponential tails, what is the minimum possible time for computing f? Can we use coding theory principles to speed up this distributed computation? In [1], it is shown that distributed computing of linear functions can be expedited by applying linear erasure codes. However, it is not clear if linear codes can speed up distributed computation of \u2018nonlinear\u2019 functions as well. To resolve this problem, we propose the use of sparse linear codes, exploiting the modern multicore processing architecture. We show that 1) our coding solution achieves the order optimal runtime, and 2) it is at least \u0398(\u221alog n) times faster than any uncoded schemes where the number of workers is n.", "year": 2017, "ssId": "96d5e1f691397dfb51e8b818a21a2d11eee46a59", "arXivId": null, "link": null, "openAccess": false, "authors": ["Kangwook Lee", "Ramtin Pedarsani", "Dimitris Papailiopoulos", "K. Ramchandran"]}