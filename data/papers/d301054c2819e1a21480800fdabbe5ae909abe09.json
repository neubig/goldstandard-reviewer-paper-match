{"title": "Leveraging Language to Learn Program Abstractions and Search Heuristics", "abstract": "Inductive program synthesis, or inferring programs from examples of desired behavior, offers a general paradigm for building interpretable, ro-bust, and generalizable machine learning systems. Effective program synthesis depends on two key ingredients: a strong library of functions from which to build programs, and an ef\ufb01cient search strategy for \ufb01nding programs that solve a given task. We introduce LAPS (Language for Abstraction and Program Search), a technique for using natural language annotations to guide joint learning of libraries and neurally-guided search models for synthesis. When integrated into a state-of-the-art library learning system (DreamCoder), LAPS produces higher-quality libraries and improves search ef\ufb01ciency and generalization on three domains \u2013 string editing, image composition, and abstract reasoning about scenes \u2013 even when no natural language hints are available at test time.", "year": 2021, "ssId": "d301054c2819e1a21480800fdabbe5ae909abe09", "arXivId": "2106.11053", "link": "https://arxiv.org/pdf/2106.11053.pdf", "openAccess": true, "authors": ["Catherine Wong", "Kevin Ellis", "J. Tenenbaum", "Jacob Andreas"]}