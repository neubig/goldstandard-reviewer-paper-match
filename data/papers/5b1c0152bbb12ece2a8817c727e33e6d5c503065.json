{"title": "Speeding up distributed machine learning using codes", "abstract": "Distributed machine learning algorithms that are widely run on modern large-scale computing platforms face several types of randomness, uncertainty and system \u201cnoise.\u201d These include stragglers1, system failures, maintenance outages, and communication bottlenecks. In this work, we view distributed machine learning algorithms through a coding-theoretic lens, and show how codes can equip them with robustness against this system noise. Motivated by their importance and universality, we focus on two of the most basic building blocks of distributed learning algorithms: data shuffling and matrix multiplication. In data shuffling, we use codes to reduce communication bottlenecks: when a constant fraction of the data can be cached at each worker node, and n is the number of workers, coded shuffling reduces the communication cost by up to a factor \u0398(n) over uncoded shuffling. For matrix multiplication, we use codes to alleviate the effects of stragglers, also known as the straggler problem. We show that if the number of workers is n, and the runtime of each subtask has an exponential tail, the optimal coded matrix multiplication is \u0398(log n) times faster than the uncoded matrix multiplication or the optimal task replication scheme.", "year": 2016, "ssId": "5b1c0152bbb12ece2a8817c727e33e6d5c503065", "arXivId": null, "link": null, "openAccess": false, "authors": ["Kangwook Lee", "Maximilian Lam", "Ramtin Pedarsani", "Dimitris Papailiopoulos", "K. Ramchandran"]}