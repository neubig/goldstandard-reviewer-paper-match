{"title": "Searching for More Efficient Dynamic Programs", "abstract": "Computational models of human language often involve combinatorial problems. For instance, a probabilistic parser may marginalize over exponentially many trees to make predictions. Algorithms for such problems often employ dynamic programming and are not always unique. Finding one with optimal asymptotic runtime can be unintuitive, timeconsuming, and error-prone. Our work aims to automate this laborious process. Given an initial correct declarative program, we search for a sequence of semantics-preserving transformations to improve its running time as much as possible. To this end, we describe a set of program transformations, a simple metric for assessing the efficiency of a transformed program, and a heuristic search procedure to improve this metric. We show that in practice, automated search\u2014like the mental search performed by human programmers\u2014can find substantial improvements to the initial program. Empirically, we show that many speed-ups described in the NLP literature could have been discovered automatically by our system.", "year": 2021, "ssId": "bc5e4b9fb3a40057df4994354a403202218d53a6", "arXivId": "2109.06966", "link": "https://arxiv.org/pdf/2109.06966.pdf", "openAccess": true, "authors": ["Tim Vieira", "Ryan Cotterell", "Jason Eisner"]}