Published as a conference paper at ICLR 2020

arXiv:2002.03912v3 [cs.CL] 29 Apr 2020

A PROBABILISTIC FORMULATION OF UNSUPERVISED TEXT STYLE TRANSFER

Junxian He∗, Xinyi Wang∗, Graham Neubig Carnegie Mellon University {junxianh,xinyiw1,gneubig}@cs.cmu.edu

Taylor Berg-Kirkpatrick University of California San Diego tberg@eng.ucsd.edu

ABSTRACT
We present a deep generative model for unsupervised text style transfer that uniﬁes previously proposed non-generative techniques. Our probabilistic approach models non-parallel data from two domains as a partially observed parallel corpus. By hypothesizing a parallel latent sequence that generates each observed sequence, our model learns to transform sequences from one domain to another in a completely unsupervised fashion. In contrast with traditional generative sequence models (e.g. the HMM), our model makes few assumptions about the data it generates: it uses a recurrent language model as a prior and an encoder-decoder as a transduction distribution. While computation of marginal data likelihood is intractable in this model class, we show that amortized variational inference admits a practical surrogate. Further, by drawing connections between our variational objective and other recent unsupervised style transfer and machine translation techniques, we show how our probabilistic view can unify some known non-generative objectives such as backtranslation and adversarial loss. Finally, we demonstrate the effectiveness of our method on a wide range of unsupervised style transfer tasks, including sentiment transfer, formality transfer, word decipherment, author imitation, and related language translation. Across all style transfer tasks, our approach yields substantial gains over state-of-the-art non-generative baselines, including the state-of-the-art unsupervised machine translation techniques that our approach generalizes. Further, we conduct experiments on a standard unsupervised machine translation task and ﬁnd that our uniﬁed approach matches the current state-of-the-art.1

1 INTRODUCTION
Text sequence transduction systems convert a given text sequence from one domain to another. These techniques can be applied to a wide range of natural language processing applications such as machine translation (Bahdanau et al., 2015), summarization (Rush et al., 2015), and dialogue response generation (Zhao et al., 2017). In many cases, however, parallel corpora for the task at hand are scarce. Therefore, unsupervised sequence transduction methods that require only non-parallel data are appealing and have been receiving growing attention (Bannard & Callison-Burch, 2005; Ravi & Knight, 2011; Mizukami et al., 2015; Shen et al., 2017; Lample et al., 2018; 2019). This trend is most pronounced in the space of text style transfer tasks where parallel data is particularly challenging to obtain (Hu et al., 2017; Shen et al., 2017; Yang et al., 2018). Style transfer has historically referred to sequence transduction problems that modify superﬁcial properties of text – i.e. style rather than content.2 We focus on a standard suite of style transfer tasks, including formality transfer (Rao & Tetreault, 2018), author imitation (Xu et al., 2012), word decipherment (Shen et al., 2017), sentiment transfer (Shen et al., 2017), and related language translation (Pourdamghani & Knight, 2017). General unsupervised translation has not typically been considered style transfer, but for the purpose of comparison we also conduct evaluation on this task (Lample et al., 2017).
∗Equal Contribution. 1Code and data are available at https://github.com/cindyxinyiwang/deep-latent-sequence-model. 2Notably, some tasks we evaluate on do change content to some degree, such as sentiment transfer, but for conciseness we use the term “style transfer” nonetheless.
1

Published as a conference paper at ICLR 2020
Recent work on unsupervised text style transfer mostly employs non-generative or non-probabilistic modeling approaches. For example, Shen et al. (2017) and Yang et al. (2018) design adversarial discriminators to shape their unsupervised objective – an approach that can be effective, but often introduces training instability. Other work focuses on directly designing unsupervised training objectives by incorporating intuitive loss terms (e.g. backtranslation loss), and demonstrates state-ofthe-art performance on unsupervised machine translation (Lample et al., 2018; Artetxe et al., 2019) and style transfer (Lample et al., 2019). However, the space of possible unsupervised objectives is extremely large and the underlying modeling assumptions deﬁned by each objective can only be reasoned about indirectly. As a result, the process of designing such systems is often heuristic.
In contrast, probabilistic models (e.g. the noisy channel model (Shannon, 1948)) deﬁne assumptions about data more explicitly and allow us to reason about these assumptions during system design. Further, the corresponding objectives are determined naturally by principles of probabilistic inference, reducing the need for empirical search directly in the space of possible objectives. That said, classical probabilistic models for unsupervised sequence transduction (e.g. the HMM or semi-HMM) typically enforce overly strong independence assumptions about data to make exact inference tractable (Knight et al., 2006; Ravi & Knight, 2011; Pourdamghani & Knight, 2017). This has restricted their development and caused their performance to lag behind unsupervised neural objectives on complex tasks. Luckily, in recent years, powerful variational approximation techniques have made it more practical to train probabilistic models without strong independence assumptions (Miao & Blunsom, 2016; Yin et al., 2018). Inspired by this, we take a new approach to unsupervised style transfer.
We directly deﬁne a generative probabilistic model that treats a non-parallel corpus in two domains as a partially observed parallel corpus. Our model makes few independence assumptions and its true posterior is intractable. However, we show that by using amortized variational inference (Kingma & Welling, 2013), a principled probabilistic technique, a natural unsupervised objective falls out of our modeling approach that has many connections with past work, yet is different from all past work in speciﬁc ways. In experiments across a suite of unsupervised text style transfer tasks, we ﬁnd that the natural objective of our model actually outperforms all manually deﬁned unsupervised objectives from past work, supporting the notion that probabilistic principles can be a useful guide even in deep neural systems. Further, in the case of unsupervised machine translation, our model matches the current state-of-the-art non-generative approach.
2 UNSUPERVISED TEXT STYLE TRANSFER
We ﬁrst overview text style transfer, which aims to transfer a text (typically a single sentence or a short paragraph – for simplicity we refer to simply “sentences” below) from one domain to another while preserving underlying content. For example, formality transfer (Rao & Tetreault, 2018) is the task of transforming the tone of text from informal to formal without changing its content. Other examples include sentiment transfer (Shen et al., 2017), word decipherment (Knight et al., 2006), and author imitation (Xu et al., 2012). If parallel examples were available from each domain (i.e. the training data is a bitext consisting of pairs of sentences from each domain), supervised techniques could be used to perform style transfer (e.g. attentional Seq2Seq (Bahdanau et al., 2015) and Transformer (Vaswani et al., 2017)). However, for most style transfer problems, only non-parallel corpora (one corpus from each domain) can be easily collected. Thus, work on style transfer typically focuses on the more difﬁcult unsupervised setting where systems must learn from non-parallel data alone.
The model we propose treats an observed non-parallel text corpus as a partially observed parallel corpus. Thus, we introduce notation for both observed text inputs and those that we will treat as latent variables. Speciﬁcally, we let X = {x(1), x(2), · · · , x(m)} represent observed data from domain D1, while we let Y = {y(m+1), y(m+2), · · · , y(n)} represent observed data from domain D2. Corresponding indices represent parallel sentences. Thus, none of the observed sentences share indices. In our model, we introduce latent sentences to complete the parallel corpus. Speciﬁcally, X¯ = {x¯(m+1), x¯(m+2), · · · , x¯(n)} represents the set of latent parallel sentences in D1, while Y¯ = {y¯(1), y¯(2), · · · , y¯(m)} represents the set of latent parallel sentences in D2. Then the goal of unsupervised text transduction is to infer these latent variables conditioned the observed non-parallel corpora; that is, to learn p(y¯|x) and p(x¯|y).
2

Published as a conference paper at ICLR 2020

Figure 1: Proposed graphical model for style transfer via bitext completion. Shaded circles denote the observed variables and unshaded circles denote the latents. The generator is parameterized as an encoder-decoder architecture and the prior on the latent variable is a pretrained language model.
3 THE DEEP LATENT SEQUENCE MODEL
First we present our generative model of bitext, which we refer to as a deep latent sequence model. We then describe unsupervised learning and inference techniques for this model class.

3.1 MODEL STRUCTURE

Directly modeling p(y¯|x) and p(x¯|y) in the unsupervised setting is difﬁcult because we never directly observe parallel data. Instead, we propose a generative model of the complete data that deﬁnes a joint likelihood, p(X, X¯ , Y, Y¯ ). In order to perform text transduction, the unobserved halves can be treated as latent variables: they will be marginalized out during learning and inferred via posterior inference at test time.
Our model assumes that each observed sentence is generated from an unobserved parallel sentence in the opposite domain, as depicted in Figure 1. Speciﬁcally, each sentence x(i) in domain D1 is generated as follows: First, a latent sentence y¯(i) in domain D2 is sampled from a prior, pD2 (y¯(i)). Then, x(i) is sampled conditioned on y¯(i) from a transduction model, p(x(i)|y¯(i)). Similarly, each observed sentence y(j) in domain D2 is generated conditioned on a latent sentence, x¯(j), in domain D1 via the opposite transduction model, p(y(j)|x¯(j)), and prior, pD1 (x¯(j)). We let θx|y¯ and θy|x¯ represent the parameters of the two transduction distributions respectively. We assume the prior distributions are pretrained on the observed data in their respective domains and therefore omit their parameters for simplicity of notation. Together, this gives the following joint likelihood:

m

n

p(X, X¯ , Y, Y¯ ; θx|y¯, θy|x¯) =

p x(i)|y¯(i); θx|y¯ pD2 y¯(i)

p y(j)|x¯(j); θy|x¯ pD1 x¯(j)

i=1

j=m+1

(1)

The log marginal likelihood of the data, which we will approximate during training, is:

log p(X, Y ; θx|y¯, θy|x¯) = log X¯ Y¯ p(X, X¯ , Y, Y¯ ; θx|y¯, θy|x¯) (2)
Note that if the two transduction models share no parameters, the training problems for each observed domain are independent. Critically, we introduce parameter sharing through our variational inference procedure, which we describe in more detail in Section 3.2.

Architecture: Since we would like to be able to model a variety of transfer tasks, we choose a parameterization for our transduction distributions that makes no independence assumptions. Speciﬁcally, we employ an encoder-decoder architecture based on the standard attentional Seq2Seq model which has been shown to be successful across various tasks (Bahdanau et al., 2015; Rush et al., 2015). Similarly, our prior distributions for each domain are parameterized as recurrent language models which, again, make no independence assumptions. In contrast, traditional unsupervised generative sequence models typically make strong independence assumptions to enable exact inference (e.g. the HMM makes a Markov assumption on the latent sequence and emissions are one-to-one). Our model is more ﬂexible, but exact inference via dynamic programming will be intractable. We address this problem in the next section.

3

Published as a conference paper at ICLR 2020

Figure 2: Depiction of amortized variational approximation. Distributions q(y¯|x) and q(x¯|y) represent inference networks that approximate the model’s true posterior. Critically, parameters are shared between the generative model and inference networks to tie the learning problems for both domains.

3.2 LEARNING

Ideally, learning should directly optimize the log data likelihood, which is the marginal of our model shown in Eq. 2. However, due to our model’s neural parameterization which does not factorize, computing the data likelihood cannot be accomplished using dynamic programming as can be done with simpler models like the HMM. To overcome the intractability of computing the true data likelihood, we adopt amortized variational inference (Kingma & Welling, 2013) in order to derive a surrogate objective for learning, the evidence lower bound (ELBO) on log marginal likelihood3 :

log p(X, Y ; θx|y¯, θy|x¯) ≥ LELBO(X, Y ; θx|y¯, θy|x¯, φx¯|y, φy¯|x)

= i Eq(y¯|x(i);φy¯|x)[log p(x(i)|y¯; θx|y¯)] − DKL q(y¯|x(i); φy¯|x)||pD2 (y¯) (3)

+

Eq(x¯|y(j);φ )[log p(y(j)|x¯; θy|x¯)] − DKL q(x¯|y(j); φx¯|y)||pD1 (x¯)

j

x¯|y

Reconstruction likelihood

KL regularizer

The surrogate objective introduces q(y¯|x(i); φy¯|x) and q(x¯|y(j); φx¯|y), which represent two separate inference network distributions that approximate the model’s true posteriors, p(y¯|x(i); θx|y¯) and p(x¯|y(j); θy|x¯), respectively. Learning operates by jointly optimizing the lower bound over both variational and model parameters. Once trained, the variational posterior distributions can be used directly for style transfer. The KL terms in Eq. 3, that appear naturally in the ELBO objective, can be intuitively viewed as regularizers that use the language model priors to bias the induced sentences towards the desired domains. Amortized variational techniques have been most commonly applied to continuous latent variables, as in the case of the variational autoencoder (VAE) (Kingma & Welling, 2013). Here, we use this approach for inference over discrete sequences, which has been shown to be effective in related work on a semi-supervised task (Miao & Blunsom, 2016).

Inference Network and Parameter Sharing: Note that the approximate posterior on one domain
aims to learn the reverse style transfer distribution, which is exactly the goal of the generative distribution in the opposite domain. For example, the inference network q(y¯|x(i); φy¯|x) and the generative distribution p(y|x¯(i); θy|x¯) both aim to transform D1 to D2. Therefore, we use the same architecture for each inference network as used in the transduction models, and tie their parameters: φx¯|y = θx|y¯, φy¯|x = θy|x¯. This means we learn only two encoder-decoders overall – which are parameterized by θx|y¯ and θy|x¯ respectively – to represent two directions of transfer. In addition to reducing the number of learnable parameters, this parameter tying couples the learning problems for
both domains and allows us to jointly learn from the full data. Moreover, inspired by recent work that

3Note that in practice, we add a weight λ (the same to both domains) to the KL term in ELBO since the regularization strength from the pretrained language model varies depending on the datasets, training data size, or language model structures. Such reweighting has proven necessary in previous work that is trained with ELBO (Bowman et al., 2016; Miao & Blunsom, 2016; Yin et al., 2018).

4

Published as a conference paper at ICLR 2020

builds a universal Seq2Seq model to translate between different language pairs (Johnson et al., 2017), we introduce further parameter tying between the two directions of transduction: the same encoder is employed for both x and y, and a domain embedding c is provided to the same decoder to specify the transfer direction, as shown in Figure 2. Ablation analysis in Section 5.3 suggests that parameter sharing is important to achieve good performance.

Approximating Gradients of ELBO: The reconstruction and KL terms in Eq. 3 still involve intractable expectations due to the marginalization over the latent sequence, thus we need to approximate their gradients. Gumbel-softmax (Jang et al., 2017) and REINFORCE (Williams, 1987) are often used as stochastic gradient estimators in the discrete case. Since the latent text variables have an extremely large domain, we ﬁnd that REINFORCE-based gradient estimates result in high variance. Thus, we use the Gumbel-softmax straight-through estimator to backpropagate gradients from the KL terms.4 However, we ﬁnd that approximating gradients of the reconstruction loss is much more challenging – both the Gumbel-softmax estimator and REINFORCE are unable to outperform a simple stop-gradient method that does not back-propagate the gradient of the latent sequence to the inference network. This conﬁrms a similar observation in previous work on unsupervised machine translation (Lample et al., 2018). Therefore, we use greedy decoding without recording gradients to approximate the reconstruction term.5 Note that the inference networks still receive gradients from the prior through the KL term, and their parameters are shared with the decoders which do receive gradients from reconstruction. We consider this to be the best empirical compromise at the moment.

Initialization. Good initialization is often necessary for successful optimization of unsupervised learning objectives. In preliminary experiments, we ﬁnd that the encoder-decoder structure has difﬁculty generating realistic sentences during the initial stages of training, which usually results in a disastrous local optimum. This is mainly because the encoder-decoder is initialized randomly and there is no direct training signal to specify the desired latent sequence in the unsupervised setting. Therefore, we apply a self-reconstruction loss Lrec at the initial epochs of training. We denote the output the encoder as e(·) and the decoder distribution as pdec, then

Lrec = −α · [pdec(e(x(i)), cx)] − α · [pdec(e(y(j)), cy)],

(4)

i

j

cx and cy are the domain embeddings for x and y respectively, α decays from 1.0 to 0.0 linearly in the ﬁrst k epochs. k is a tunable parameter and usually less than 3 in all our experiments.

4 CONNECTION TO RELATED WORK

Our probabilistic formulation can be connected with recent advances in unsupervised text transduction methods. For example, back translation loss (Sennrich et al., 2016) plays an important role in recent unsupervised machine translation (Artetxe et al., 2018; Lample et al., 2018; Artetxe et al., 2019) and unsupervised style transfer systems (Lample et al., 2019). In order to incorporate back translation loss the source language x is translated to the target language y to form a pseudo-parallel corpus, then a translation model from y to x can be learned on this pseudo bitext just as in supervised setting. While back translation was often explained as a data augmentation technique, in our probabilistic formulation it appears naturally with the ELBO objective as the reconstruction loss term.

Some previous work has incorporated a pretrained language models into neural semi-supervised or unsupervised objectives. He et al. (2016) uses the log likelihood of a pretrained language model as the reward to update a supervised machine translation system with policy gradient. Artetxe et al. (2019) utilize a similar idea for unsupervised machine translation. Yang et al. (2018) employed a similar approach, but interpret the LM as an adversary, training the generator to fool the LM. We show how our ELBO objective is connected with these more heuristic LM regularizers by expanding the KL loss term (assume x is observed):

DKL(q(y¯|x)||pD2 (y¯)) = −Hq − Eq[log pD2 (y¯)],

(5)

Note that the loss used in previous work does not include the negative entropy term, −Hq. Our objective results in this additional “regularizer”, the negative entropy of the transduction distribution, −Hq. Intuitively, −Hq helps avoid a peaked transduction distribution, preventing the transduction

4We use one sample to approximate the expectations. 5We compare greedy and sampling decoding in Section 5.3.

5

Published as a conference paper at ICLR 2020
from constantly generating similar sentences to satisfy the language model. In experiments we will show that this additional regularization is important and helps bypass bad local optima and improve performance. These important differences with past work suggest that a probabilistic view of the unsupervised sequence transduction may provide helpful guidance in determining effective training objectives.
5 EXPERIMENTS
We test our model on ﬁve style transfer tasks: sentiment transfer, word substitution decipherment, formality transfer, author imitation, and related language translation. For completeness, we also evaluate on the task of general unsupervised machine translation using standard benchmarks.
We compare with the unsupervised machine translation model (UNMT) which recently demonstrated state-of-the-art performance on transfer tasks such as sentiment and gender transfer (Lample et al., 2019).6 To validate the effect of the negative entropy term in the KL loss term Eq. 5, we remove it and train the model with a back-translation loss plus a language model negative log likelihood loss (which we denote as BT+NLL) as an ablation baseline. For each task, we also include strong baseline numbers from related work if available. For our method we select the model with the best validation ELBO, and for UNMT or BT+NLL we select the model with the best back-translation loss. Complete model conﬁgurations and hyperparameters can be found in Appendix A.1.
5.1 DATASETS AND EXPERIMENT SETUP
Word Substitution Decipherment. Word decipherment aims to uncover the plain text behind a corpus that was enciphered via word substitution where word in the vocabulary is mapped to a unique type in a cipher dictionary (Dou & Knight, 2012; Shen et al., 2017; Yang et al., 2018). In our formulation, the model is presented with a non-parallel corpus of English plaintext and the ciphertext. We use the data in (Yang et al., 2018) which provides 200K sentences from each domain. While previous work (Shen et al., 2017; Yang et al., 2018) controls the difﬁculty of this task by varying the percentage of words that are ciphered, we directly evaluate on the most difﬁcult version of this task – 100% of the words are enciphered (i.e. no vocabulary sharing in the two domains). We select the model with the best unsupervised reconstruction loss, and evaluate with BLEU score on the test set which contains 100K parallel sentences. Results are shown in Table 2.
Sentiment Transfer. Sentiment transfer is a task of paraphrasing a sentence with a different sentiment while preserving the original content. Evaluation of sentiment transfer is difﬁcult and is still an open research problem (Mir et al., 2019). Evaluation focuses on three aspects: attribute control, content preservation, and ﬂuency. A successful system needs to perform well with respect to all three aspects. We follow prior work by using three automatic metrics (Yang et al., 2018; Lample et al., 2019): classiﬁcation accuracy, self-BLEU (BLEU of the output with the original sentence as the reference), and the perplexity (PPL) of each system’s output under an external language model. We pretrain a convolutional classiﬁer (Kim, 2014) to assess classiﬁcation accuracy, and use an LSTM language model pretrained on each domain to compute the PPL of system outputs.
We use the Yelp reviews dataset collected by Shen et al. (2017) which contains 250K negative sentences and 380K positive sentences. We also use a small test set that has 1000 human-annotated parallel sentences introduced in Li et al. (2018). We denote the positive sentiment as domain D1 and the negative sentiment as domain D2. We use Self-BLEU and BLEU to represent the BLEU score of the output against the original sentence and the reference respectively. Results are shown in Table 1.
Formality Transfer. Next, we consider a harder task of modifying the formality of a sequence. We use the GYAFC dataset (Rao & Tetreault, 2018), which contains formal and informal sentences from two different domains. In this paper, we use the Entertainment and Music domain, which has about 52K training sentences, 5K development sentences, and 2.5K test sentences. This dataset actually contains parallel data between formal and informal sentences, which we use only for evaluation. We follow the evaluation of sentiment transfer task and test models on three axes. Since the test set is
6The model they used is slightly different from the original model of Lample et al. (2018) in certain details – e.g. the addition of a pooling layer after attention. We re-implement their model in our codebase for fair comparison and verify that our re-implementation achieves performance competitive with the original paper.
6

Published as a conference paper at ICLR 2020

Table 1: Results on the sentiment transfer, author imitation, and formality transfer. We list the PPL of pretrained LMs on the test sets of both domains. We only report Self-BLEU on the sentiment task to compare with existing work.

Task Sentiment Author Imitation Formality

Model
Test Set Shen et al. (2017) Hu et al. (2017) Yang et al. (2018) UNMT BT+NLL Ours
Test Set UNMT BT+NLL Ours
Test Set UNMT BT+NLL Ours

Acc.
79.50 87.70 83.30 87.17 88.36 87.90
80.23 76.98 81.43
78.06 82.43 80.46

BLEU
6.80
13.40 16.99 12.36 18.67
7.13 10.80 10.81
16.11 8.57 18.54

Self-BLEU
12.40 65.60 38.60 44.88 31.48 48.38
-
-

PPLD1
31.97 50.40 115.60 30.30 26.53
8.75 27.75
132.95 40.11 61.70 49.62
71.30 26.70
6.57 22.65

PPLD2
21.87 52.70 239.80 42.10 35.72 12.82 35.61
85.25 39.38 65.51 44.86
135.50 10.38 8.21 17.23

a parallel corpus, we only compute reference BLEU and ignore self-BLEU. We use D1 to denote formal text, and D2 to denote informal text. Results are shown in Table 1.

Author Imitation. Author imitation is the task of paraphrasing a sentence to match another author’s
style. The dataset we use is a collection of Shakespeare’s plays translated line by line into modern English. It was collected by Xu et al. (2012)7 and used in prior work on supervised style trans-
fer (Jhamtani et al., 2017). This is a parallel corpus and thus we follow the setting in the formality transfer task. We use D1 to denote modern English, and D2 to denote Shakespeare-style English. Results are shown in Table 1.

Related Language Translation. Next, we test our method on a challenging related language translation task (Pourdamghani & Knight, 2017; Yang et al., 2018). This task is a natural test bed for unsupervised sequence transduction since the goal is to preserve the meaning of the source sentence while rewriting it into the target language. For our experiments, we choose Bosnian (bs) and Serbian (sr) as the related language pairs. We follow Yang et al. (2018) to report BLEU-1 score on this task since BLEU-4 score is close to zero. Results are shown in Table 2.

Unsupervised MT. In order to draw connections with a related work on general unsupervised machine translation, we also evaluate on the WMT’16 German English translation task. This task is substantially more difﬁcult than the style transfer tasks considered so far. We compare with the state-of-the-art UNMT system using the existing implementation from the XLM codebase,8 and implement our approach in the same framework with XLM initialization for fair comparison. We train both systems on 5M non-parallel sentences from each language. Results are shown in Table 2.

In Tables 1 we also list the PPL of the test set under the external LM for both the source and target domain. PPL of system outputs should be compared to PPL of the test set itself because extremely low PPL often indicates that the generated sentences are short or trivial.
5.2 RESULTS

Table 2: BLEU for decipherment, related language translation (Sr-Bs), and general unsupervised translation (En-De).

Model
Shen et al. (2017) Yang et al. (2018)
UNMT BT+NLL Ours

Decipher
50.8 49.3
76.4 78.0 78.4

Sr-Bs
31.0
31.4 29.6 36.2

Bs-Sr
33.4
33.4 31.4 38.3

En-De
-
26.5 -
26.9

De-En
-
32.2 -
32.0

Tables 1 and 2 demonstrate some general trends. First, UNMT is able to outperform other prior methods in unsupervised text style transfer, such as (Yang et al., 2018; Hu et al., 2017; Shen et al., 2017). The performance improvements of UNMT indicate that ﬂexible and powerful

7https://github.com/tokestermw/tensorflow-shakespeare 8https://github.com/facebookresearch/XLM

7

Published as a conference paper at ICLR 2020

architectures are crucial (prior methods generally do not have an attention mechanism). Second, our model achieves comparable classiﬁcation accuracy to UNMT but outperforms it in all style transfer tasks in terms of the reference-BLEU, which is the most important metric since it directly measures the quality of the ﬁnal generations against gold parallel data. This indicates that our method is both effective and consistent across many different tasks. Finally, the BT+NLL baseline is sometimes quite competitive, which indicates that the addition of a language model alone can be beneﬁcial. However, our method consistently outperforms the simple BT+NLL method, which indicates the effectiveness of the additional entropy regularizer in Eq. 5 that is the byproduct of our probabilistic formulation.
Next, we examine the PPL of the system outputs under pretrained domain LMs, which should be evaluated in comparison with the PPL of the test set itself. For both the sentiment transfer and the formality transfer tasks in Table 1, BT+NLL achieves extremely low PPL, lower than the PPL of the test corpus in the target domain. After a close examination of the output, we ﬁnd that it contains many repeated and overly simple outputs. For example, the system generates many examples of “I love this place” when transferring negative to positive sentiment (see Appendix A.3 for examples). It is not surprising that such a trivial output has low perplexity, high accuracy, and low BLEU score. On the other hand, our system obtains reasonably competitive PPL, and our approach achieves the highest accuracy and higher BLEU score than the UNMT baseline.

5.3 FURTHER ABLATIONS AND ANALYSIS
60%

Improvement Percentage

Parameter Sharing. We also conducted an experiment on the word substitution decipherment task, where we remove parame-

43.75%

Author

ter sharing (as explained in Section 3.2) between two directions 27.5%
of transduction distributions, and optimize two encoder-decoder

instead. We found that the model only obtained an extremely low BLEU score and failed to generate any meaningful outputs.
Performance vs. Domain Divergence. Figure 3 plots the relative improvement of our method over UNMT with respect to accuracy of a naive Bayes’ classiﬁer trained to predict the

Sr-Bs Formality

11.25%

Sentiment

-5% 0.4

Decipher En-De

0.7

1

Naive Bayes Classiﬁcation Accuracy

domain of test sentences. Tasks with high classiﬁcation accu-

racy likely have more divergent domains. We can see that for Figure 3: Improvement over

decipherment and en-de translation, where the domains have UNMT vs. classiﬁcation accuracy.

different vocabularies and thus are easily distinguished, our method yields a smaller gain over UNMT.

This likely indicates that the (discrimination) regularization effect of the LM priors is less important

or necessary when the two domains are very different.

Why does the proposed model outperform UNMT? Finally, we examine in detail the output of our model and UNMT for the author imitation task. We pick this task because the reference outputs for the test set are provided, aiding analysis. Examples shown in Table 3 demonstrate that UNMT tends to make overly large changes to the source so that the original meaning is lost, while our method is better at preserving the content of the source sentence. Next, we quantitatively examine the outputs from UNMT and our method by comparing the F1 measure of words bucketed by their syntactic tags. We use the open-sourced compare-mt tool (Neubig et al., 2019), and the results are shown in Figure 4. Our system has outperforms UNMT in all word categories. In particular, our system is much better at generating nouns, which likely leads to better content preservation.

fmeas CC DT IN JJ NN NNP NNS PRP RB TO VB VBP VBZ other

0.6

UNMT

Ours

0.5

0.4

0.3

0.2

0.1

0.0

labels

Figure 4: Word F1 score by POS tag.

Table 3: Examples for author imitation task

Methods
Source Reference UNMT Ours
Source Reference UNMT Ours
Source Reference UNMT Ours

Shakespeare to Modern
Not to his father’s . Not to his father’s house . Not to his brother . Not to his father’s house .
Send thy man away . Send your man away . Send an excellent word . Send your man away .
Why should you fall into so deep an O ? Why should you fall into so deep a moan ? Why should you carry so nicely , but have your legs ? Why should you fall into so deep a sin ?

8

Published as a conference paper at ICLR 2020

Table 4: Comparison of gradient approximation on the sentiment transfer task.

Method
Sample-based Greedy

train ELBO↑
-3.51 -2.05

test ELBO↑
-3.79 -2.07

Acc.
87.90 87.90

BLEUr
13.34 18.67

BLEUs
33.19 48.38

PPLD1
24.55 27.75

PPLD2
25.67 35.61

Table 5: Comparison of gradient propagation method on the sentiment transfer task.

Method
Gumbel Softmax REINFORCE Stop Gradient

train ELBO↑
-2.96 -6.07 -2.05

test ELBO↑
-2.98 -6.48 -2.07

Acc.
81.30 95.10 87.90

BLEUr
16.17 4.08 18.67

BLEUs
40.47 9.74 48.38

PPLD1
22.70 6.31 27.75

PPLD2
23.88 4.08 35.61

Greedy vs. Sample-based Gradient Approximation. In our experiments, we use greedy decoding from the inference network to approximate the expectation required by ELBO, which is a biased estimator. The main purpose of this approach is to reduce the variance of the gradient estimator during training, especially in the early stages when the variance of sample-based approaches is quite high. As an ablation experiment on the sentiment transfer task we compare greedy and sample-based gradient approximations in terms of both train and test ELBO, as well as task performance corresponding to best test ELBO. After the model is fully trained, we ﬁnd that the sample-based approximation has low variance. With a single sample, the standard deviation of the EBLO is less than 0.3 across 10 different test repetitions. All ﬁnal reported ELBO values are all computed with this approach, regardless of whether the greedy approximation was used during training. The reported ELBO values are the evidence lower bound per word. Results are shown in Table 4, where the sampling-based training underperforms on both ELBO and task evaluations.

5.4 COMPARISON OF GRADIENT PROPAGATION METHODS
As noted above, to stabilize the training process, we stop gradients from propagating to the inference network from the reconstruction loss. Does this approach indeed better optimize the actual probabilistic objective (i.e. ELBO) or only indirectly lead to improved task evaluations? In this section we use sentiment transfer as an example task to compare different methods for propagating gradients and evaluate both ELBO and task evaluations.
Speciﬁcally, we compare three different methods:
• Stop Gradient: The gradients from reconstruction loss are not propagated to the inference network. This is the method we use in all previous experiments.
• Gumbel Softmax (Jang et al., 2017): Gradients from the reconstruction loss are propagated to the inference network with the straight-through Gumbel estimator.
• REINFORCE (Williams, 1987): Gradients from reconstruction loss are propagated to the inference network with ELBO as a reward function. This method has been used in previous work for semi-supervised sequence generation (Miao & Blunsom, 2016; Yin et al., 2018), but often suffers from instability issues.
We report the train and test ELBO along with task evaluations in Table 5, and plot the learning curves on validation set in Figure 5.9 While being much simpler, we show that the stop-gradient trick produces superior ELBO over Gumbel Softmax and REINFORCE. This result suggests that stopping gradient helps better optimize the likelihood objective under our probabilistic formulation in comparison with other optimization techniques that propagate gradients, which is counter-intuitive. A likely explanation is that as a gradient estimator, while clearly biased, stop-gradient has substantially reduced variance. In comparison with other techniques that offer reduced bias but extremely high variance when applied to our model class (which involves discrete sequences as latent variables), stop-gradient actually leads to better optimization of our objective because it achieves better balance of bias and variance overall.
9We remove REINFORCE from this ﬁgure since it is very difﬁcult to stabilize training and obtain reasonable results (e.g. the ELBO value is much worse than others in Table 5)

9

ELBO

Published as a conference paper at ICLR 2020
2.0 2.5 3.0 3.5 4.0 4.5 gumbel softmax
stop gradient
5.0 0 10000 20000step30000 40000 50000
Figure 5: ELBO on the validation set v.s. the number training steps.
6 CONCLUSION
We propose a probabilistic generative forumalation that unites past work on unsupervised text style transfer. We show that this probabilistic formulation provides a different way to reason about unsupervised objectives in this domain. Our model leads to substantial improvements on ﬁve text style transfer tasks, yielding bigger gains when the styles considered are more difﬁcult to distinguish.
ACKNOWLEDGEMENT
The work of Junxian He and Xinyi Wang is supported by the DARPA GAILA project (award HR00111990063) and the Tang Family Foundation respectively. The authors would like to thank Zichao Yang for helpful feedback about the project.
REFERENCES
Mikel Artetxe, Gorka Labaka, Eneko Agirre, and Kyunghyun Cho. Unsupervised neural machine translation. In Proceedings of ICLR, 2018.
Mikel Artetxe, Gorka Labaka, and Eneko Agirre. An effective approach to unsupervised machine translation. arXiv preprint arXiv:1902.01313, 2019.
Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Bengio. Neural machine translation by jointly learning to align and translate. In Proceedings of ICLR, 2015.
Colin Bannard and Chris Callison-Burch. Paraphrasing with bilingual parallel corpora. In Proceedings of ACL, 2005.
Samuel R Bowman, Luke Vilnis, Oriol Vinyals, Andrew Dai, Rafal Jozefowicz, and Samy Bengio. Generating sentences from a continuous space. In Proceedings of ConNLL, 2016.
Qing Dou and Kevin Knight. Dependency-based decipherment for resource-limited machine translation. Proceedings of EMNLP, 2012.
Di He, Yingce Xia, Tao Qin, Liwei Wang, Nenghai Yu, Tie-Yan Liu, and Wei-Ying Ma. Dual learning for machine translation. In Proceedings of NeurIPS, 2016.
Zhiting Hu, Zichao Yang, Xiaodan Liang, Ruslan Salakhutdinov, and Eric P Xing. Toward controlled generation of text. In Proceedings of ICML, 2017.
Eric Jang, Shixiang Gu, and Ben Poole. Categorical reparameterization with gumbel-softmax. In Proceedings of ICLR, 2017.
Harsh Jhamtani, Varun Gangal, Edward Hovy, and Eric Nyberg. Shakespearizing modern language using copy-enriched sequence-to-sequence models. Proceedings of EMNLP, 2017.
10

Published as a conference paper at ICLR 2020
Melvin Johnson, Mike Schuster, Quoc V Le, Maxim Krikun, Yonghui Wu, Zhifeng Chen, Nikhil Thorat, Fernanda Viégas, Martin Wattenberg, Greg Corrado, et al. Google’s multilingual neural machine translation system: Enabling zero-shot translation. Transactions of the Association for Computational Linguistics, 2017.
Yoon Kim. Convolutional neural networks for sentence classiﬁcation. In Proceedings of EMNLP, 2014.
Diederik P Kingma and Max Welling. Auto-encoding variational bayes. arXiv preprint arXiv:1312.6114, 2013.
Kevin Knight, Anish Nair, Nishit Rathod, and Kenji Yamada. Unsupervised analysis for decipherment problems. In Proceedings of the COLING/ACL 2006 Main Conference Poster Sessions, pp. 499– 506, 2006.
Guillaume Lample, Alexis Conneau, Ludovic Denoyer, and Marc’Aurelio Ranzato. Unsupervised machine translation using monolingual corpora only. arXiv preprint arXiv:1711.00043, 2017.
Guillaume Lample, Myle Ott, Alexis Conneau, Ludovic Denoyer, and Marc’Aurelio Ranzato. Phrasebased & neural unsupervised machine translation. arXiv preprint arXiv:1804.07755, 2018.
Guillaume Lample, Sandeep Subramanian, Eric Smith, Ludovic Denoyer, Marc’Aurelio Ranzato, and Y-Lan Boureau. Multiple-attribute text rewriting. In Proceedings of ICLR, 2019.
Juncen Li, Robin Jia, He He, and Percy Liang. Delete, retrieve, generate: A simple approach to sentiment and style transfer. arXiv preprint arXiv:1804.06437, 2018.
Yishu Miao and Phil Blunsom. Language as a latent variable: Discrete generative models for sentence compression. In Proceedings of EMNLP, 2016.
Ronen Mir, Bjarke Felbo, Nick Obradovich, and Iyad Rahwan. Evaluating style transfer for text. In Proceedings of NAACL, 2019.
Masahiro Mizukami, Graham Neubig, Sakriani Sakti, Tomoki Toda, and Satoshi Nakamura. Linguistic individuality transformation for spoken language. In Natural Language Dialog Systems and Intelligent Assistants. 2015.
Graham Neubig, Zi-Yi Dou, Junjie Hu, Paul Michel, Danish Pruthi, and Xinyi Wang. compare-mt: A tool for holistic comparison of language generation systems. In Meeting of the North American Chapter of the Association for Computational Linguistics (NAACL) Demo Track, Minneapolis, USA, June 2019. URL http://arxiv.org/abs/1903.07926.
Nima Pourdamghani and Kevin Knight. Deciphering related languages. Proceedings of EMNLP, 2017.
Sudha Rao and Joel Tetreault. Dear sir or madam, may i introduce the gyafc dataset: Corpus, benchmarks and metrics for formality style transfer. arXiv preprint arXiv:1803.06535, 2018.
Sujith Ravi and Kevin Knight. Deciphering foreign language. In Proceedings of ACL, 2011.
Alexander M Rush, Sumit Chopra, and Jason Weston. A neural attention model for abstractive sentence summarization. In Proceedings of EMNLP, 2015.
Rico Sennrich, Barry Haddow, and Alexandra Birch. Improving neural machine translation models with monolingual data. In Proceedings of ACL, 2016.
Claude Elwood Shannon. A mathematical theory of communication. Bell system technical journal, 27(3):379–423, 1948.
Tianxiao Shen, Tao Lei, Regina Barzilay, and Tommi Jaakkola. Style transfer from non-parallel text by cross-alignment. In Proceeings of NIPS, 2017.
Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, Łukasz Kaiser, and Illia Polosukhin. Attention is all you need. In Proceedings of NeurIPS, 2017.
11

Published as a conference paper at ICLR 2020 R Williams. A class of gradient-estimation algorithms for reinforcement learning in neural networks.
In Proceedings of the International Conference on Neural Networks, pp. II–601, 1987. Wei Xu, Alan Ritter, William B. Dolan, Ralph Grishman, and Cherry Colin. Paraphrasing for style.
COLING, 2012. Zichao Yang, Zhiting Hu, Chris Dyer, Eric P Xing, and Taylor Berg-Kirkpatrick. Unsupervised text
style transfer using language models as discriminators. In Proceedings of NeurIPS, 2018. Pengcheng Yin, Chunting Zhou, Junxian He, and Graham Neubig. Structvae: Tree-structured latent
variable models for semi-supervised semantic parsing. In Proceedings of ACL, 2018. Tiancheng Zhao, Ran Zhao, and Maxine Eskenazi. Learning discourse-level diversity for neural
dialog models using conditional variational autoencoders. In Proceedings of ACL, 2017.
12

Published as a conference paper at ICLR 2020
A APPENDIX
A.1 MODEL CONFIGURATIONS. We adopt the following attentional encoder-decoder architecture for UNMT, BT+NLL, and our method across all the experiments:
• We use word embeddings of size 128. • We use 1 layer LSTM with hidden size of 512 as both the encoder and decoder. • We apply dropout to the readout states before softmax with a rate of 0.3. • Following Lample et al. (2019), we add a max pooling operation over the encoder hidden
states before feeding it to the decoder. Intuitively the pooling window size would control how much information is preserved during transduction. A window size of 1 is equivalent to standard attention mechanism, and a large window size corresponds to no attention. See Appendix A.2 for how to select the window size. • There is a noise function for UNMT baseline in its denoising autoencoder loss (Lample et al., 2017; 2019), which is critical for its success. We use the default noise function and noise hyperparameters in Lample et al. (2017) when running the UNMT model. For BT+NLL and our method we found that adding the extra noise into the self-reconstruction loss (Eq. 4) is only helpful when the two domains are relatively divergent (decipherment and related language translation tasks) where the language models play a less important role. Therefore, we add the default noise from UNMT to Eq. 4 for decipherment and related language translation tasks only, and do not use any noise for sentiment, author imitation, and formality tasks.
A.2 HYPERPARAMETER TUNING. We vary pooling windows size as {1, 5}, the decaying patience hyperparameter k for selfreconstruction loss (Eq. 4) as {1, 2, 3}. For the baseliens UNMT and BT+NLL, we also try the option of not annealing the self-reconstruction loss at all as in the unsupervised machine translation task (Lample et al., 2018). We vary the weight λ for the NLL term (BT+NLL) or the KL term (our method) as {0.001, 0.01, 0.03, 0.05, 0.1}.
A.3 SENTIMENT TRANSFER EXAMPLE OUTPUTS We list some examples of the sentiment transfer task in Table 6. Notably, the BT+NLL method tends to produce extremely short and simple sentences.
A.4 REPETITIVE EXAMPLES OF BT+NLL In Section 5 we mentioned that the baseline BT+NLL has a low perplexity for some tasks because it tends to generate overly simple and repetitive sentences. From Table 1 we see that two representative tasks are sentiment transfer and formatliy transfer. In Appendix A.3 we have demonstrated some examples for sentiment transfer, next we show some repetitive samples of BT+NLL in Table 7.
13

Published as a conference paper at ICLR 2020

Table 6: Random Sentiment Transfer Examples

Methods
Original UNMT BT+NLL Ours

negative to positive
the cake portion was extremely light and a bit dry . the cake portion was extremely light and a bit spicy . the cake portion was extremely light and a bit dry . the cake portion was extremely light and a bit fresh .

Original UNMT BT+NLL Ours

the “ chicken ” strip were paper thin oddly ﬂavored strips . the “ chicken ” were extra crispy noodles were fresh and incredible . the service was great . the “ chicken ” strip were paper sweet & juicy ﬂavored .

Original UNMT BT+NLL Ours
Original UNMT BT+NLL Ours

if i could give them a zero star review i would ! if i could give them a zero star review i would ! i love this place . i love the restaurant and give a great review i would !
positive to negative
great food , staff is unbelievably nice . no , food is n’t particularly friendly . i will not be back . no apologies , staff is unbelievably poor .

Original UNMT BT+NLL Ours

my wife and i love coming here ! my wife and i do n’t come here ! i will not be back . my wife and i walked out the last time .

Original UNMT BT+NLL Ours

my wife and i love coming here ! my wife and i do n’t come here ! i will not be back . my wife and i walked out the last time .

Original UNMT BT+NLL Ours

the premier hookah lounge of las vegas ! the worst museum of las vegas ! the worst frame shop of las vegas ! the hallways scam lounge of las vegas !

Table 7: Repetitive examples of BT+NLL baseline on Formality transfer.

Original
formal to informal I like Rhythm and Blue music . There’s nothing he needs to change . I enjoy watching my companion attempt to role @-@ play with them . I am watching it right now . That is the key point , that you fell asleep .
informal to formal its a great source just download it . Happy Days , it was the coolest ! I used to play ﬂute but once I started sax , I got hooked . The word you are looking for is ............. strengths Plus you can tell she really cared about her crew .

Transferred
I like her and I don’t know . I don’t know , but I don’t know . I don’t know , but I don’t know . I don’t know , but I don’t know . I don’t know , but I don’t know .
I do not know , but I do not know . I do not know , but I do not know . I do not know , but I do not know . The word you are looking for is : ) Plus you can tell she really cared about her crew .

14

