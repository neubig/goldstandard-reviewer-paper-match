INVESTIGATING SELF-SUPERVISED LEARNING FOR SPEECH ENHANCEMENT AND SEPARATION
Zili Huang1, Shinji Watanabe2, Shu-wen Yang3, Paola Garc¬¥ƒ±a1, Sanjeev Khudanpur1
1 Center for Language and Speech Processing and HLTCOE, Johns Hopkins University, USA 2 Carnegie Mellon University, USA 3 National Taiwan University, Taiwan

arXiv:2203.07960v1 [eess.AS] 15 Mar 2022

ABSTRACT
Speech enhancement and separation are two fundamental tasks for robust speech processing. Speech enhancement suppresses background noise while speech separation extracts target speech from interfering speakers. Despite a great number of supervised learning-based enhancement and separation methods having been proposed and achieving good performance, studies on applying self-supervised learning (SSL) to enhancement and separation are limited. In this paper, we evaluate 13 SSL upstream methods on speech enhancement and separation downstream tasks. Our experimental results on Voicebank-DEMAND and Libri2Mix show that some SSL representations consistently outperform baseline features including the short-time Fourier transform (STFT) magnitude and log Mel Ô¨Ålterbank (FBANK). Furthermore, we analyze the factors that make existing SSL frameworks difÔ¨Åcult to apply to speech enhancement and separation and discuss the representation properties desired for both tasks. Our study is included as the ofÔ¨Åcial speech enhancement and separation downstreams for SUPERB.
Index Terms‚Äî Self-Supervised Learning, Speech Enhancement, Speech Separation
1. INTRODUCTION
Speech enhancement and separation are two fundamental tasks for speech processing. The former suppresses background noises to improve speech quality and intelligibility while the latter extracts target speech from interfering speakers [1, 2]. Both techniques are commonly used as preprocessing steps for tasks like automatic speech recognition (ASR) and speaker diarization, especially under noisy conditions [3, 4, 5].
Over the past few years, deep learning-based methods have developed rapidly and become the mainstream for speech enhancement and separation, among which the supervised learning-based approaches are the most widely used ones. The supervised learningbased methods design objectives to approximate target signals either by estimating the spectral mask [6, 7, 8, 9, 10, 11, 12] or directly predicting the waveform [13, 14, 15, 16, 17, 18, 19].
Despite good performance, the supervised learning-based approaches are data-hungry and require a sufÔ¨Åcient amount of labeled data to perform well, which is expensive. Self-supervised learning has been proposed to address this issue. Unlike supervised learning which directly optimizes for a speciÔ¨Åc task, SSL Ô¨Årst pretrains models on unlabeled data to extract task-agnostic representations and then Ô¨Ånetune models on the target domain. SSL has drawn massive attention due to its great performance and generalization ability. Inspired by the great success of SSL in natural language

processing (NLP) [20, 21] and computer vision (CV) [22, 23], an increasing number of SSL frameworks for speech have been proposed [24, 25, 26] and successfully applied to various downstream tasks including ASR [27], speaker recognition [28], emotion recognition [29], spoken language understanding [30] etc.
To systematically explore the SSL paradigm for speech-related tasks, the Speech processing Universal PERformance Benchmark (SUPERB) [31] is proposed. It evaluates the performance of a shared model across a wide range of speech processing tasks including phoneme recognition, ASR, speaker identiÔ¨Åcation, automatic speaker veriÔ¨Åcation, speaker diarization, intent classiÔ¨Åcation, slot Ô¨Ålling and emotion recognition, with minimal architecture changes and labeled data.
In this paper, we follow the principles of SUPERB [31] and further investigate SSL for speech enhancement and separation. We aim to 1) Compare existing SSL models for speech enhancement and separation tasks. 2) Figure out the desired representation properties and proper pretraining setups for both tasks. We hope our study could cast light on the future design of SSL frameworks for speech enhancement and separation.
2. RELATED WORK
2.1. Speech separation
With the advance of deep learning techniques, speech separation has witnessed rapid improvement. Most of the existing speech separation frameworks are based on supervised learning and can be divided into frequency-domain and time-domain methods. The former estimates time-frequency (T-F) mask for each source based on the STFT features and reconstructs individual sources using inverse short-time Fourier transform (iSTFT). Typical systems include Deep Clustering [10], uPIT [11], Deep Attractor Network [12] etc. The timedomain methods [15, 16, 17, 18, 19] take the waveform of mixtures as input and directly predict the waveform of different sources using an encoder-decoder architecture. They are achieving state-of-the-art results in recent years. For SSL‚Äôs applications in speech separation, in [32], the authors Ô¨Ånd self-supervised pretraining on enhancement data can stabilize the label assignment during separation training and improve separation performance.
2.2. Speech enhancement
Over the past few years, deep learning-based enhancement models have dominated this Ô¨Åeld. Same as speech separation, speech enhancement methods can be divided into frequency and time domain. Among frequency-domain methods, [6] uses a recurrent neural network (RNN) to predict T-F masks. MMSE-GAN [7] generates

T-F masks using a generative adversarial network (GAN). MetricGAN [8] and MetricGAN+ [9] propose a method to train the generator with respect to enhancement evaluation metrics. Among timedomain methods, SEGAN [13] uses a GAN to directly generate the clean waveform. DEMUCS [14] use an encoder-decoder architecture with skip-connections to predict the clean waveform. Unlike separation, where time-domain methods are dominating, frequencydomain methods are still competitive for speech enhancement [9].

Noisy waveform

SSL representation ùë≠ SSL model

RNN

Estimated masks ùë¥ùüè

Estimated STFT
ùë∫ùüè = ùë∫ ‚äó ùë¥ùüè

iSTFT

Clean waveform

STFT feature ùë∫

Fig. 1. T-F mask-based speech enhancement downstream model. For speech separation, we estimate multiple masks from the RNN.

3. METHODOLOGY
3.1. Self-supervised pretrained models
In this paper, we evaluate 13 SSL upstream models from the S3PRL toolkit [31] on speech enhancement and separation downstream tasks. These SSL models can be categorized into generative and contrastive models [33].
Generative models train an encoder to transform input x to representation z, and try to reconstruct x with representation z [33]. The generative models we studied include APC [34], VQ-APC [35], NPC [36], Mockingjay [37] and TERA [38]. APC [34] follows a language model training style, and it uses a RNN to predict the future spectrum. VQ-APC [35] adds a vector quantization (VQ) layer on top of APC model to better control the model capacity. NPC [36] is proposed as a non-autoregressive alternative to APC. It uses convolution architectures and predicts the center frame based on left and right context. Inspired by BERT [21], Mockingjay [37] pretrains a Transformer encoder by predicting masked time frames. TERA [38] extends Mockingjay by also predicting masked frequency bins.
Contrastive models also train an encoder to transform input x to representation z but to measure similarity [33]. Among the contrastive models we use, CPC [39] combines predicting future observations with a contrastive loss InfoNCE. ModiÔ¨Åed CTC [40] proposes several changes to the model architecture to improve training stability and model performance. wav2vec [24] uses the same InfoNCE objective but a larger CNN architecture. vq-wav2vec [41] adds a VQ layer to wav2vec, enabling the direct use of NLP models like BERT on top of it. wav2vec 2.0 [25] incorporates the vqwav2vec and BERT model into one end-to-end framework. Unlike BERT which predicts the masked tokens, wav2vec 2.0 still uses the contrastive loss as the objective. Inspired by DeepCluster [42], HuBERT [26] performs ofÔ¨Çine clustering on representations, enabling it to avoid contrastive loss through directly predicting the cluster labels of the masked positions. UniSpeech-SAT [43] and WavLM [44] models are variants of the HuBERT model. The UniSpeech-SAT model adds an utterance-wise contrastive loss to enhance speaker information modeling and mixes original speech with interfering speakers as data augmentation. The WavLM model adds gated relative position bias to the Transformer structure and also uses utterance mixing augmentation (both interfering speech and noises are added).
In addition to these models, PASE+ [45] borrows ideas from both generative and contrastive models. It performs multiple SSL tasks including feature generation and contrastive learning to learn robust speech representations.

input and extracts speech representations F. Based on F, the RNN predicts the STFT mask M1 of the clean signal. The estimated mask M1 is multiplied with the STFT features S and transformed back to the time domain using iSTFT. The pipeline of separation is almost the same. The only difference is that the RNN will estimate multiple masks for different speakers. We use a three-layer bidirectional long short-term memory network (BLSTM) as the network architecture and the mean square error between the predicted mask and Ideal Non-negative Phase Sensitive Mask (INPSM) [11] is chosen as the objective. INPSM is deÔ¨Åned as

Msinpsm = max 0, |Xs(t, f )| cos|Y(Œ∏(yt,(tf,)f| ) ‚àí Œ∏s(t, f ))

where Y is the mixture signal, Xs is the signal from source s, |X(t, f )| is the STFT magnitude of signal X for time frame t and frequency bin f , Œ∏y and Œ∏s are the phases of the mixture and source s. For speech separation, permutation invariant training (PIT) [46] is utilized to address the speaker permutation problem.
During Ô¨Ånetuning, we follow SUPERB‚Äôs setup [31] to freeze the parameters of the SSL models. Instead of extracting representations from the last hidden layer, we weighted-sum the embeddings from all layers as the Ô¨Ånal representation F similar to ELMo [20].

K‚àí1

F=

wiFi

i=0

where K is the total number of layers, Fi is the representation extracted from the ith layer, wi is the weight for the ith layer. The layer weights w = [w0, w1, w2, ..., wK‚àí1] are learned during the Ô¨Ånetuning stage.
We did not use time-domain methods for the following two reasons. 1) Stride difference: Most of the existing SSL frameworks are using a stride size of 10 or 20ms, which corresponds to 160 to 320 samples for 16kHz audios. Such stride sizes are suitable for phoneme-level and sentence-level tasks such as ASR and speaker recognition but excessively large for time-domain speech enhancement and separation. As a comparison, most time-domain speech separation models are using a stride size smaller than 10 samples. We discuss the effect of stride size in Section 5.2.1. 2) Model complexity: We could not Ô¨Ånd an appropriate time-domain method that is light enough for enhancement and separation. Putting a huge downstream model on top of SSL representations violates SSL‚Äôs principle of simple Ô¨Ånetuning.

3.2. Downstream models for enhancement and separation
Following the principles of SUPERB [31], we constrain our downstream models to be as lightweight as possible. After balancing between computational cost and performance, we choose a T-F maskbased model [11] as our downstream model. As shown in Figure 1, for speech enhancement, the SSL model takes the noisy waveform as

4. EXPERIMENTAL SETUP
4.1. Dataset
For speech enhancement, we use the Voicebank-DEMAND [47], a synthetic dataset created by mixing up clean speech and noise. The clean speech is extracted from the Voice Bank corpus [48], and

the noise is from the Diverse Environments Multichannel Acoustic Noise Database (DEMAND) [49]. The training set contains 28 speakers with 4 signal-to-noise ratios (SNRs) (15, 10, 5, and 0 dB) and the test set contains 2 speakers with 4 SNRs (17.5, 12.5, 7.5, and 2.5 dB). The training set contains 11,572 utterances (9.4h) and the test set contains 824 utterances (0.6h). The lengths of utterances range from 1.1s to 15.1s with an average of 2.9s.
For speech separation, we experiment on the LibriMix [50] dataset. The LibriMix dataset is simulated from the clean speech in LibriSpeech [51] and noise in WHAM! [52]. Since most SSL models only support 16kHz audios as input, we choose the ‚Äú16kHz min‚Äù version of the data. The speech mixtures are created by mixing speech segments from different speakers. The loudness of each utterance is uniformly sampled between -25 and -33 loudness units relative to full scale (LUFS). Random noise samples with loudness between -38 and -30 LUFS are added to the speech mixtures. The training set contains 13,900 utterances with 43.3 hours of speech. In our experiments, we evaluate both ‚Äúsep clean‚Äù and ‚Äúsep noisy‚Äù conditions (separating speech from clean/noisy mixtures).

4.2. Evaluation metric

Speech enhancement requires both speech quality and intelligibility. In our experiment, we report two commonly used metrics: perceptual evaluation of speech quality (PESQ) [53, 54] and short-time objective intelligibility (STOI) [55]. PESQ measures the speech quality, and it predicts the subjective opinion scores of a degraded signal. We use the wide-band version of PESQ implemented in pythonpesq [56]. STOI is a human-designed metric that shows a high correlation with the intelligibility of noisy speech. The range of STOI is from 0 to 100. For both metrics, a higher value indicates better performance.
For speech separation, we use Scale-Invariant Signal-to-Noise Ratio improvement (SI-SNRi) as the evaluation metric. It is a simpler and more robust alternative to Source-to-Distortion Ratio (SDR). SI-SNR is deÔ¨Åned as

(ÀÜs s)s

starget =

2

s

enoise = ÀÜs ‚àí starget

SI-SNR(s, ÀÜs) = 10 log10

starget 2 enoise 2

where s ‚àà RL is t‚àöhe ground truth signal, ÀÜs ‚àà RL is the estimated signal and s = s s denotes the L2 norm of s. SI-SNRi is the SI-SNR improvement against the mixtures, deÔ¨Åned as

SI-SNRi = SI-SNR(s, ÀÜs) ‚àí SI-SNR(s, m)

where m ‚àà RL is the mixture signal.

4.3. Model architecture and Ô¨Ånetuning details
During Ô¨Ånetuning for speech enhancement and separation tasks, we use a three-layer BLSTM as the downstream model. Each BLSTM layer contains 896 hidden units. The output of the BLSTM is further processed by a linear layer and a ReLU activation.
The downstream models are Ô¨Ånetuned for 150k steps with a batch size of 8. We use the Adam optimizer with a learning rate of 1e‚àí4. Following SUPERB‚Äôs [31] setup, we don‚Äôt decay the learning rate during Ô¨Ånetuning. We choose the model with the best performance (highest PESQ for enhancement and SI-SNRi for separation) on the development set.

5. EXPERIMENTAL RESULTS
5.1. Main experiment
We present the speech enhancement and separation results for 13 SSL upstream models in Table 1. For the STFT features, we use a frame size of 512, a frame shift of 160, and perform a 512-point FFT on each frame. The FBANK features are extracted using the torchaudio [57] toolkit with a frame size of 400 and a frame shift of 160. The number of Mel-frequency bins is set to 80. Delta and delta-delta coefÔ¨Åcients are appended, and cepstral mean and variance normalization (CMVN) is applied. The extracted FBANK features have 240 dimensions.
Among the SSL models, wav2vec2, HuBERT, UniSpeechSAT, and WavLM use a stride of 320 samples (20ms) while other models use 160 samples (10ms). Among these SSL models, UniSpeech-SAT/WavLM Base+/Large, wav2vec2 Robust have seen noisy speech in real scenarios while other models are pretrained on the clean speech from audiobooks (LibriSpeech [51] and LibriLight [58]). Our Ô¨Åndings are as follows.
Compared with other tasks such as ASR, the improvement of SSL is not as large for enhancement and separation. For enhancement, only the HuBERT/UniSpeech-SAT/WavLM Large and UniSpeech-SAT Base+ achieve more than 0.05 PESQ improvement over the FBANK baseline. Other SSL models have comparable or even slightly worse performance. For separation, only the UniSpeech-SAT/WavLM Large can consistently outperform (>0.5dB SI-SNRi improvement) the STFT baseline for both sep clean and sep noisy conditions. The possible reasons for some SSL models don‚Äôt perform well include 1) Domain mismatch. Most of the SSL models above are pretrained on the clean speech from audiobooks, and they have never seen noise and speaker overlaps before, making representations less robust to such conditions. For example, the ModiÔ¨Åed CPC and HuBERT Large achieve more than 0.5dB SI-SNRi improvement over the STFT baseline for the sep clean condition. However, their performance largely degrades when separating noisy mixtures. 2) Information Loss. The objectives of some SSL models encourage the systems to focus on global structures and build long-term dependencies. Some local information necessary for signal reconstruction is lost during pretraining.
Pretraining with audios from real scenarios seems to improve the enhancement and separation performance in some cases. The wav2vec2 Robust and WavLM Base+ largely improve the PESQ value for enhancement and slightly improve the SI-SNRi for separation. The UniSpeech-SAT Base+ performs almost the same as the UniSpeech-SAT Base for both tasks. The utterance mixing augmentation doesn‚Äôt seem useful for enhancement, but it improves the separation performance. Combining both techniques and other small modiÔ¨Åcations, the UniSpeech-SAT and WavLM Large models consistently outperform the HuBERT Large model. The UniSpeechSAT Large model has achieved the best results for enhancement and separation tasks (except for the STOI metric). It improves the STFT and FBANK baselines by 0.15 PESQ, 0.8 STOI, 1.24/1.18 dB SISNRi on sep clean/sep noisy conditions.
Vector quantization seems to degrade the separation performance. VQ-APC and vq-wav2vec achieve worse separation performance compared to APC and wav2vec. A potential explanation is that converting continuous speech representations to discrete ones is detrimental to continuous sequence generation tasks like speech separation. Besides this, the TERA model improves both enhancement and separation performance over the Mockingjay, which shows that masked frequency bin prediction is useful for both tasks.

Table 1. Evaluating 13 SSL upstream models on speech enhance-

ment and separation downstream tasks. We measure speech en-

hancement performance with PESQ and STOI on the Voicebank-

DEMAND [48] dataset. For speech separation, we evaluate on

the Libri2Mix [50] dataset and report SI-SNRi for sep clean and

sep noisy conditions.

Enhancement

Separation

Model

PESQ‚Üë STOI‚Üë SI-SNRi (dB)‚Üë

/

sep c sep n

FBANK

2.55

STFT

2.51

PASE+ [45]

2.56

APC [34]

2.56

VQ-APC [35]

2.56

NPC [36]

2.52

Mockingjay [37]

2.53

TERA [38]

2.54

ModiÔ¨Åed CPC [40]

2.57

wav2vec [24]

2.53

vq-wav2vec [41]

2.48

wav2vec2 Base [25]

2.55

wav2vec2 Large

2.52

wav2vec2 Robust [59]

2.59

HuBERT Base [26]

2.58

HuBERT Large

2.64

UniSpeech-SAT Base [43] 2.60

UniSpeech-SAT Base+

2.61

UniSpeech-SAT Large

2.70

WavLM Base [44]

2.56

WavLM Base+

2.60

WavLM Large

2.68

93.6 9.23 7.18 93.6 9.89 8.26 93.9 9.87 8.01 93.4 8.92 7.16 93.4 8.44 6.86 93.1 8.04 6.75 93.4 9.38 7.74 93.6 10.19 8.28 93.7 10.40 8.15 93.8 9.30 7.09 93.6 8.16 6.22 93.9 9.77 7.52 94.0 10.02 8.01 94.1 10.35 8.22 93.9 9.36 7.46 94.2 10.45 8.45 94.0 10.33 8.28 94.2 10.25 8.30 94.4 11.13 9.44 94.0 10.10 7.97 94.0 10.58 8.68 94.5 10.97 9.14

Table 2. Speech enhancement and separation performance of the

STFT and HuBERT Base/Large upstreams with different stride

sizes. For separation, we only consider the sep clean condition.

Upstream

Stride PESQ STOI SI-SNRi (dB)

STFT

160

320

HuBERT Base 160 320

HuBERT Large 160 320

2.51 93.6 2.42 93.3 2.68 94.1 2.58 93.9 2.80 94.5 2.64 94.2

9.89 8.79 10.47 9.36 11.26 10.45

5.2. Ablation studies
In this section, we use the HuBERT model as an example to study the factors that inÔ¨Çuence the SSL model‚Äôs performance on speech enhancement and separation tasks.
5.2.1. Effect of stride size
As shown in Table 2, the stride size has a huge impact on speech enhancement and separation performance. For STFT, after we increase the stride size from 160 (10ms) to 320 (20ms), the PESQ, STOI, SI-SNRi (dB) degrade by 0.1, 0.3, and 1.1 respectively. The original stride of HuBERT Base/Large model is 320 (20ms). We upsample the representations by reducing the stride of the last convolution layer from 2 to 1. After upsampling, the HuBERT Base/Large models signiÔ¨Åcantly outperform the original results. For all strides and metrics, the HuBERT models consistently outperform the STFT baseline. Note that even after upsampling, the stride size we use is still much larger than most time-domain enhancement and separation

Table 3. The separation performance of Conv-Tasnet [15] on the

16kHz min Libri2Mix (sep clean condition) with different stride

sizes. We use the Conv-Tasnet implementation from Asteroid [60]

and adjust the stride size in the 1d convolution encoder

Stride

8

40 160 320

SI-SNRi (dB) 14.34 13.63 9.64 8.22

systems. As a comparison, we present the correlation between stride size and SI-SNRi for Conv-Tasnet [15] in Table 3. The vanilla ConvTasnet (with a stride of 8) achieves 14.34dB SI-SNRi on Libri2Mix. However, the performance degrades a lot as the stride size increases. When the stride size is larger than 160, the SI-SNRi of Conv-Tasnet is even lower than our STFT baseline.

5.2.2. Effect of layer weighting
For SSL models, different layers usually capture different speech information, which is used for different tasks. In this section, we extract speech representations from different layers of the HuBERT Large model and perform speech enhancement and separation on top of them. As shown in Table 4, the performance gap between different layers is signiÔ¨Åcant. For speech enhancement, the embeddings from the 12th layer obtain the best PESQ and STOI numbers. It achieves around 0.1 PESQ and 0.6 STOI improvements compared to the last hidden layer. For speech separation, the performance declines as the layer becomes deeper, and the Ô¨Årst layer outperforms the last layer by 4.21dB. The weighted-sum representations further improve the enhancement and separation results, and we observe that for most SSL models lower layers generally obtain higher weights. One possible explanation is that some local signal information necessary for speech reconstruction tasks is lost in deeper layers because it is restricted to local speech areas and less useful for objectives like contrastive learning and masked/future context prediction. Fully exploiting the information captured in different layers is important for speech enhancement and separation downstreams.

Table 4. Speech enhancement and separation performance of differ-

ent layer embeddings from the HuBERT Large model. For separa-

tion, we only consider the sep clean conition.

Upstream

Layer PESQ STOI SI-SNRi (dB)

0

2.52 93.9

HuBERT Large

12

24

2.58 94.0 2.49 93.4

weighted 2.64 94.2

9.96 8.58 5.75 10.45

6. CONCLUSION
In this paper, we investigate SSL for speech enhancement and separation. We evaluate 13 SSL upstream models on speech enhancement and separation with a T-F mask prediction downstream. Our experimental results reveal that 1) Although SSL models are not designed for waveform generation tasks like enhancement and separation, some of them achieve remarkable improvements over the STFT magnitudes and FBANKs. 2) Pretraining with audios from real scenarios and utterance mixing augmentation can increase the robustness of speech representations and improve the enhancement and separation performances. 3) Enhancement and separation require Ô¨Åne-grained waveform information to reconstruct the clean signal, which is often lost in deeper layers of SSL models. In the future, we will study SSL representations for time-domain methods.

7. REFERENCES
[1] DeLiang Wang and Jitong Chen, ‚ÄúSupervised speech separation based on deep learning: An overview,‚Äù IEEE/ACM Transactions on Audio, Speech, and Language Processing, vol. 26, no. 10, pp. 1702‚Äì1726, 2018.
[2] Daniel Michelsanti et al., ‚ÄúAn overview of deep-learning-based audio-visual speech enhancement and separation,‚Äù TASLP, 2021.
[3] Shinji Watanabe et al., ‚ÄúChime-6 challenge: Tackling multispeaker speech recognition for unsegmented recordings,‚Äù arXiv preprint arXiv:2004.09249, 2020.
[4] Ivan Medennikov et al., ‚ÄúThe stc system for the chime-6 challenge,‚Äù in CHiME 2020 Workshop on Speech Processing in Everyday Environments, 2020.
[5] Yuxuan Wang et al., ‚ÄúUstc-nelslip system description for dihard-iii challenge,‚Äù arXiv preprint arXiv:2103.10661, 2021.
[6] Felix Weninger et al., ‚ÄúSpeech enhancement with lstm recurrent neural networks and its application to noise-robust asr,‚Äù in International conference on latent variable analysis and signal separation. Springer, 2015, pp. 91‚Äì99.
[7] Meet H Soni, Neil Shah, and Hemant A Patil, ‚ÄúTime-frequency masking-based speech enhancement using generative adversarial network,‚Äù in ICASSP. IEEE, 2018, pp. 5039‚Äì5043.
[8] Szu-Wei Fu et al., ‚ÄúMetricgan: Generative adversarial networks based black-box metric scores optimization for speech enhancement,‚Äù in International Conference on Machine Learning. PMLR, 2019, pp. 2031‚Äì2041.
[9] Szu-Wei Fu et al., ‚ÄúMetricgan+: An improved version of metricgan for speech enhancement,‚Äù arXiv preprint arXiv:2104.03538, 2021.
[10] John R Hershey et al., ‚ÄúDeep clustering: Discriminative embeddings for segmentation and separation,‚Äù in ICASSP. IEEE, 2016, pp. 31‚Äì35.
[11] Morten Kolb√¶k et al., ‚ÄúMultitalker speech separation with utterance-level permutation invariant training of deep recurrent neural networks,‚Äù TASLP, vol. 25, no. 10, pp. 1901‚Äì1913, 2017.
[12] Zhuo Chen, Yi Luo, and Nima Mesgarani, ‚ÄúDeep attractor network for singlemicrophone speaker separation,‚Äù in ICASSP. IEEE, 2017, pp. 246‚Äì250.
[13] Santiago Pascual, Antonio Bonafonte, and Joan Serra, ‚ÄúSEGAN: Speech enhancement generative adversarial network,‚Äù arXiv preprint arXiv:1703.09452, 2017.
[14] Alexandre Defossez, Gabriel Synnaeve, and Yossi Adi, ‚ÄúReal time speech enhancement in the waveform domain,‚Äù in Interspeech, 2020.
[15] Yi Luo and Nima Mesgarani, ‚ÄúConv-tasnet: Surpassing ideal time‚Äìfrequency magnitude masking for speech separation,‚Äù IEEE/ACM transactions on audio, speech, and language processing, vol. 27, no. 8, pp. 1256‚Äì1266, 2019.
[16] Yi Luo, Zhuo Chen, and Takuya Yoshioka, ‚ÄúDual-path rnn: efÔ¨Åcient long sequence modeling for time-domain single-channel speech separation,‚Äù in ICASSP. IEEE, 2020, pp. 46‚Äì50.
[17] Jingjing Chen, Qirong Mao, and Dong Liu, ‚ÄúDual-path transformer network: Direct context-aware modeling for end-to-end monaural speech separation,‚Äù in Interspeech, 2020.
[18] Cem Subakan et al., ‚ÄúAttention is all you need in speech separation,‚Äù in ICASSP 2021. IEEE, 2021, pp. 21‚Äì25.
[19] Neil Zeghidour and David Grangier, ‚ÄúWavesplit: End-to-end speech separation by speaker clustering,‚Äù TASLP, vol. 29, pp. 2840‚Äì2849, 2021.
[20] Matthew Peters et al., ‚ÄúDeep contextualized word representations,‚Äù in NAACL, 2018, pp. 2227‚Äì2237.
[21] Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova, ‚ÄúBert: Pre-training of deep bidirectional transformers for language understanding,‚Äù in NAACL-HLT (1), 2019.
[22] Ishan Misra and Laurens van der Maaten, ‚ÄúSelf-supervised learning of pretextinvariant representations,‚Äù in CVPR, 2020, pp. 6707‚Äì6717.
[23] Kaiming He et al., ‚ÄúMomentum contrast for unsupervised visual representation learning,‚Äù in CVPR, 2020, pp. 9729‚Äì9738.
[24] Steffen Schneider, Alexei Baevski, Ronan Collobert, and Michael Auli, ‚Äúwav2vec: Unsupervised pre-training for speech recognition,‚Äù in Interspeech, 2019.
[25] Alexei Baevski et al., ‚Äúwav2vec 2.0: A framework for self-supervised learning of speech representations,‚Äù in NeurIPS, 2020.
[26] Wei-Ning Hsu et al., ‚ÄúHuBERT: Self-supervised speech representation learning by masked prediction of hidden units,‚Äù arXiv preprint arXiv:2106.07447, 2021.
[27] Alexei Baevski and Abdelrahman Mohamed, ‚ÄúEffectiveness of self-supervised pre-training for asr,‚Äù in ICASSP. IEEE, 2020, pp. 7694‚Äì7698.
[28] Zhiyun Fan, Meng Li, Shiyu Zhou, and Bo Xu, ‚ÄúExploring wav2vec 2.0 on speaker veriÔ¨Åcation and language identiÔ¨Åcation,‚Äù arXiv preprint arXiv:2012.06185, 2020.
[29] Leonardo Pepino, Pablo Riera, and Luciana Ferrer, ‚ÄúEmotion recognition from speech using wav2vec 2.0 embeddings,‚Äù arXiv preprint arXiv:2104.03502, 2021.

[30] Cheng-I Lai et al., ‚ÄúSemi-supervised spoken language understanding via selfsupervised speech and language model pretraining,‚Äù in ICASSP. IEEE, 2021, pp. 7468‚Äì7472.
[31] Shu wen Yang et al., ‚ÄúSUPERB: Speech Processing Universal PERformance Benchmark,‚Äù in Proc. Interspeech 2021, 2021, pp. 1194‚Äì1198.
[32] Sung-Feng Huang et al., ‚ÄúSelf-supervised pre-training reduces label permutation instability of speech separation,‚Äù arXiv preprint arXiv:2010.15366, 2020.
[33] Xiao Liu et al., ‚ÄúSelf-supervised learning: Generative or contrastive,‚Äù IEEE Transactions on Knowledge and Data Engineering, 2021.
[34] Yu-An Chung et al., ‚ÄúAn unsupervised autoregressive model for speech representation learning,‚Äù in INTERSPEECH, 2019.
[35] Yu-An Chung, Hao Tang, and James Glass, ‚ÄúVector-quantized autoregressive predictive coding,‚Äù in INTERSPEECH, 2020.
[36] Alexander H Liu et al., ‚ÄúNon-autoregressive predictive coding for learning speech representations from local dependencies,‚Äù arXiv preprint arXiv:2011.00406, 2020.
[37] Andy T Liu et al., ‚ÄúMockingjay: Unsupervised speech representation learning with deep bidirectional transformer encoders,‚Äù in ICASSP. IEEE, 2020, pp. 6419‚Äì 6423.
[38] Andy T Liu, Shang-Wen Li, and Hung-yi Lee, ‚ÄúTera: Self-supervised learning of transformer encoder representation for speech,‚Äù TASLP, vol. 29, pp. 2351‚Äì2366, 2021.
[39] Aaron van den Oord, Yazhe Li, and Oriol Vinyals, ‚ÄúRepresentation learning with contrastive predictive coding,‚Äù arXiv preprint arXiv:1807.03748, 2018.
[40] Morgane Riviere et al., ‚ÄúUnsupervised pretraining transfers well across languages,‚Äù in ICASSP. IEEE, 2020, pp. 7414‚Äì7418.
[41] Alexei Baevski et al., ‚Äúvq-wav2vec: Self-supervised learning of discrete speech representations,‚Äù in ICLR, 2020.
[42] Mathilde Caron et al., ‚ÄúDeep clustering for unsupervised learning of visual features,‚Äù in ECCV, 2018, pp. 132‚Äì149.
[43] Sanyuan Chen et al., ‚ÄúUnispeech-sat: Universal speech representation learning with speaker aware pre-training,‚Äù arXiv preprint arXiv:2110.05752, 2021.
[44] Sanyuan Chen et al., ‚ÄúWavlm: Large-scale self-supervised pre-training for full stack speech processing,‚Äù arXiv preprint arXiv:2110.13900, 2021.
[45] Mirco Ravanelli et al., ‚ÄúMulti-task self-supervised learning for robust speech recognition,‚Äù in ICASSP. IEEE, 2020, pp. 6989‚Äì6993.
[46] Dong Yu et al., ‚ÄúPermutation invariant training of deep models for speakerindependent multi-talker speech separation,‚Äù in ICASSP. IEEE, 2017, pp. 241‚Äì 245.
[47] Cassia Valentini-Botinhao et al., ‚ÄúNoisy speech database for training speech enhancement algorithms and tts models,‚Äù 2017.
[48] Christophe Veaux et al., ‚ÄúThe voice bank corpus: Design, collection and data analysis of a large regional accent speech database,‚Äù in O-COCOSDA/CASLRE. IEEE, 2013, pp. 1‚Äì4.
[49] Joachim Thiemann et al., ‚ÄúThe diverse environments multi-channel acoustic noise database (demand): A database of multichannel environmental noise recordings,‚Äù in Proceedings of Meetings on Acoustics ICA2013. Acoustical Society of America, 2013, vol. 19, p. 035081.
[50] Joris Cosentino et al., ‚ÄúLibrimix: An open-source dataset for generalizable speech separation,‚Äù arXiv preprint arXiv:2005.11262, 2020.
[51] Vassil Panayotov et al., ‚ÄúLibrispeech: an asr corpus based on public domain audio books,‚Äù in ICASSP. IEEE, 2015, pp. 5206‚Äì5210.
[52] Gordon Wichern et al., ‚ÄúWham!: Extending speech separation to noisy environments,‚Äù arXiv preprint arXiv:1907.01160, 2019.
[53] Antony W Rix et al., ‚ÄúPerceptual evaluation of speech quality (pesq)-a new method for speech quality assessment of telephone networks and codecs,‚Äù in ICASSP. IEEE, 2001, vol. 2, pp. 749‚Äì752.
[54] Recommendation ITU-T P ITU, ‚Äú862.2: Wideband extension to recommendation p. 862 for the assessment of wideband telephone networks and speech codecs,‚Äù 2007.
[55] Cees H Taal et al., ‚ÄúA short-time objective intelligibility measure for timefrequency weighted noisy speech,‚Äù in ICASSP. IEEE, 2010, pp. 4214‚Äì4217.
[56] Miao Wang et al., ‚Äúpython-pesq,‚Äù https://github.com/ludlows/python-pesq, 2019.
[57] Yao-Yuan Yang et al., ‚ÄúTorchaudio: Building blocks for audio and speech processing,‚Äù arXiv preprint arXiv:2110.15018, 2021.
[58] Jacob Kahn et al., ‚ÄúLibri-light: A benchmark for asr with limited or no supervision,‚Äù in ICASSP. IEEE, 2020, pp. 7669‚Äì7673.
[59] Wei-Ning Hsu et al., ‚ÄúRobust wav2vec 2.0: Analyzing domain shift in selfsupervised pre-training,‚Äù arXiv preprint arXiv:2104.01027, 2021.
[60] Manuel Pariente et al., ‚ÄúAsteroid: the PyTorch-based audio source separation toolkit for researchers,‚Äù in Proc. Interspeech, 2020.

