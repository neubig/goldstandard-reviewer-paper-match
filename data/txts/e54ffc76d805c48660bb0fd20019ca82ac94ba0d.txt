arXiv:2012.13255v1 [cs.LG] 22 Dec 2020

INTRINSIC DIMENSIONALITY EXPLAINS THE EFFECTIVENESS OF LANGUAGE MODEL FINE-TUNING
Armen Aghajanyan, Luke Zettlemoyer, Sonal Gupta Facebook {armenag,lsz,sonalgupta}@fb.com
ABSTRACT
Although pretrained language models can be ﬁne-tuned to produce state-of-theart results for a very wide range of language understanding tasks, the dynamics of this process are not well understood, especially in the low data regime. Why can we use relatively vanilla gradient descent algorithms (e.g., without strong regularization) to tune a model with hundreds of millions of parameters on datasets with only hundreds or thousands of labeled examples? In this paper, we argue that analyzing ﬁne-tuning through the lens of intrinsic dimension provides us with empirical and theoretical intuitions to explain this remarkable phenomenon. We empirically show that common pre-trained models have a very low intrinsic dimension; in other words, there exists a low dimension reparameterization that is as effective for ﬁne-tuning as the full parameter space. For example, by optimizing only 200 trainable parameters randomly projected back into the full space, we can tune a RoBERTa model to achieve 90% of the full parameter performance levels on MRPC. Furthermore, we empirically show that pre-training implicitly minimizes intrinsic dimension and, perhaps surprisingly, larger models tend to have lower intrinsic dimension after a ﬁxed number of pre-training updates, at least in part explaining their extreme effectiveness. Lastly, we connect intrinsic dimensionality with low dimensional task representations and compression based generalization bounds to provide intrinsic-dimension-based generalization bounds that are independent of the full parameter count.
1 INTRODUCTION
Pre-trained language models (Radford et al., 2019; Devlin et al., 2018; Liu et al., 2019; Lewis et al., 2019; 2020) provide the defacto initialization for modeling most existing NLP tasks. However, the process of ﬁne-tuning them on often very small target task datasets remains somewhat mysterious. Why can we use relatively vanilla gradient descent algorithms (e.g., without strong regularization) to tune a model with hundreds of millions of parameters on datasets with only hundreds or thousands of labeled examples?
We propose intrinsic dimensionality as a new lens through which ﬁne-tuning can be analyzed (Li et al., 2018). An objective function’s intrinsic dimensionality describes the minimum dimension needed to solve the optimization problem it deﬁnes to some precision level. In the context of pretrained language models, measuring intrinsic dimensional will tell us how many free parameters are required to closely approximate the optimization problem that is solved while ﬁne-tuning for each end task. For example, we will show that 200 parameters (randomly projected back into the full parameter space) are enough to represent the problem of tuning a RoBERTa model to within 90% of the performance of the full model. More generally, we also describe a set of strong empirical and theoretical connections between intrinsic dimensionality, number of parameters, pre-training, and generalization.
We ﬁrst empirically show that standard pre-trained models can learn a large set of NLP tasks with very few parameters and that the process of pre-training itself implicitly minimizes the intrinsic dimension of later tuning for different NLP tasks. We continue by conducting a study across over a dozen various pre-trained models to show that number of parameters strongly inversely correlates with intrinsic dimensionality, at least in part to justify the extreme effectiveness of such models. We
1

interpret pre-training as providing a framework that learns how to compress the average NLP task. Finally, we connect intrinsic dimensional with low dimensional task representations and compression based generalization bounds to provide intrinsic-dimension-based generalization bounds that are independent of the full parameter count, further justifying why these methods generalize so well in practice across tasks.
The contributions of our paper are the following:
• We empirically show that common NLP tasks within the context of pre-trained representations have an intrinsic dimension several orders of magnitudes less than the full parameterization.
• We propose a new interpretation of intrinsic dimension as the downstream ﬁne-tuning task’s minimal description length within the framework of the pre-trained model. Within this interpretation, we empirically show that the process of pre-training implicitly optimizes the description length over the average of NLP tasks, without having direct access to those same tasks.
• We measure the intrinsic dimension of a large set of recently developed pre-training methods. We discover that there exists a fortuitous trend where larger models tend to have a smaller intrinsic dimension.
• Lastly, we show that compression based generalization bounds can be applied to our intrinsic dimension framework to provide generalization bounds for large pre-trained models independent of the pre-trained model parameter count.

2 RELATED WORK
Calculating the intrinsic dimension of an objective function was proposed Li et al. (2018). In their paper, they analyzed the impact of various architectures on the intrinsic dimensionality of their objective. Our work is a direct extension of this paper, focusing on analyzing pre-trained representations instead.
There is a large collection of literature analyzing pre-trained models from the perspective of capacity. For example, a recent line of work has shown that pre-trained models such as BERT are redundant in their capacity, allowing for signiﬁcant sparsiﬁcation without much degradation in end metrics (Chen et al., 2020; Prasanna et al., 2020; Desai et al., 2019). Houlsby et al. (2019) showed that ﬁnetuning top layers of pre-trained models is not effective and that alternate methods allow ﬁne-tuning effectively with a couple of percent of the parameters. Furthermore, we can view computing the intrinsic dimensionality as a continuous relaxation of the sparsiﬁcation problem.
Moreover, standard approaches towards ﬁne-tuning seem to have non-trivial effects on the generalization of pre-trained representations (Aghajanyan et al., 2020). A holistic explanatory picture of the successes of ﬁne-tuning has not yet been painted. A clear understanding of the underlying mechanisms which lead to the incredible generalization of ﬁne-tuned pre-trained representations is currently missing. Moreover, we still do not understand why various pre-training methodology manifests in universally useful representations.

3 INTRINSIC DIMENSIONALITY OF FINETUNING

Background An objective function’s intrinsic dimension measures the minimum number of pa-
rameters needed to reach satisfactory solutions to the respective objective (Li et al., 2018). Alterna-
tively, the intrinsic dimension represents the lowest dimensional subspace in which one can optimize
the original objective function to within a certain level of approximation error. Computing the exact
intrinsic dimensional of the objective function is computation intractable; therefore, we resort to heuristic methods to calculate an upper bound. Let θD = [θ0, θ1, ..., θm] be a set of D parameters that parameterize some model f (·, θ). Instead of optimizing the empirical loss in the original parameterization (θD), the subspace method ﬁne-tunes the model via the following re-parametrization in the lower-dimensionsal d-dimensions:

θD = θ0D + P (θd)

(1)

2

where P : Rd → RD projects from a parameter from a lower dimensional d to the higher dimensional D. Intuitively, we do an arbitrary random projection onto a much smaller space; usually, a
linear projection, we then solve the optimization problem in that smaller subspace. If we reach a
satisfactory solution, we say the dimensionality of that subspace is the intrinsic dimension. This
methodology was proposed in the seminal paper by Li et al. (2018). Concretely Li et al. (2018) proposed 3 various actualizations of P ; a random linear dense projection (θdW ), random linear sparse projection(θdWsparse) and random linear projection via the Fastfood transform (Le et al., 2013).

We will primarily use the Fastfood transform, deﬁned as:

θD = θ0D + θdM

M = HGΠHB

(2)

The factorization of M consists of H, a Hadamard matrix, G, a random diagonal matrix with independent standard normal entries, B a random diagonal matrix with equal probability ±1 entries, and Π a random permutation matrix. Furthermore, the matrix multiplication with a Hadamard matrix can be computed in O(D log d) via the Fast Walsh-Hadamard Transform. Note that everything but θd is ﬁxed; therefore, the optimization problem lies only in d-dimensions. Note that if we place a constraint of M being a binary matrix, we recover the sparsiﬁcation problem; therefore, we can view ﬁnding intrinsic dimensionality as a continuous relaxation of the sparsiﬁcation problem.

The standard method of measuring the intrinsic dimensionality of an objective as proposed by Li
et al. (2018) requires searching over various d, training using standard SGD over the subspace reparameterization θD and selecting the smallest d which provides us with a satisfactory solution (d90). Li et al. (2018) deﬁned the satisfactory solution as being 90% of the full training metric. For ex-
ample, if we reach 85% accuracy training a model with all of its parameters, the goal is to ﬁnd the
smallest d, which would reach 0.9 ∗ 85% = 76.5% accuracy; we call this dimension d90. Let us also note that by merely initializing θd = 0 we recover the original parameterization θ0D which in the context of ﬁne-tuning represents the original weights of the pre-trained model.

The way Li et al. (2018) deﬁne a satisfactory solution reduces the dependence of the dataset’s size on the calculation of intrinsic dimension. For a small dataset, we will generally have worse end metrics; therefore, we have a lower d90 cut-off; inversely, a larger dataset will require a more non-trivial d90 cut-off.

Structure Aware Intrinsic Dimension Due to the large size of pre-trained language models (generally in the hundreds of millions of parameters), the only computationally reasonable subspace optimization method is one that utilizes the Fastfood transform. For example, if we are interested in subspace training with d = 1000 for the RoBERTa-Large model using a dense matrix, we would require 1.42 terabytes of memory to store just the projection matrix.

Unfortunately, the method of ﬁnding the intrinsic dimension proposed by Li et al. (2018) is unaware of the layer-wise structure of the function parameterized by θ. Existing literature argues that in attention-based pre-trained models, individual layers specialize separately (Clark et al., 2019); therefore, it is useful to incorporate a notion of structure when computing d90. We deﬁne StructureAware Intrinsic Dimension (SAID) as the following

θiD = θ0D,i + λiP (θd−m)i

(3)

For m layers, we trade m parameters from our subspace parameter θd to allow for layer-wise scaling through jointly learned λ, thus θd becomes [θd−m, λ]. This allows the SAID method to focus a larger capacity of θd−m towards speciﬁc layers what might carry more relevant information for the task at hand. Conversely, we will refer to the layer unaware method (Equation 2) as the Direct Intrinsic Dimension (DID) method.

4 INTRINSIC DIMENSIONALITY OF COMMON NLP TASKS
4.1 SENTENCE PREDICTION
We ﬁrst empirically calculate the intrinsic dimension of various pre-trained models on a set of sentence prediction tasks from the GLUE Benchmark (Wang et al., 2018). We focus on analyzing BERT (Devlin et al., 2018) and RoBERTa (Liu et al., 2019) at both the base and large model sizes.

3

0.90

Model BERT-Base

BERT-Large

RoBERTa-Base

0.85

RoBERTa-Large

MRPC Intrinsic Dimension

Accuracy

0.80

0.75

0.70 102

Model

0.90

BERT-Base

BERT-Large

RoBERTa-Base

0.85

RoBERTa-Large

0.80

0.75

0.70

0.65

102

103

d

104

QQP Intrinsic Dimension

103

d

104

105 105

Accuracy

Figure 1: The following ﬁgures show the evaluation accuracy on two datasets and four models across a range of dimensions d for the DID method. The horizontal lines in each ﬁgure represent the 90% solution of the respective full model.

We chose to experiment with MRPC (Dolan & Brockett, 2005) and QQP (Iyer et al., 2017) as reference examples of small and large tuning datasets. MRPC is a binary classiﬁcation task for predicting semantic equivalency for two paraphrases with roughly 3700 training samples, while QQP is a binary classiﬁcation task for predicting semantic equality of two questions, with roughly 363k samples. For every dataset and every model, we run 100 subspace trainings with d ranging from 10 to 10000 on a log scale. For every training run, we do a small hyperparameter search across four learning rates. We initialize every θd to the zero vector to allow for our starting point to be the original pre-trained model. Our subspace optimization method also operates over the randomly initialized sentence classiﬁcation head to ensure we have exactly d parameters to optimize.
We use both the SAID and DID subspace optimization methods, which we implemented in the Huggingface Transformers library (Wolf et al., 2019). We present the results in Figure 1.

4.2 ANALYSIS

The ﬁrst takeaway is the incredible low dimensionality of viable solutions. With

SAID

DID

RoBERTa-Large, we can reach 90% of the Model

MRPC QQP MRPC QQP

full ﬁne-tuning solution of MRPC using roughly 200 parameters and 800 parameters

BERT-Base BERT-Large

1608 8030 1037 1200

1861 9295 2493 1389

for QQP (Table 1). Recall that our approximation of intrinsic dimension is necessarily crude by using random projections and re-

RoBERTa-Base RoBERTa-Large

896 896 207 774

1000 1389 322 774

stricting them to the use of Fastfood transform; therefore, it is likely that the true intrinsic dimension is much lower.

Table 1: Estimated d90 intrinsic dimension for a set of sentence prediction tasks and common pre-trained models. We present both the SAID and DID methods.

Furthermore, RoBERTa consistently out-

performs BERT across various subspace di-

mensions d while having more parameters. We leave a more in-depth analysis of model parameter

size on intrinsic dimensionality to a later section (§5.2).

Lastly we see that adding a notion of structure in the computation of intrinsic dimension is beneﬁcial with the SAID method consistently improving over the structure unaware DID method.

4

d90

RoBERTa Pre-Training Intrinsic Dimension Trajectory

106

105

Dataset

MRPC

104

QQP

Yelp

SST-2

103

MNLI

ANLI (R1+R2+R3)

40000

60000

80000

100000

U1p2d0a0t0e0s

140000

160000

180000

200000

Figure 2: Every 10k updates of RoBERTa-Base that we trained from scratch, we compute d90 for six datasets; MRPC, QQP, Yelp Polarity, SST-2, MNLI, and ANLI. If we were unable to compute a d90 for a speciﬁc checkpoint, we do not plot the point, hence some datasets start at later points. Unable to compute means either we could not ﬁne-tune the full checkpoint to accuracy above majority class or stabilize SAID training.

5 INTRINSIC DIMENSION, PRE-TRAINING, AND GENERALIZATION GAP
One interpretation of the intrinsic parameter vector is that it encodes the task at hand with respect to the original pre-trained representations. Therefore, we can interpret d as the minimal description length of the task within the framework dictated by the pre-trained representations (Hinton & Zemel, 1993). Under this interpretation of intrinsic dimensionality, we hypothesize that pre-training is implicitly lowering the intrinsic dimensionality of the average NLP task, and therefore compress the minimal description length of those same tasks.
What do we more precisely mean by intrinsic parameter encoding a task within the framework provided by the pre-trained representations? Traditionally, a ﬁnetuned model (e.g. for a classiﬁcation tasks) simply consists of a classiﬁcation head g, parameterized by wg applied to ﬁne-tuned representations f , parameterized by wf per sample x. Therefore, to fully describe a task, we need to pack together parameterizations and weights {g, f, wg, wf }. This model description is completely decoupled from the original weights of the pre-trained representation wf0 , therefore to represent n classiﬁcation tasks, we need to maintain n {wg, wf }; additionally, the task representation is incredibly high dimensional. Conversely, ﬁne-tuning utilizing SAID in d-dimensions requires storing only θd per task, a single random seed used to generate M and the original pre-trained weights wf0 . Therefore, we can represent arbitrary NLP tasks within a single pre-trained model framework with d + 1 parameters.
For example, in the last section, we represented MRPC with roughly 200 parameters, which translates to needing less than a kilobyte of data to encode a complex natural language task within the framework provided by RoBERTa.
We hypothesize that the better the pre-trained models are, the fewer bits (description length) are needed to represent the average NLP task, as we will demonstrate empirically in the next section.
5.1 PRE-TRAINING INTRINSIC DIMENSION TRAJECTORY
To verify our hypothesis of pre-training optimizing intrinsic dimension, we retrain a RoBERTa-Base from scratch and measure various NLP tasks’ intrinsic dimensions using the SAID method across various checkpoints. We completely replicate the setting as described by (Liu et al., 2019) apart from only training for a total of 200k steps (instead of 500k) with half the batch size (1k). To calculate the intrinsic dimension more efﬁciently, we reuse the best learning rates discovered in Section 4 for d < 10000 and use a ﬁxed learning rate for anything else. To ﬁnd d90 we do a binary search across d per each checkpoint, with a minimum d of 100 and a maximum of 4 million. The “full solution” that we use when deciding d90 cut-off is computed by ﬁne-tuning the checkpointed model in the standard way. We compute SAID on six datasets; MRPC, QQP, Yelp Polarity (Zhang et al., 2015), SST-2 (Socher et al., 2013), MNLI (Williams et al., 2018) and ANLI using all rounds of data (Nie et al., 2019).
5

We present our results in Figure 2. We see that the intrinsic dimensionality of RoBERTa-Base monotonically decreases as we continue pre-training. We do not explicitly optimize for intrinsic dimensionality, speciﬁcally during pre-training (the language model does not have access to downstream datasets!), but none-the-less the intrinsic dimension of these downstream tasks continues to decrease.
More so, tasks that are easier to solve consistently show lower intrinsic dimensionality across all checkpoints, for example, Yelp Polarity vs. the notoriously tough ANLI dataset. The correlation between tasks traditionally hard for RoBERTa and their large intrinsic dimension hints at a connection between generalization and intrinsic dimension. We will discuss generalization further in Section §5.3.
Given our task representation interpretation of intrinsic dimensionality, we argue that the large scale training of Masked Language Models (MLM) learns generic and distributed enough representations of language to facilitate downstream learning of highly compressed task representations. Furthermore, we argue for another perspective of pre-training learning representations that form a compression framework with respect to various NLP tasks.

5.2 PARAMETER COUNT AND INTRINSIC DIMENSION

We would also like to measure the relationships between the parameter count of arbitrary pre-trained models and the intrinsic dimension of downstream NLP tasks. The optimal experiment to run would be to ﬁx the pre-training method, e.g., MLM RoBERTa style, vary the architecture size from small to very big, and compute the intrinsic dimension of a group of tasks at every size of the model. Unfortunately, such an experiment is computationally infeasible due to the need to train many RoBERTa models.
Due to these constraints, we opt to do an empirical study over existing pre-trained models, regardless of the pre-training method. We show that the trend is strong enough to overcome differences in training methodology. We select the following pre-trained models in our study: BERT (Devlin et al., 2018), RoBERTa (Liu et al., 2019), BART (Lewis et al., 2019), Electra (Clark et al., 2020), Albert (Lan et al., 2019), XLNet (Yang et al., 2019), T5 (Raffel et al., 2019), and XLM-R (Conneau et al., 2019). Furthermore, we selected various sizes of these models, as available publicly within the HuggingFace Transformers library (Wolf et al., 2019).
We used the MRPC dataset and computed intrinsic dimension for every pre-trained model utilizing the same binary search methodology mentioned in the previous section with additional small hyperparameter searches across learning rate (due to the wide range of learning rates needed by various models).

105 Albert-B Albert-L

lbert-XL

all

104

A

ectra-B

T5-Sm

El NeTt-B-Base LR

AR-BT-B

XE B a

-XXL -B NetL-L

103

B RoBERT

Albert XLM-R BXLERT-

XLM-R T5-L

RoBERBTaA-RLT-L T5-3B

102

d90

101 108 Number of Parameters 109
Figure 3: We calculate the intrinsic dimension for a large set of pre-trained models using the SAID method on the MRPC dataset.
We present our results in Figure 3. We see a strong general trend that as the number of parameters increases, the intrinsic dimension of ﬁne-tuning on MRPC decreases. We ran this experiment on other datasets to ensure that this is not an artifact of the dataset. Our experiments showed the same trend; we refer to the Appendix for all trends per dataset.
6

Eval Accuracy

0.9

0.8

0.7

Dataset

0.6

MRPC

0.5

QQP Yelp

0.4

SST-2 MNLI

0.3

ANLI (R1+R2+R3)

103

RoBERTa Pre-Training Generalization Study

104

d90

105

106

Figure 4: We plot the evaluation accuracy of six datasets across various intrinsic dimensionalities. There is a strong general trend that pre-trained models that are able to attain lower intrinsic dimensions generalize better.

RoBERTa Pre-Training Generalization Study
25.0%

20.0%

Dataset

15.0%

MRPC QQP

Yelp

10.0%

SST-2

MNLI

5.0%

ANLI (R1+R2+R3)

103

104

d90

105

106

Figure 5: We plot the intrinsic dimension and the respective relative generalization gap across a set of varied tasks.

Relative Generalization Gap

Within the same window of number of parameters, pre-training methodology becomes essential. For example, in the regime of 108 parameters, the RoBERTa method of pre-training dominates similar sized pre-training methods. However, there does not seem to be a method that can overcome the limitations induced by the number of parameters. Interpreting these results through the lens of learning a compression framework for NLP tasks is straightforward; the more parameters we have in the model, the less we need to represent a task.
5.3 GENERALIZATION BOUNDS THROUGH INTRINSIC DIMENSION
We have shown strong empirical evidence connecting pre-training, ﬁne-tuning, and intrinsic dimensionality. However, we have yet to argue the connection between intrinsic dimensionality and generalization. Given that we have seen pre-training minimize intrinsic dimension, we hypothesize that generalization improves as the intrinsic dimension decreases.
To do so, we will empirically experiment with the connections between d90 and evaluation set performance by looking at various checkpoints from our RoBERTa experiments in Section §5.1. We also plot the relative generalization gap (delta between train time performance and test time performance).
In Figure 4 we plot the evaluation accuracy’s achieved by our pre-training experiment in Section §5.1. A lower intrinsic dimension is strongly correlated with better evaluation performance. Additionally we are interested in measuring relative generalization gap ( acct1r−aianc−ceavcacleval ) across intrinsic dimension. We select the training accuracy that provides us with the best evaluation metrics when computing this ﬁgure.
We present our results in Figure 5. Lower intrinsic dimension once again correlates strongly with a smaller relative generalization gap. If we interpret the intrinsic dimension as a measure of complexity, we expect the generalization gap to decrease with intrinsic dimension.
7

5.3.1 GENERALIZATION BOUNDS
By applying standard compression based generalization bounds, we can provide theoretical backing to the empirical connection between intrinsic dimension and generalization (Arora et al., 2018).
Consider the following deﬁnition of multi-class classiﬁcation loss with an optional margin over our supervised dataset D.

Lγ (f ) = P(x,y)∼D f (x)[y] ≤ γ + max f (x)[j]

(4)

i=y

When γ = 0, L0 recovers the standard classiﬁcation loss. Furthermore, Let Lˆγ(f ) be an unbiased empirical estimate of the margin loss.
Theorem 1. Let f be a function which is parameterized by θD as described in Equation 1 with a total of d trainable intrinsic parameters on a dataset with m samples. Then with a high probability, we can state the following asymptotic generalization bound

L0(f ) ≤ Lˆ0(f ) + O d

(5)

m

Proof. We defer the proof Section §A.1 in the Appendix. We note that this is an extension of the well-known compression based generalization bound explored by Arora et al. (2018).
This generalization bound is independent of the underlying parameter count (D) of the pre-trained model but depends on the ability to compress the downstream task (d). Moreover, given that our previous section shows larger models compress better, our bounds are aligned with general intuition and recent empirical evidence that larger pre-trained models generalize better. Explicitly, these bounds only apply to pre-trained methods trained with the intrinsic dimension subspace method; research has yet to show that standard SGD optimizes in this low dimensional space (although experimentally, this seems to be conﬁrmed). We leave the theoretical contribution of showing SGD optimizes in this space, resembling something such as intrinsic subspace, for future work.
We want to highlight that generalization is not necessarily measured by the pre-trained model’s parameter count or measure of complexity, but the pre-trained model’s ability to facilitate the compression of downstream tasks. In some sense, if we want to compress downstream tasks better, we must expect pre-trained representations to have a considerable measure of complexity.

6 CONCLUSION
In conclusion, we proposed viewing the various phenomena surrounding ﬁne-tuning and pre-training through the lens of intrinsic dimensionality. We empirically showed that common natural language tasks could be learned with very few parameters, sometimes in the order of hundreds, when utilizing pre-trained representations. We provided an interpretation of pre-training as providing a compression framework for minimizing the average description length of natural language tasks and showed that pre-training implicitly minimizes this average description length.
We continued by doing an empirical study of existing pre-training methods and their respective intrinsic dimension, uncovering the phenomena that intrinsic dimensionality decreases as we increase the number of pre-trained representation parameters. This phenomenon provides some intuitions to the trend of growing pre-trained representations. We connected intrinsic dimensionality with generalization by ﬁrst showing that pre-trained models with lower intrinsic dimensions across various tasks achieve higher evaluation accuracies and lower relative generalization gaps. Furthermore, we explain these empirical results by applying well-known generalization bounds to the intrinsic dimension to get generalization bounds that grow on the order of the intrinsic dimension, not on the pre-trained model’s parameter count.
Intrinsic dimensionality is a useful tool for understanding the complex behavior of large models. We hope that future work will make explicit theoretical connections between SGD and optimizing the intrinsic dimension as well as explain exactly why pre-training methods optimize the intrinsic dimensionailty of tasks before not seen.

8

REFERENCES

Armen Aghajanyan, Akshat Shrivastava, Anchit Gupta, Naman Goyal, Luke Zettlemoyer, and Sonal Gupta. Better ﬁne-tuning by reducing representational collapse. arXiv preprint arXiv:2008.03156, 2020.

Sanjeev Arora, Rong Ge, Behnam Neyshabur, and Yi Zhang. Stronger generalization bounds for deep nets via a compression approach. arXiv preprint arXiv:1802.05296, 2018.

Tianlong Chen, Jonathan Frankle, Shiyu Chang, Sijia Liu, Yang Zhang, Zhangyang Wang, and Michael Carbin. The lottery ticket hypothesis for pre-trained bert networks. Advances in Neural Information Processing Systems, 33, 2020.

Kevin Clark, Urvashi Khandelwal, Omer Levy, and Christopher D Manning. What does bert look at? an analysis of bert’s attention. arXiv preprint arXiv:1906.04341, 2019.

Kevin Clark, Minh-Thang Luong, Quoc V Le, and Christopher D Manning. Electra: Pre-training text encoders as discriminators rather than generators. arXiv preprint arXiv:2003.10555, 2020.

Alexis Conneau, Kartikay Khandelwal, Naman Goyal, Vishrav Chaudhary, Guillaume Wenzek, Francisco Guzma´n, Edouard Grave, Myle Ott, Luke Zettlemoyer, and Veselin Stoyanov. Unsupervised cross-lingual representation learning at scale. arXiv preprint arXiv:1911.02116, 2019.

Shrey Desai, Hongyuan Zhan, and Ahmed Aly. Evaluating lottery tickets under distributional shifts. arXiv preprint arXiv:1910.12708, 2019.

Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. Bert: Pre-training of deep bidirectional transformers for language understanding. arXiv preprint arXiv:1810.04805, 2018.

William B Dolan and Chris Brockett. Automatically constructing a corpus of sentential paraphrases. In Proceedings of the Third International Workshop on Paraphrasing (IWP2005), 2005.

Geoffrey E Hinton and Richard Zemel. Autoencoders, minimum description length and helmholtz free energy. Advances in neural information processing systems, 6:3–10, 1993.

Neil Houlsby, Andrei Giurgiu, Stanislaw Jastrzebski, Bruna Morrone, Quentin De Laroussilhe, Andrea Gesmundo, Mona Attariyan, and Sylvain Gelly. Parameter-efﬁcient transfer learning for nlp. arXiv preprint arXiv:1902.00751, 2019.

Shankar Iyer, Nikhil Dandekar, and Kornel Csernai.

First quora dataset

release:

Question pairs, 2017.

URL https://data.quora.com/

First-Quora-Dataset-Release-Question-Pairs.

Zhenzhong Lan, Mingda Chen, Sebastian Goodman, Kevin Gimpel, Piyush Sharma, and Radu Soricut. Albert: A lite bert for self-supervised learning of language representations. arXiv preprint arXiv:1909.11942, 2019.

Quoc Le, Tama´s Sarlo´s, and Alex Smola. Fastfood-approximating kernel expansions in loglinear time. In Proceedings of the international conference on machine learning, volume 85, 2013.

Mike Lewis, Yinhan Liu, Naman Goyal, Marjan Ghazvininejad, Abdelrahman Mohamed, Omer Levy, Ves Stoyanov, and Luke Zettlemoyer. Bart: Denoising sequence-to-sequence pretraining for natural language generation, translation, and comprehension. arXiv preprint arXiv:1910.13461, 2019.

Mike Lewis, Marjan Ghazvininejad, Gargi Ghosh, Armen Aghajanyan, Sida Wang, and Luke Zettlemoyer. Pre-training via paraphrasing, 2020.

Chunyuan Li, Heerad Farkhoor, Rosanne Liu, and Jason Yosinski. Measuring the intrinsic dimension of objective landscapes. arXiv preprint arXiv:1804.08838, 2018.

Yinhan Liu, Myle Ott, Naman Goyal, Jingfei Du, Mandar Joshi, Danqi Chen, Omer Levy, Mike Lewis, Luke Zettlemoyer, and Veselin Stoyanov. Roberta: A robustly optimized bert pretraining approach. arXiv preprint arXiv:1907.11692, 2019.

9

Yixin Nie, Adina Williams, Emily Dinan, Mohit Bansal, Jason Weston, and Douwe Kiela. Adversarial nli: A new benchmark for natural language understanding. arXiv preprint arXiv:1910.14599, 2019.
Sai Prasanna, Anna Rogers, and Anna Rumshisky. When bert plays the lottery, all tickets are winning. arXiv preprint arXiv:2005.00561, 2020.
Alec Radford, Jeffrey Wu, Rewon Child, David Luan, Dario Amodei, and Ilya Sutskever. Language models are unsupervised multitask learners. OpenAI Blog, 1(8):9, 2019.
Colin Raffel, Noam Shazeer, Adam Roberts, Katherine Lee, Sharan Narang, Michael Matena, Yanqi Zhou, Wei Li, and Peter J Liu. Exploring the limits of transfer learning with a uniﬁed text-to-text transformer. arXiv preprint arXiv:1910.10683, 2019.
Richard Socher, Alex Perelygin, Jean Wu, Jason Chuang, Christopher D Manning, Andrew Ng, and Christopher Potts. Recursive deep models for semantic compositionality over a sentiment treebank. In Proceedings of the 2013 conference on empirical methods in natural language processing, pp. 1631–1642, 2013.
Alex Wang, Amanpreet Singh, Julian Michael, Felix Hill, Omer Levy, and Samuel Bowman. GLUE: A multi-task benchmark and analysis platform for natural language understanding. In Proceedings of the 2018 EMNLP Workshop BlackboxNLP: Analyzing and Interpreting Neural Networks for NLP, pp. 353–355, Brussels, Belgium, November 2018. Association for Computational Linguistics. doi: 10.18653/v1/W18-5446. URL https://www.aclweb.org/anthology/ W18-5446.
Adina Williams, Nikita Nangia, and Samuel Bowman. A broad-coverage challenge corpus for sentence understanding through inference. In Proceedings of the 2018 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, Volume 1 (Long Papers), pp. 1112–1122. Association for Computational Linguistics, 2018. URL http://aclweb.org/anthology/N18-1101.
Thomas Wolf, Lysandre Debut, Victor Sanh, Julien Chaumond, Clement Delangue, Anthony Moi, Pierric Cistac, Tim Rault, Re´mi Louf, Morgan Funtowicz, et al. Huggingface’s transformers: State-of-the-art natural language processing. ArXiv, pp. arXiv–1910, 2019.
Zhilin Yang, Zihang Dai, Yiming Yang, Jaime Carbonell, Russ R Salakhutdinov, and Quoc V Le. Xlnet: Generalized autoregressive pretraining for language understanding. In Advances in neural information processing systems, pp. 5753–5763, 2019.
Xiang Zhang, Junbo Zhao, and Yann LeCun. Character-level Convolutional Networks for Text Classiﬁcation. arXiv:1509.01626 [cs], September 2015.

A APPENDIX

A.1 PROOFS

Arora et al. (2018) deﬁne (γ, S) compressible using helper string s as the following. Deﬁnition 1. (γ, S) compressible using helper string s

Suppose GA,s = {gθ,s|θ ∈ A} is a class of classiﬁers indexed by trainable parameters A and ﬁxed strings s. A classiﬁer f is (γ, S)-compressible with respect to GA using helper string s if there exists θ ∈ A such that for any x ∈ S, we have for all y

|f (x)[y] − gθ,s(x)[y]| ≤ γ

(6)

Remark 1. If we parameterize f (x; θ) via the intrinsic dimension approach as deﬁned in Equa-
tion 1, then f is compressible losslessly using a helper string consisting of the random seed used to generate the static random projection weights and the initial pre-trained representation θ0D. Therefore we say f parameterized by either DID or SAID is (0, S) compressible.

10

Theorem 2.1 in Arora et al. (2018) states given a compression consisting of r discrete states we achieve the following generalization bound.

L0(f ) ≤ Lˆγ(f ) + O d log r

(7)

m

We can trivially represent our parameters θd in a discrete fashion through discretization (as was done in Arora et al. (2018)), and the number of states is dependent on the level of quantization but is static once chosen (FP32 vs. FP16).
We then connect the fact that models trained in low dimensional subspace using SAID/DID methods are (0, S)-compressible to derive the ﬁnal asymptotic bound.

L0(f ) ≤ Lˆ0(f ) + O d

(8)

m

11

