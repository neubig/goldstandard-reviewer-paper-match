arXiv:2204.00205v1 [cs.LG] 1 Apr 2022

A Physics-Guided Neural Operator Learning Approach to Model Biological Tissues from
Digital Image Correlation Measurements

Huaiqian You Graduate Research Assistant
Quinn Zhang Undergraduate Research Assistant
Department of Mathematics Lehigh University
Bethlehem, PA 18015, USA
Ming-Chen Hsu Associate Professor
Department of Mechanical Engineering Iowa State University Ames, IA 50011, USA

Colton J. Ross Graduate Research Assistant
Chung-Hao Lee Assistant Professor
School of Aerospace and Mechanical Engineering The University of Oklahoma Norman, OK 73019, USA
Yue Yu∗ Associate Professor
Department of Mathematics Lehigh University
Bethlehem, PA 18015, USA Email: yuy214@lehigh.edu

We present a data-driven workﬂow to biological tissue modeling, which aims to predict the displacement ﬁeld based on digital image correlation (DIC) measurements under unseen loading scenarios, without postulating a speciﬁc constitutive model form nor possessing knowledges on the material microstructure. To this end, a material database is constructed from the DIC displacement tracking measurements of multiple biaxial stretching protocols on a porcine tricuspid valve anterior leaﬂet, with which we build a neural operator learning model. The material response is modeled as a solution operator from the loading to the resultant displacement ﬁeld, with the material microstructure properties learned implicitly from the data and naturally embedded in the network parameters. Using various combinations of loading protocols, we compare the predictivity of this framework with ﬁnite element analysis based on the phenomenological Fung-type model. From in-distribution tests, the predictivity of our approach presents good generalizability to different loading conditions and outperforms the conventional constitutive modeling at approximately one order
∗Corresponding author.

of magnitude. When tested on out-of-distribution loading ratios, the neural operator learning approach becomes less effective. To improve the generalizability of our framework, we propose a physics-guided neural operator learning model via imposing partial physics knowledge. This method is shown to improve the model’s extrapolative performance in the small-deformation regime. Our results demonstrate that with sufﬁcient data coverage and/or guidance from partial physics constraints, the data-driven approach can be a more effective method for modeling biological materials than the traditional constitutive modeling.
Keywords: operator-regression neural networks, implicit Fourier neural operator (IFNO), data-driven material modeling, heart valve leaﬂet
1 INTRODUCTION For many decades, constitutive models based on con-
tinuum mechanics have been commonly employed for modeling the mechanical responses of soft biological tissues. In [1], the seminal phenomenological constitutive

models were developed, and later employed for the modeling of soft tissues, including the iris [2], cardiac heart valves [3–5], arterial vessels [6], and the skin [7]. In the constitutive modeling approaches, a strain energy density function is pre-deﬁned with a speciﬁc functional form. Then, the material parameters are calibrated through an inverse method or analytical stress–strain ﬁtting. The descriptive power of these models are often restricted to certain deformation modes/strain ranges, which might lead to limited predictivity and generalizability [8–10].
To circumvent such a limitation, data-driven computing has been considered in recent years as an alternative for modeling the mechanical response of biological tissues [9, 11–13]. Unlike the traditional material identiﬁcation techniques in constitutive modeling, data-driven approaches directly integrate material identiﬁcation with the modeling procedures, and hence do not require a pre-deﬁned constitutive model form. In [11], a fully convolutional neural network was trained based on synthetic datasets, to estimate a displacement ﬁeld of material points in the simulated liver organ. In [14], Min˜ano et al. constructs the constitutive law for soft tissue damage by solving the system of linear equations consisting of coefﬁcients of shape functions, rather than nonlinear ﬁtting to a pre-deﬁned model. In [9], a local convexity datadriven (LCDD) computational framework was developed that couples manifold learning with nonlinear elasticity, for modeling a representative porcine mitral (heart) valve posterior leaﬂet’s stress–strain data. This framework was further extended to an auto-embedding data-driven approach [12] to infer the underlying low-dimensional embedding representation of the material database. In [13], a neural network was developed to learn the mechanical behavior of porcine and murine skin from biaxial testing data by inferring the relationship between the isochoric strain invariants and the value of strain energy, as well as the strain energy derivatives. Despite these advances, data-driven methods on soft tissue modeling are mostly focusing on the identiﬁcation of stress–strain and/or energy–strain relationships for a homogenized material model, and are thus not capable to capture the effects of material spatial heterogeneity. For example, the lack of considering the soft tissue heterogeneity could induce large errors in the predictions of tissue displacements and stresses [15].
Alternatively, there has been signiﬁcant progress in the development of deep neural networks (NNs) for heterogeneous material modeling [16–27]. Among these works, we focus on the neural operator learning approach [22–27], which learns the maps between the inputs of a dynamical system and its state, so that the network serves as a surrogate for a solution operator. Comparing with

the classical NNs, the most notable advantage of neural operators is their generalizability to different input instances, rendering a computing advantage on prediction efﬁciency – once the neural operator is trained, solving for a new instance of the input parameter only requires a forward pass of the network. In [28–30], neural operators have been successfully applied to modeling the unknown physics law of homogeneous materials. In [25–27, 31], neural operators were used as a solution surrogate for the Darcy’s ﬂow in a heterogeneous porous medium with a known microstructure ﬁeld. In our previous work [22], an implicit neural operator architecture, namely the implicit Fourier neural operator (IFNO), was proposed to model heterogeneous material responses without using any predeﬁned constitutive models or microstructure measurements. In particular, we have investigated the applicability of learning a material model for a latex material directly from digital image correlation (DIC) measurements, and shown that the learned solution operators substantially outperform the conventional constitutive models such as the generalized Mooney–Rivlin model.
To the best of our knowledge, the neural operator learning approaches have not been applied to soft tissue biomechanics. Moreover, the effectiveness of neural operator learning methods in extrapolation to small and large deformation regimes has yet to be systematically examined. To achieve these goals, in this work we propose to advance the current data-driven methods on soft tissue modeling by extending the neural operator learning approach. In particular, we employ the IFNO to learn the material model from DIC measurements on a representative tricuspid valve anterior leaﬂet (TVAL) specimen from a porcine heart and assess its predictability on unseen and out-of-distribution loading scenarios. To further improve the generalizability of the proposed framework, we also infuse partial physics knowledge via a soft penalty constraint to obtain a novel physics-guided neural operator learning framework. This method is shown to improve the extrapolative performance of our model in the small deformation regime.
The remainder of this paper is organized as follows. In Section 2, we introduce our data-driven computing paradigm based on the neural operator learning method, which integrates material identiﬁcation, modeling procedures, and material responses prediction into one uniﬁed learning framework. In particular, a stable deep layer architecture, i.e., the IFNO, is introduced in Section 2.2 and incorporated with partial physics knowledge in Section 2.3. In Section 3, we introduce our experimental setting on a representative TVAL specimen. Four study scenarios, considering different sets of experimental data for model training and predictions, are used to examine the

Fig. 1: Problem setup for the proposed data-driven computations: (a) an image of the speckle-patterned porcine tricuspid valve anterior leaﬂet (TVAL) specimen subject to biaxial stretching (the DIC (digital image correlation) tracking grid is shown in green), (b) schematic of a specimen subject to Dirichlet-type boundary conditions, as the corresponding numerical setting of (a), and (c) ﬁrst Piola-Kirchhoff stresses P11 vs. P22 of seven biaxial tension and constrained uniaxial tension testing protocols, with further details provided in Table 1.

Table 1: Protocols of the mechanical testing on a representative TVAL specimen. The resultant displacement ﬁelds, based on digital image correlation, were used in the data-driven computations. (P11 and P22 denote the ﬁrst PiolaKirchhoff stresses in the x- and y-directions, respectively, and λ1, λ2 are the stretches ratios in these two directions.)

Set ID

Experiment Protocol

max(λ1) max(λ2) max(P11) max(P22) # of Samples

1

Biaxial Tensions P11 : P22 = 1 : 1

1.46 1.68 184.1 kPa 165.1 kPa 3,921

2

Biaxial Tensions P11 : P22 = 1 : 0.66

1.48 1.63 187.1 kPa 127.8 kPa 3,797

3

Biaxial Tensions P11 : P22 = 1 : 0.33

1.52 1.52 186.9 kPa 74.1 kPa 3,539

4

Biaxial Tensions P11 : P22 = 0.66 : 1

1.42 1.72 145.9 kPa 188.2 kPa 4,013

5

Biaxial Tensions P11 : P22 = 0.33 : 1

1.32 1.79 77.9 kPa 189.8 kPa 4,175

6 Constrained Uniaxial in x, P11 : P22 = 0.05 : 1 1.56

1.0 197.9 kPa 10.6 kPa 3,539

7 Constrained Uniaxial in y, P11 : P22 = 1 : 0.1 1.0

1.89 17.2 kPa 176.1 kPa 3,539

in-distribution and out-of-distribution predictivity of the proposed IFNO method. The effectiveness of the IFNO approach is also compared with ﬁnite element simulation results based on a phenomenological constitutive model. Then, we illustrate the prediction results of the IFNOs and physics-guided IFNOs, and compared their results with the modeling results based on the ﬁtted constitutive model in Section 4. Finally, we provide a summary of our achieved goals and concluding remarks in Section 5.
2 AN INTEGRATED LEARNING FRAMEWORK
In this section, we ﬁrst formulate the proposed workﬂow of data-driven material modeling using the operator learning framework, and then introduce the deep neural operator model – the implicit Fourier neural operator (IFNO) [22]. Next, we propose to further infuse partial physics knowledge via a soft penalty constraint to guide the training and prediction of the neural operators.

2.1 Neural operator learning methods
The main objective of this work is to model the mechanical response of a representative soft biological tissue directly from DIC-tracked displacement measurements, without any pre-deﬁned constitutive model nor knowledge on the tissue microstructure. As depicted in Figure 1 and Table 1, let us consider a soft biological tissue specimen which is mounted to a biaxial testing system and deforms under external loading. Denoting the region of interests on this specimen as a 2D domain Ω, our aim is to identify the best surrogate operator, that can accurately predict the displacement ﬁeld u(x), x ∈ Ω, given new and unseen loading scenarios. In this work, we model the tissue mechanical response as a quasi-static and hyperelastic problem for simplicity, so the resultant displacement ﬁeld can be fully determined by a displacementtype loading applied on the domain boundary ∂Ω. Thus, given the Dirichlet-type boundary condition, uD(x) for x ∈ ∂Ω, our ultimate goal is to predict the corresponding displacement ﬁeld u(x), x ∈ Ω.
Mathematically, let K be the unknown differential

operator associated with the momentum balance equation which depends on the unknown tissue microstructure and mechanical properties. For a given boundary condition uD(x), the momentum balance equation and boundary conditions are

K[u](x) = 0, x ∈ Ω, (2.1)
u(x) = uD(x), x ∈ ∂Ω.

Hence, our goal is to provide a surrogate solution operator for (2.1) as a mapping between any arbitrary uD and the corresponding material response u. To this end,
we propose to embrace the descriptive power of neural
networks (NNs), and develop a data-driven neural operator with its input being uD(x) and its output being the displacement ﬁeld u(x), for any x ∈ Ω. Given a collection of observed function pairs {(uD)j(x), uj(x)}Nj=1 from DIC measurements, where the input {(uD)j}, j = 1, · · · , N is a sequence of boundary displacement loading and G†[(uD)j](x) = uj(x) is the corresponding (potentially noisy) displacement ﬁeld. With neural operator learning, we aim to build an approximation of G† by constructing a nonlinear parametric map G[· ; θ] in the form of a NN, for some ﬁnite-dimensional parameter space Θ. Here, θ ∈ Θ is the set of network architecture parameters
to be inferred by solving the minimization problem:

N
min ||G[(uD)j; θ](x) − uj(x)||2L2(Ω).
θ∈Θ j=1

(2.2)

In this context, we have formulated the soft tissue response modeling problem as learning the solution operator G of an unknown PDE system from the DIC data.
Thus, our goal is to provide a neural operator, i.e., an approximated solution operator G[·; θ] : uD → u, that delivers solutions of (2.1) for any input uD. Comparing with the classical PDE solvers and the NN approaches, this is a more challenging task for several reasons. First, in contrast to the classical NN approaches where the solution operator is parameterized between ﬁnite-dimensional Euclidean spaces [32–36], the neural operators are built as mappings between inﬁnite-dimensional spaces [25, 27, 37]. Second, for every new instance of material microstructure and/or loading scenarios f , the neural operators require only a forward pass of the network, which implies that the optimization problem (2.2) only needs to be solved once and the resulting NN can be utilized to solve for new and unseen loading scenarios. This property is in contrast to the classical numerical PDE meth-

ods [38–40] and some machine learning approaches [41– 45], where the optimization problem needs to be solved for every new instance of the input parameter of a known governing law. Finally, of fundamental importance is the fact that the neural operators can ﬁnd solution maps regardless of the presence of an underlying PDE and only require the observed data pairs {((uD)j, uj)}Nj=1. Therefore, the neural operator learning approach is particularly promising when the mechanical responses are provided by experimental measurements, such as the displacement tracking data from DIC considered in this paper.
2.2 Implicit Fourier neural operators (IFNOs)
To provide an efﬁcient, deep, and stable integral neural operator for the solution operator learning problem discovered above, we employ the implicit Fourier neural operators (IFNOs) [22]. IFNOs stem from the idea of modeling the solution operator as a ﬁxed point equation that naturally mimics the solution procedure for the displacement/damage ﬁelds in materials modeling. The increment between neural network hidden layers is modeled as an integral operator, which is directly parameterized in the Fourier space to facilitate the fast Fourier transformation (FFT) and accelerated learning techniques for deep networks. As shown in [22], by learning the material responses directly from data, the material microstructure and properties are learned implicitly and embedded naturally in the network parameters, enabling the prediction of the material displacement for unseen loading conditions.
Figure 2 depicts the NN architecture employed in the present work. Two IFNOs are built to predict ux(x) and uy(x), the x and y components of the displacement ﬁeld, respectively. For each IFNO, the input is a vector function f (x) on Ω that contains information from x and uD(x). Here, we notice that the displacement boundary loading uD(x) is only deﬁned on ∂Ω. To make it well-deﬁned on the whole domain, we employ the zero-padding strategy proposed in [31], namely, deﬁning f (x) := [x, u˜D(x)] where
u˜D(x) = uD(x), if x ∈ ∂Ω . (2.3) 0, if x ∈ Ω\∂Ω
Then, we lift the input f (·) to a representation (feature) h(·, 0) of dimension d, that corresponds to the ﬁrst network layer. For the consistency of notation, we label the ﬁrst argument of h as the space (the set of nodes) and the second argument as the time (the set of layers), and deﬁne

Fig. 2: The architecture of the proposed physics-guided IFNO PG-IFNO), which consists of two sub-networks for the prediction of two displacement ﬁeld components. Each sub-network starts from the input [x, u˜D(x)], then 1) Lifts to a high dimensional feature space by the lifting layer P and obtains the ﬁrst hidden layer representation h(x, 0); 2) Applies L iterative layers; 3) Projects the last hidden layer representation h(x, L∆t) back to the target dimension through a shallow network Q. The optimal network parameter θ∗ is obtained by minimizing the hybrid loss function deﬁned as the weighted sum of the data-driven loss, Ldata, and the physics constraint loss, Lphysics.

the ﬁrst network layer as
h(x, 0) = P[f ](x) := P f (x) + p,
where P ∈ Rd×4 and p ∈ Rd are trainable parameters.
Second, we denote the l-th network representation by h(x, l∆t), and formulate the NN architecture in an iterative manner: h(·, 0) → h(·, ∆t) → h(·, 2∆t) → · · · → h(·, T ), where h(·, j∆t), j = 0, · · · , L := T /∆t, is a sequence of functions representing the features at each hidden layer, taking values in Rd. Here, l = 0 (or equivalently, t = 0) denotes the ﬁrst hidden layer, whereas t = L∆t = T corresponds to the last hidden layer. In particular, the layer update rule in the IFNOs writes
h(x, (l + 1)∆t) = LIF NO[h(x, l∆t)] :=h(x, l∆t) + ∆tσ (W h(x, l∆t) +F −1[F [κ(·; v)] · F [h(·, l∆t)]](x) + c .

scheme, which enables the employment of the accelerated training strategy for the NN in the deep layer limit.
Third, the output ux(x) or uy(x) is obtained through a projection layer. Taking the IFNO for the prediction of ux(x), for example, we project the last hidden layer representation h(·, T ) as:
ux(x) = Q[h(·, T )](x) := Q2σ(Q1h(x, T ) + q1) + q2.
Here, Q1 ∈ RdQ×d, Q2 ∈ R1×dQ , q1 ∈ RdQ , and q2 ∈ R are the trainable parameters.
Denoting the parameters and the corresponding operators associated with ux and uy with the subscripts x and y, respectively, the vanilla version of our neural operator learning architecture without physics constraints (which will be denoted as IFNO in the following context, with a slight abuse of notation) is written as

Here, F and F −1 denote the Fourier transform and its inverse, respectively. In practice, F and F −1 are com-
puted using the FFT and its inverse to each component of h separately, with the highest modes truncated and keeping only the ﬁrst k modes. Also, c ∈ Rd deﬁnes a constant bias, W ∈ Rd×d is the weight matrix, and F [κ(·; v)] := R ∈ Cd×d×k is a circulant matrix that depends on the convolution kernel κ. We further deﬁne σ
as the activation function, which is chosen to be the pop-
ular rectiﬁed linear unit (ReLU) function [46]. Here we note that the deﬁnition of t stems from the relationship es-
tablished between the network update and a time stepping

G[uD; θ](x) :=[Qx ◦ (LIxF NO)L ◦ Px[f ](x), Qy ◦ (LIyF NO)L ◦ Py[f ](x)]
≈[ux(x), uy(x)] = u(x).
Note that the trainable parameters are collected in θ := {Px, px, (Q1)x, (Q2)x, (q1)x, (q2)x, cx, Wx, Rx, Py, py, (Q1)y, (Q2)y, (q1)y, (q2)y, cy, Wy, Ry}, obtained in the vanilla IFNO by minimizing the data-driven loss only:
θ∗ = argmin Ldata(θ), where
θ∈Θ

N
Ldata(θ) := ||G[(uD)j ; θ](x) − uj (x)||2L2(Ω).
j=1
(2.4)
Further, as the layer becomes deep (∆t → 0), the iterative architecture of the IFNOs can be seen as an analog of discretized ordinary differential equations (ODEs). This allows us to exploit the shallow-to-deep learning technique [22, 37, 47, 48]. Speciﬁcally, using the optimal network parameters θ∗ obtained by training an IFNO of depth L, we initialize the (deeper) L-layer network. As such, the optimal parameters learned on shallow networks are considered as (quasi-optimal) initial guesses for the deeper networks – accelerating the training for deeper NNs.

2.3 Physics-guided neural operators
So far, the neural operator model introduced above fully relies on the data, and hence its predictions may not be consistent with the underlying physical principles. For instance, with the quasi-static and hyperelastic assumption of our model, the specimen has no permanent deformation. In other words, if there is no loading applied to the tissue (i.e., the specimen is at rest), we should observe zero displacement ﬁeld in the specimen. However, this is generally not guaranteed in a fully data-driven neural operator model.
In this work, we aim to further leverage the neural operator learning architecture by imposing the underlying physical laws via soft penalty constraints during model training. In particular, considering a specimen at rest, the no-permanent-deformation assumption implies that zero loading should lead to zero displacement, i.e., G†[0] = 0. To enable the neural operator predictions to be consistent with this physical constraint, we propose a “physicsguided” neural operator model that minimizes the residual of the above physical law together with the ﬁtting loss from the data. This is achieved by solving the following minimization problem with a hybrid loss function:

θ∗ = argmin Ldata(θ) + γLphysics(θ),
θ∈Θ

(2.5)

where the data-driven loss Ldata is deﬁned in (2.4), and the physics constraint loss Lphysics is deﬁned as

Lphysics(θ) := ||G[0; θ](x)||2L2(Ω).

(2.6)

Here, γ > 0 is a penalty parameter to enforce the zero

deformation state for a material subject to zero loading. Thus, the physics-guided neural operator is anticipated to improve the prediction performance in the small deformation regime. In the following, we will denote this model as the physics-guided IFNO, or the PG-IFNO, in short.
3 APPLICATION TO TISSUE BIOMECHANICS OF THE HEART VALVE LEAFLET We now consider the problem of learning the mate-
rial response of a tricuspid valve anterior leaﬂet (TVAL) specimen from displacement measurements based on DIC tracking. In this problem, the constitutive equations and material microstructure are both unknown, and the dataset has unavoidable measurement noise. To demonstrate the efﬁcacy of the proposed IFNOs in conjunction with the physics-based enrichment, we further compared our method against a conventional approach that uses constitutive modeling with parameter ﬁttings.
3.1 Tissue preparation and mechanical testing In this section, we ﬁrst introduce the experimental
specimen and data acquisition procedure. In brief, we followed our previously established biaxial testing procedure, including acquisition of a healthy porcine heart and retrieval of the TVAL [49, 50]. We then sectioned the leaﬂet tissue into a square specimen and measured the thickness using an optical measuring system (Keyence, Itasca, IL, USA). Afterwards, we applied a speckling pattern to the tissue surface using an airbrush and black paint [51–53]. The painted specimen was then mounted to a biaxial testing device (BioTester, CellScale, Waterloo, ON, Canada) with an effective testing area of 9 × 9 mm for the following tissue characterizations (Figure 1(a)).
First, we performed a preconditioning protocol in which the specimen was subjected to 10 cycles of biaxial loading and unloading that targeted a ﬁrst Piola-Kirchhoff stress of 150 kPa to emulate the valve’s in vivo functioning conditions [54]. Then, we performed 7 protocols of displacement-controlled testing to target various biaxial stresses: P11 : P22 =1:1, 1:0.66, 1:0.33, 0.66:1, 0.33:1, 0.05:1, 1:0.1, with the last two protocols for constrained uniaxial stretching in x and y (Figure 1(c), Table 1). Here, P11 and P22 denote the ﬁrst Piola-Kirchhoff stresses in the x- and y-directions, respectively. Each stress ratio was performed for three loading/unloading cycles. Throughout the test, images of the specimen were captured by a CCD camera, and the load cell readings and actuator displacements were recorded at 5 Hz. Due to the use of displacement-controlled testing, we observed mild deviations from the target stresses (see Table 1).

After testing, the acquired images were analyzed us-

ing the digital image correlation (DIC) module of the

BioTester’s software. A 5.5 × 5.5 mm domain in the

central region of the TVAL specimen was selected since

the speckling pattern was more uniform and could yield

more reliable node tracking (see Figure 1(a)-(b)). The

pixel coordinate locations of the DIC-tracked grid were

then exported for use in the subsequent study scenarios.

Based on the tracked coordinates, we constructed two nu-

merical testing datasets: (i) an original dataset obtained

directly from the experimental measurements, and (ii)

a smoothed dataset where moving least-squares (MLS)

smoothing was performed for the nodal displacements.

To generate the displacement ﬁelds uoriginal(x)

for the original samples, we subtracted each mate-

rial point location with its initial location on the ﬁrst

sample of each protocol, and the boundary displacement was obtained by enforcing uoriginal(x) on the

boundary nodes. Next, to construct the smoothed samples for the ith material point, xi = (xi, yi),

we employed a two-dimensional MLS shape func-

tion Ψi to reconstruct the smoothed displacement ﬁeld:

usmooth(xi, yi) =

NP k=1

Ψk

(xi,

yi)uoriginal

(xk

,

yk

),

based on the unsmoothed displacement vector of the

N P points in the neighborhood of xi. For fur-

ther details regarding the MLS shape function and

the smoothing procedure, we refer interested readers

to [22, 55, 56]. Both the smoothed and the origi-

nal datasets have 26, 523 total time instants (samples), denoted as Dsmooth = {(uD)sjmooth, usjmooth}j2=6,1523 and Doriginal = {(uD)ojriginal, uojriginal}2j=6,1523, respec-
tively. Finally, to create a structured grid for the proposed

IFNOs, we further applied a cubic spline interpolation to

the displacement ﬁeld on a structured 21 × 21 node grid.

3.2 Baseline: Fung-type constitutive modeling As the baseline method for comparisons with the pro-
posed neural operator learning methods, we considered a constitutive modeling approach using parameter ﬁtting to the experimental stress-stretch data. In particular, a Fungtype model for planar stress–strain behavior was considered, with the strain energy density function given by:
ψ = 2c exp(a1E121 + a2E222 + 2a3E11E22) − 1 ,
where c, a1, a2 and a3 are the model parameters, and E11, E22 are the principle Green-Lagrange strains in the xand y-directions, respectively. Based on this pre-assumed constitutive model, we aimed to ﬁnd the optimal param-

eters (c∗ and a∗i , i = 1, 2, 3) from the training samples, and the optimal parameters were then used for predicting the displacement ﬁeld on the testing samples.
In this work, constitutive model parameters were obtained by nonlinear least-squares ﬁtting to the biaxial stress-stretch data for the training samples. In brief, the ﬁrst Piola-Kirchhoff stresses in the x- and y-directions were determined using the specimen thickness Lz, the undeformed edge lengths Lx and Ly, and the measured forces Fx and Fy: P11 = Fx/LyLz and P22 = Fy/LxLz. The two stretches were calculated as the ratio of the deformed to the undeformed edge lengths. To obtain the optimal parameters for the Fung-type model, differential evolution optimization was employed that minimizes the residual mean squared errors in the stress between the experimental data and model prediction [57]. Finally, using the determined model parameters, ﬁnite element simulation was performed in Abaqus [58] with the DIC-tracked nodal displacements prescribed as boundary displacement conditions. The relative errors of displacement ﬁelds were then evaluated by comparing the ﬁnite element solution and the DIC-based measurements. In the following, we will refer to this baseline approach as the “Fung model” method.
3.3 Numerical study scenarios Based on the seven mechanical testing protocols
listed in Table 1, four study scenarios are considered to evaluate the interpolative and extrapolative performances of the proposed neural operator learning methods. In each study scenario, a subset of the samples were selected to form the training set and to obtain the optimal neural operator by solving (2.2) and (2.6). Then, the displacement ﬁeld predictions were made for the remaining samples and the results were compared with the ground-truth displacement ﬁelds from the DIC measurements, to evaluate the predictivity and generalizability of our proposed methods. Due to the relatively large number of samples, in the constitutive modeling approach it is generally intractable to perform ﬁnite element analysis for all 26,523 samples. To reduce the computational cost, we only evaluate the training and testing errors for samples in the ﬁrst loading/unloading cycle of each protocol for the constitutive modeling approach. Then, we considered the averaged relative error of displacement on the ﬁrst loading/unloading cycle as the error measure, so as to provide a fair comparison between the constitutive modeling and our neural operator learning approaches.
Study 1 We mixed all samples from all the seven protocols, randomly selected 83% of samples for training, and

used the remaining for testing. In this scenario, we ensured that the boundary conditions of the samples in the testing set are inside the training region. Therefore, with this study we aimed to investigate the in-distribution predictivity of the proposed method.
Study 2 For this study, we employed protocols 1, 2, 4 for training and protocols 3, 5, 6 and 7 for testing. We notice that the testing protocols are not covered in any of training sets, and they have smaller maximum tensions compared with the training sets. Hence, with this study we aimed to investigate the performance of the proposed IFNO methods for predicting the out-of-distribution material responses in the small deformation regime.
Study 3 We used protocols 1, 6, and 7 for training and protocols 2-5 for testing. The protocols considered in testing were not covered in any of the training protocols, although the deformation range of the testing protocols may fall inside the range of the training ones. Hence, we attempted to illustrate the out-of-distribution prediction on the intermediate deformation regime.
Study 4 We used protocols 2-7 for training, and protocol 1 for prediction. We notice that the equibiaxial tension protocol (P11 : P22 =1:1) is not covered in any of other sets, and protocol 1 exhibits the largest maximum tensions among all the sets. Hence, with this study, we aimed to investigate the out-of-distribution predictivity in the large deformation regime of the proposed method.

Study 1: In-distribution prediction To verify the model’s predictivity for in-distribution learning tasks, in this study we randomly selected 83% of the samples of all protocols to form the training set, and then built the vanilla IFNO model and the Fung-type model based on this common training set. Figure 3 (left) shows the relative displacement errors from both the original and smoothed datasets, and the sample-wise errors for each model are provided in Figure 3 (right). When comparing the results between the original dataset and the smoothed dataset, one can observe that the smoothing procedure slightly improves the prediction accuracy for both the INFO and Fung-type models. By comparing the prediction accuracy between the two computational models, the IFNO outperforms the conventional constitutive modeling approaches by around one order of magnitude, on both the original and smoothed datasets. To provide further insights into this comparison, in Figure 4 we visualized both the x- and y-displacement solutions and the prediction errors obtained with the IFNO and the Fung-type model on two test samples, which correspond to the large deformation (sample #2) and small deformation (sample #1) representatives, respectively. The Fung-type model, which considered the homogenized stress–strain at one material point (i.e., the center of the specimen) due to limited information about the spatial variation in the stress measurement, failed to capture the material heterogeneity and hence exhibited large prediction errors in the interior region of the TVAL specimen domain. This observation conﬁrms the importance of capturing the material heterogeneity and veriﬁes the capability of the IFNOs in heterogeneous material modeling.

4 RESULTS AND DISCUSSIONS
In this section, we illustrate the performance of the proposed neural operator learning approaches. All our numerical experiments were performed on a machine with 2.8 GHz 8-core CPU and a single Nvidia RTX 3060 GPU, using a Pytorch implementation modiﬁed from the package provided in [27]. The optimization was performed with the Adam optimizer. For all IFNOs, we set the dimension of h as d = 16 and the number of truncated Fourier modes as k = 8 × 8, with L = 12 hidden layers. The network was trained with the shallow-to-deep training procedure: we initialized the L−layer network parameters from the (L/2)−layer IFNOs model. For each depth L, we trained the network for 1,000 epochs with a learning rate of 3 × 10−3, then decreased the learning rate with a ratio of 0.5 every 100 epochs. For all PGIFNOs we took the penalty parameter γ = 1.0, although we noted that this parameter can be further hand-tuned or optimized to potentially achieve a better performance.

Study 2: Out-of-distribution prediction on the small deformation regime In this study, three protocols with the largest tensions (i.e., sets 1, 2, and 4) were used for training, and the other four protocols were used for prediction validation (sets 3, 5, 6, and 7 as listed in Table 1). Since the prediction sets are with a different biaxial loading ratio that is unseen from the training samples, this is an extrapolative learning task in the small deformation region. Figure 5 (left) provides the relative displacement errors from all models. One can see that comparing with the interpolative prediction task in Study 1, the extrapolative predictions are less effective for both the neural operator and the constitutive models. It was in particular noted that for the vanilla IFNO model while the training error was at a relatively low error (i.e., the model still possessed good expressivity in sets 1, 2, and 4), the testing error deteriorates by 10 times and reached a similar level to the constitutive modeling error. Perhaps unsurprisingly, this observation again veriﬁes the sensitivity of machine learning

Model/Dataset

Original Smoothed

Vanilla IFNO training error 1.54% 1.43% testing error 1.64% 1.53%

Fung model training error 10.34% 10.10% testing error 10.83% 10.53%

Fig. 3: Error comparisons of different models – Study 1: in-distribution prediction with training set on 83% of randomly selected samples. Left: relative errors for the displacement ﬁeld prediction on the training and test datasets. We highlight the model with the best prediction accuracy in bold. Right: sample-wise error comparison on all biaxial testing protocol sets.

Fig. 4: Visualization of the Fung-type model ﬁtting and IFNO performances on two representative test samples in (a) the original dataset and (b) the smoothed dataset – Study 1. (Correspond the two representative test samples highlighted in Figure 3 – right.)

Train on sets 1, 2, 4, test on sets 3, 5, 6, 7

Model/Dataset

Original Smoothed

training error 1.53% 1.51%

Vanilla IFNO testing error 16.78% 18.80%

training error 1.51% 1.50%

PG-IFNO testing error 15.32% 15.76%

training error 12.37% 12.54%

Fung model testing error 16.80% 15.70%

Fig. 5: Error comparisons of different models – Study 2: out-of-distribution prediction on the small deformation regime. Left: relative errors for the displacement ﬁeld prediction on the training and test datasets. We highlight the model with the best prediction accuracy in bold. Right: sample-wise error comparison on all test sets from the original (unsmoothed) dataset.

Fig. 6: Visualization of the Fung-type model ﬁtting, IFNO and PG-IFNO performances on a test sample in (a) the original dataset and (b) the smoothed dataset – Study 2. (Corresponds to the representative test sample deﬁned in Figure 5 – right).

models in extrapolative tasks (see, e.g., [9]). As shown in Figure 5 (right), we demonstrate the sample-wise errors from the original dataset for each model, and we noticed that the results on the smoothed dataset exhibit a similar trend. One can observe that for the Fung-type model the level of prediction errors is relatively similar for all four testing sets, while large errors are observed in sets 6 and 7 (the sets with the smallest maximum tensions) for the vanilla IFNO model. Those sets are the furthest away from the training set and hence their sample distributions are substantially different from those in the training sets.

In this study, we also investigated the performance of the proposed PG-IFNOs. By infusing the no-permanentdeformation constraint, an improvement of the testing error was observed. On the original dataset, the PG-IFNO has outperformed the Fung-type model by 1.5%, and achieves an on-par performance on the smoothed dataset as well. From the sample-wise errors, we can see that the PG-IFNOs generally improved the prediction accuracy on sets 6 and 7 – which are the protocols on the small deformation regime. This fact is also veriﬁed by the solutions and prediction errors on a representative test sample in

Train on sets 1, 6, 7, test on 2-5

Model/Dataset

Original Smoothed

Vanilla IFNO training error 1.51% 1.43% testing error 8.03% 8.09%

PG-IFNO

training error 1.47% testing error 8.75%

1.35% 9.08%

Fung model training error 15.49% 14.48% testing error 11.75% 11.33%

Fig. 7: Error comparisons of different models – Study 3: out-of-distribution prediction on the intermediate deformation regime. Left: relative errors for the displacement ﬁeld prediction on the training and test datasets. We highlight the model with the best prediction accuracy in bold. Right: sample-wise error comparison on all test sets from the original (unsmoothed) dataset.

set 7, as depicted in Figure 6. Comparing with the original IFNO, the PG-IFNO has obtained visually more consistent predictions on the component with constraint tension. Hence, these results suggest that sufﬁcient coverage of sample distribution in the training protocol is critical for neural operator learning methods, while it has less impact for the constitutive modeling approach if the predeﬁned model form exhibits good generalizability like the adopted Fung-type model. On these challenging extrapolative learning tasks, incorporating proper physics constraints seems to make the neural operator learning more versatile.
Study 3: Out-of-distribution prediction on the intermediate deformation regime In this study, protocol sets 1, 6, and 7 were used in model training, while the rest of sets (protocols 2-5) were for prediction validation. As such, the prediction sets are still with unseen tension ratios from the training sets, but the deformation range of the testing protocols are within the range of the training ones. In Figure 7 (left), the relative displacement errors are provided. We can see that the testing errors from the IFNOs are still much larger than their respective training errors, due to the out-of-distribution learning nature of this study. However, the prediction error from the IFNOs outperforms the Fung-type model by around 3.5%. Therefore, as long as the dataset has sufﬁcient coverage of the deformation, neural operator learning methods can be a more effective approach than the traditional constitutive models, even in the more challenging out-of-distribution tasks. To provide further insights into this comparison, Figure 7 (right) depicts the

sample-wise errors on the original (unsmoothed) dataset. One can see that the prediction errors are almost uniform among all protocol sets. In this study, the PG-IFNO does not substantially improve the prediction accuracy compared with the original IFNO, possibly because the physics constraint stems from the zero loading case and is more helpful on guiding the prediction in small deformation regimes.
Study 4: Out of distribution prediction on the large deformation regime In the last comparative study scenario, the experimental protocol for prediction was selected to be the one with the largest maximum tension, with the aim to evaluate the models’ extrapolative prediction abilities on the large deformation regime. From Figure 8, one can see that while the IFNO becomes less effective on both datasets, the Fung-type model exhibits a better ﬁt to both the original and smoothed testing datasets. On the other hand, the physics constraint does not help much on this study. These results suggest that to ensure reliable predictions from neural operator learning methods, with an insufﬁcient coverage of deformation range in the training protocols, a judiciously designed physics constraint for the data range becomes important.
5 CONCLUSION In this work, we have applied the neural operator
learning method to modeling the mechanical responses of a biological tissue specimen under different loading conditions. Speciﬁcally, a data-driven computing workﬂow has been proposed, which learns the material model di-

Train on sets 2-7, test on 1

Model/Dataset

Original Smoothed

Vanilla IFNO training error 1.43% 1.38% testing error 13.07% 14.05%

PG-IFNO training error 2.08% 1.36% testing error 15.90% 14.54%

Fung model training error 15.07% 14.26% testing error 10.34% 10.40%

Fig. 8: Error comparisons of different models – Study 4: out-of-distribution prediction on the large deformation regime. Left: relative errors for displacement ﬁeld prediction on the training and test datasets. We highlight the model with the best prediction accuracy in bold. Right: sample-wise error comparison on all test sets from the original (unsmoothed) dataset.

rectly from the DIC displacement tracking measurements and integrates material identiﬁcation, modeling procedures, and material responses prediction into one uniﬁed learning framework. With the proposed neural operator learning, the mechanical response of this tissue specimen can be modeled as a data-driven solution operator from the boundary loading to the resultant displacement ﬁeld, and the learnt model will be applicable to unseen loading conditions. To verify its efﬁcacy on real-world soft tissue response learning tasks which feature spatial heterogeneity, measurement noise, anisotropic and nonlinear behaviors, we have used the proposed workﬂow to model a porcine heart TVAL specimen with the DIC measurement data collected from biaxial and constrained uniaxial tension tests. In the indistribution validation case, our proposed neural operator learning method has been shown to signiﬁcantly outperform the conventional constitutive modeling approach, with its predictions on out-of-distribution learning tasks being less effective. To improve the model generalizability on out-of-distribution tasks, we have further leveraged the neural operator learning method towards physicallyconsistent predictions for tissue at rest, and proposed a physics-guided neural operator learning approach. Numerical studies have demonstrated substantial improvements in terms of enhanced generalization performance in the small deformation regime. Hence, these results suggest that with a sufﬁcient coverage of training sample distribution and/or properly designed physics constraints, the neural operator learning approach could offer an alternative approach which outperforms the conventional phe-

nomenological model in complex and heterogeneous material modeling tasks.
Despite the encouraging results presented herein, numerous questions and potentials require further investigations. For example, although the proposed no-permanentdeformation constraint seems effective in the small deformation regime, it has little impacts on improving the prediction accuracy on the large deformation regimes. As a natural extension, we will consider the enforcement of other physics constraints, which would potentially further enhance the performance of the method’s extrapolative predictivity. On the other hand, another important next step is to consider other boundary loading scenarios in our learning framework, such as the traction loading problems. Finally, another question arises from the possibility of achieving the improved performance by optimizing the penalty parameter γ in the physics-guided hybrid loss function (2.5). It has been shown that an optimized penalty parameter could further enhance the accuracy and trainability of the constrained neural networks (see, e.g., [59–61]). Hence, the performance of PG-IFNO might get further enhanced by designing effective algorithms which selects appropriate weights in the hybrid loss function.
ACKNOWLEDGEMENTS H. You and Y. Yu would like to acknowledge sup-
port from the National Science Foundation under award DMS 1753031. Portions of this research were conducted on Lehigh University’s Research Computing infrastructure partially supported by NSF Award 2019035. C. Ross,

C.-H. Lee and M.-C. Hsu would like to acknowledge support from the Presbyterian Health Foundation Team Science Grant. C. Ross was in part supported by the National Science Foundation Graduate Research Fellowship Program (GRF2020307284). M.-C. Hsu was in part supported by the National Institutes of Health under award number R01HL142504.
REFERENCES [1] Fung, Y., Fronek, K., and Patitucci, P., 1979,
“Pseudoelasticity of arteries and the choice of its mathematical expression,” American Journal of Physiology-Heart and Circulatory Physiology, 237(5), pp. H620–H631. [2] Pant, A. D., Dorairaj, S. K., and Amini, R., 2018, “Appropriate objective functions for quantifying iris mechanical properties using inverse ﬁnite element modeling,” Journal of Biomechanical Engineering, 140(7), p. 074502. [3] May-Newman, K., and Yin, F., 1998, “A constitutive law for mitral valve tissue.,” Journal of Biomechanical Engineering, 120(1), pp. 38–47. [4] Prot, V., Skallerud, B., and Holzapfel, G., 2007, “Transversely isotropic membrane shells with application to mitral valve mechanics. constitutive modelling and ﬁnite element implementation,” International Journal for Numerical Methods in Engineering, 71(8), pp. 987–1008. [5] Sacks, M. S., Zhang, W., and Wognum, S., 2016, “A novel ﬁbre-ensemble level constitutive model for exogenous cross-linked collagenous tissues,” Interface Focus, 6(1), p. 20150090. [6] van den Broek, C. N., Van der Horst, A., Rutten, M., and Van De Vosse, F. N., 2011, “A generic constitutive model for the passive porcine coronary artery,” Biomechanics and Modeling in Mechanobiology, 10(2), pp. 249–258. [7] Bischoff, J. E., Arruda, E. M., and Grosh, K., 2000, “Finite element modeling of human skin using an isotropic, nonlinear elastic constitutive model,” Journal of Biomechanics, 33(6), pp. 645– 652. [8] Lee, C.-H., Amini, R., Gorman, R. C., Gorman III, J. H., and Sacks, M. S., 2014, “An inverse modeling approach for stress estimation in mitral valve anterior leaﬂet valvuloplasty for in-vivo valvular biomaterial assessment,” Journal of Biomechanics, 47(9), pp. 2055–2063. [9] He, Q., Laurence, D. W., Lee, C.-H., and Chen, J.-S., 2021, “Manifold learning based data-driven

modeling for soft biological tissues,” Journal of Biomechanics, 117, p. 110124. [10] Lee, C.-H., Zhang, W., Feaver, K., Gorman, R. C., Gorman, J. H., and Sacks, M. S., 2017, “On the in vivo function of the mitral heart valve leaﬂet: insights into tissue–interstitial cell biomechanical coupling,” Biomechanics and Modeling in Mechanobiology, 16(5), pp. 1613–1632. [11] Pfeiffer, M., Riediger, C., Weitz, J., and Speidel, S., 2019, “Learning soft tissue behavior of organs for surgical navigation with convolutional neural networks,” International Journal of Computer Assisted Radiology and Surgery, 14(7), pp. 1147–1155. [12] He, X., He, Q., and Chen, J.-S., 2021, “Deep autoencoders for nonlinear physics-constrained datadriven computational framework with application to biological tissue modeling,” AAAI Spring Symposium: MLPS. [13] Tac, V., Sree, V. D., Rausch, M. K., and Tepole, A. B., 2021, “Data-driven modeling of the mechanical behavior of anisotropic soft biological tissue,” arXiv preprint arXiv:2107.05388. [14] Min˜ano, M., and Monta´ns, F. J., 2018, “WYPiWYG damage mechanics for soft materials: a data-driven approach,” Archives of Computational Methods in Engineering, 25(1), pp. 165–193. [15] Howell, B., and McIntyre, C. C., 2017, “Role of soft-tissue heterogeneity in computational models of deep brain stimulation,” Brain Stimulation, 10(1), pp. 46–50. [16] Wang, K., and Sun, W., 2018, “A multiscale multipermeability poroplasticity model linked by recursive homogenizations and deep learning,” Computer Methods in Applied Mechanics and Engineering, 334, pp. 337–380. [17] He, Q., Barajas-Solano, D., Tartakovsky, G., and Tartakovsky, A. M., 2020, “Physics-informed neural networks for multiphysics data assimilation with application to subsurface transport,” Advances in Water Resources, 141, p. 103610. [18] Tartakovsky, A. M., Marrero, C. O., Perdikaris, P., Tartakovsky, G. D., and Barajas-Solano, D., 2020, “Physics-informed deep neural networks for learning parameters and constitutive relationships in subsurface ﬂow problems,” Water Resources Research, 56(5), p. e2019WR026731. [19] Liu, Z., Wu, C., and Koishi, M., 2019, “A deep material network for multiscale topology learning and accelerated nonlinear modeling of heterogeneous materials,” Computer Methods in Applied Mechanics and Engineering, 345, pp. 1138–1168. [20] Yang, H., Guo, X., Tang, S., and Liu, W. K.,

2019, “Derivation of heterogeneous material laws via data-driven principal component expansions,” Computational Mechanics, 64(2), pp. 365–379. [21] Garbrecht, K., Aguilo, M., Sanderson, A., Rollett, A., Kirby, R. M., and Hochhalter, J., 2021, “Interpretable machine learning for texture-dependent constitutive models with automatic code generation for topological optimization,” Integrating Materials and Manufacturing Innovation, 10(3), pp. 373–392. [22] You, H., Zhang, Q., Ross, C. J., Lee, C.-H., and Yu, Y., 2022, “Learning deep implicit fourier neural operators (IFNOs) with applications to heterogeneous material modeling,” arXiv preprint arXiv:2203.08205. [23] Lu, L., Jin, P., and Karniadakis, G. E., 2019, “Deeponet: Learning nonlinear operators for identifying differential equations based on the universal approximation theorem of operators,” arXiv preprint arXiv:1910.03193. [24] Lu, L., Jin, P., Pang, G., Zhang, Z., and Karniadakis, G. E., 2021, “Learning nonlinear operators via DeepONet based on the universal approximation theorem of operators,” Nature Machine Intelligence, 3(3), pp. 218–229. [25] Li, Z., Kovachki, N., Azizzadenesheli, K., Liu, B., Bhattacharya, K., Stuart, A., and Anandkumar, A., 2020, “Neural operator: Graph kernel network for partial differential equations,” arXiv preprint arXiv:2003.03485. [26] Li, Z., Kovachki, N., Azizzadenesheli, K., Liu, B., Stuart, A., Bhattacharya, K., and Anandkumar, A., 2020, “Multipole graph neural operator for parametric partial differential equations,” Advances in Neural Information Processing Systems, 33. [27] Li, Z., Kovachki, N. B., Azizzadenesheli, K., Bhattacharya, K., Stuart, A., Anandkumar, A., et al., 2020, “Fourier neural operator for parametric partial differential equations,” In International Conference on Learning Representations. [28] Yin, M., Ban, E., Rego, B. V., Zhang, E., Cavinato, C., Humphrey, J. D., and Em Karniadakis, G., 2022, “Simulating progressive intramural damage leading to aortic dissection using DeepONet: an operator– regression neural network,” Journal of the Royal Society Interface, 19(187), p. 20210670. [29] Goswami, S., Yin, M., Yu, Y., and Karniadakis, G. E., 2022, “A physics-informed variational DeepONet for predicting crack path in quasi-brittle materials,” Computer Methods in Applied Mechanics and Engineering, 391, p. 114587. [30] Yin, M., Zhang, E., Yu, Y., and Karniadakis, G. E., 2022, “Interfacing ﬁnite elements with deep neural

operators for fast multiscale modeling of mechanics problems,” arXiv preprint arXiv:2203.00003. [31] Lu, L., Meng, X., Cai, S., Mao, Z., Goswami, S., Zhang, Z., and Karniadakis, G. E., 2021, “A comprehensive and fair comparison of two neural operators (with practical extensions) based on fair data,” arXiv preprint arXiv:2111.05512. [32] Guo, X., Li, W., and Iorio, F., 2016, “Convolutional neural networks for steady ﬂow approximation,” In Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, pp. 481–490. [33] Zhu, Y., and Zabaras, N., 2018, “Bayesian deep convolutional encoder–decoder networks for surrogate modeling and uncertainty quantiﬁcation,” Journal of Computational Physics, 366, pp. 415–447. [34] Adler, J., and O¨ ktem, O., 2017, “Solving ill-posed inverse problems using iterative deep neural networks,” Inverse Problems, 33(12), p. 124007. [35] Bhatnagar, S., Afshar, Y., Pan, S., Duraisamy, K., and Kaushik, S., 2019, “Prediction of aerodynamic ﬂow ﬁelds using convolutional neural networks,” Computational Mechanics, 64(2), pp. 525–545. [36] Khoo, Y., Lu, J., and Ying, L., 2021, “Solving parametric PDE problems with artiﬁcial neural networks,” European Journal of Applied Mathematics, 32(3), pp. 421–435. [37] You, H., Yu, Y., D’Elia, M., Gao, T., and Silling, S., 2022, “Nonlocal kernel network (NKN): a stable and resolution-independent deep neural network,” arXiv preprint arXiv:2201.02217. [38] LeVeque, R. J., 2007, Finite Difference Methods for Ordinary and Partial Differential Equations: steady-state and time-dependent problems SIAM. [39] Zienkiewicz, O. C., Taylor, R. L., Nithiarasu, P., and Zhu, J., 1977, The Finite Element Method, Vol. 3 McGraw-hill London. [40] Karniadakis, G., and Sherwin, S., 2005, Spectral/hp Element Methods for Computational Fluid Dynamics OUP Oxford. [41] Raissi, M., Perdikaris, P., and Karniadakis, G. E., 2019, “Physics-informed neural networks: a deep learning framework for solving forward and inverse problems involving nonlinear partial differential equations,” Journal of Computational Physics, 378, pp. 686–707. [42] Weinan, E., and Yu, B., 2018, “The deep Ritz method: a deep learning-based numerical algorithm for solving variational problems,” Communications in Mathematics and Statistics, 6(1). [43] Bar, L., and Sochen, N., 2019, “Unsupervised deep learning algorithm for PDE-based forward and in-

verse problems,” arXiv preprint arXiv:1904.05417. [44] Smith, J. D., Azizzadenesheli, K., and Ross, Z. E.,
2020, “Eikonet: Solving the eikonal equation with deep neural networks,” IEEE Transactions on Geoscience and Remote Sensing. [45] Pan, S., and Duraisamy, K., 2020, “Physicsinformed probabilistic learning of linear embeddings of nonlinear dynamics with guaranteed stability,” SIAM Journal on Applied Dynamical Systems, 19(1), pp. 480–509. [46] Agarap, A. F., 2018, “Deep learning using rectiﬁed linear units (ReLU),” arXiv preprint arXiv:1803.08375. [47] Haber, E., Ruthotto, L., Holtham, E., and Jun, S.-H., 2018, “Learning across scales—multiscale methods for convolution neural networks,” In Proceedings of the AAAI Conference on Artiﬁcial Intelligence, Vol. 32. [48] Modersitzki, J., 2009, FAIR: Flexible Algorithms for Image Registration SIAM. [49] Ross, C. J., Laurence, D. W., Richardson, J., Babu, A. R., Evans, L. E., Beyer, E. G., Childers, R. C., Wu, Y., Towner, R. A., Fung, K.-M., et al., 2019, “An investigation of the glycosaminoglycan contribution to biaxial mechanical behaviours of porcine atrioventricular heart valve leaﬂets,” Journal of the Royal Society Interface, 16(156), p. 20190069. [50] Laurence, D., Ross, C., Jett, S., Johns, C., Echols, A., Baumwart, R., Towner, R., Liao, J., Bajona, P., Wu, Y., et al., 2019, “An investigation of regional variations in the biaxial mechanical properties and stress relaxation behaviors of porcine atrioventricular heart valve leaﬂets,” Journal of Biomechanics, 83, pp. 16–27. [51] Zhang, D. S., and Arola, D. D., 2004, “Applications of digital image correlation to biological tissues,” Journal of Biomedical Optics, 9(4), pp. 691–699. [52] Lionello, G., and Cristofolini, L., 2014, “A practical approach to optimizing the preparation of speckle patterns for digital-image correlation,” Measurement Science and Technology, 25(10), p. 107001. [53] Palanca, M., Tozzi, G., and Cristofolini, L., 2016, “The use of digital image correlation in the biomechanical area: a review,” International Biomechanics, 3(1), pp. 1–21. [54] Jett, S., Laurence, D., Kunkel, R., Babu, A. R., Kramer, K., Baumwart, R., Towner, R., Wu, Y., and Lee, C.-H., 2018, “An investigation of the anisotropic mechanical properties and anatomical structure of porcine atrioventricular heart valves,” Journal of the Mechanical Behavior of Biomedical Materials, 87, pp. 155–171.

[55] Belytschko, T., Krongauz, Y., Organ, D., Fleming, M., and Krysl, P., 1996, “Meshless methods: An overview and recent developments,” Computer Methods in Applied Mechanics and Engineering, 139(1-4), pp. 3–47.
[56] Chen, J.-S., Pan, C., Wu, C.-T., and Liu, W. K., 1996, “Reproducing kernel particle methods for large deformation analysis of non-linear structures,” Computer Methods in Applied Mechanics and Engineering, 139(1-4), pp. 195–227.
[57] Price, K., Storn, R. M., and Lampinen, J. A., 2006, Differential Evolution: a Practical Approach to Global Optimization Springer Science & Business Media.
[58] Abaqus, G., 2011, “Abaqus 6.11,” Dassault Systemes Simulia Corporation, Providence, RI, USA.
[59] Wang, S., Wang, H., and Perdikaris, P., 2021, “Learning the solution operator of parametric partial differential equations with physics-informed DeepONets,” Science Advances, 7(40), p. eabi8605.
[60] Wang, S., Yu, X., and Perdikaris, P., 2022, “When and why pinns fail to train: a neural tangent kernel perspective,” Journal of Computational Physics, 449, p. 110768.
[61] McClenny, L., and Braga-Neto, U., 2020, “Selfadaptive physics-informed neural networks using a soft attention mechanism,” arXiv preprint arXiv:2009.04544.

