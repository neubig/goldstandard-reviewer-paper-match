Optimal deception attack on networked vehicular cyber physical systems
Moulik Choraria, Arpan Chattopadhyay, Urbashi Mitra, Erik Strom

arXiv:2002.01545v1 [eess.SY] 4 Feb 2020

Abstract—Herein, design of false data injection attack on a distributed cyber-physical system is considered. A stochastic process with linear dynamics and Gaussian noise is measured by multiple agent nodes, each equipped with multiple sensors. The agent nodes form a multi-hop network among themselves. Each agent node computes an estimate of the process by using its sensor observation and messages obtained from neighbouring nodes, via Kalman-consensus ﬁltering. An external attacker, capable of arbitrarily manipulating the sensor observations of some or all agent nodes, injects errors into those sensor observations. The goal of the attacker is to steer the estimates at the agent nodes as close as possible to a pre-speciﬁed value, while respecting a constraint on the attack detection probability. To this end, a constrained optimization problem is formulated to ﬁnd the optimal parameter values of a certain class of linear attacks. The parameters of linear attack are learnt on-line via a combination of stochastic approximation and online stochastic gradient descent. Numerical results demonstrate the efﬁcacy of the attack.
Index Terms—Attack design, distributed estimation, CPS security, false data injection attack, Kalman-consensus ﬁlter, stochastic approximation.
I. INTRODUCTION
In recent times, there have been signiﬁcant interest in designing cyber-physical systems (CPS) that combine the cyber world and the physical world via seamless integration of sensing, computation, communication, control and learning. CPS has widespread applications such as networked monitoring and control of industrial processes, disaster management, smart grids, intelligent transportation systems, etc. These applications critically depend on estimation of a physical process via multiple sensors over a wireless network. However, increasing use of wireless networks in sharing the sensed data has rendered the sensors vulnerable to various cyber-attacks. In this paper, we focus on false data injection (FDI) attacks which is an integrity or deception attack where the attacker modiﬁes the information ﬂowing through the network [1], [2], in contrast to a denial-of-service attack where the attacker blocks system resources (e.g., wireless jamming attack [3]). In FDI, the attacker either breaks the cryptography of the data packets or physically manipulates the sensors (e.g., putting a heater near a temperature sensor).
Moulik Choraria and Arpan Chattopadhyay are with the Department of Electrical Engineering, Indian Institure of Technology, Delhi. Email: moulik.choraria@gmail.com, arpanc@ee.iitd.ac.in. Urbashi Mitra is with the Department of Electrical Engineering, University of Southern California. Email: ubli@usc.edu. Erik Strom is with the Department of Signals and Systems, Chalmers University, Sweden. Email: erik.strom@chalmers.se.
This work was supported by the faculty seed grant and professional development allowance (PDA) of IIT Delhi, and one or more of the following grants: ONR N00014-15-1-2550, NSF CCF-1718560,NSF CCF-1410009, NSF CPS1446901, NSF CCF-1817200, and ARO 74745LSMUR.

A. Related Literature
The cyber-physical systems either need to compute the process estimate in a remote estimator (centralized case), or often multiple nodes or components of the system need to estimate the same process over time via sensor observations and the information shared over a network (distributed case). The problem of FDI attack design and its detection has received signiﬁcant attention in recent times; attack design: conditions for undetectable FDI attack [4], design of a linear deception attack scheme to fool the popular χ2 detector (see [5]), optimal attack design for noiseless systems [6]. The paper [7] designs an optimal attack to steer the state of a control system to a desired target under a constraint on the attack detection probability. On the other hand, attempts on attack detection includes centralized (and decentralized as well) schemes for noiseless systems [8], coding of sensor output along with χ2 detector [9], comparing the sensor observations with those coming from from a few known safe sensors [10], and the attack detection and secure estimation schemes based on innovation vectors in [11]. Attempts on attack-resilient state estimation include: [12] for bounded noise, [13]–[15] for adaptive ﬁlter design using stochastic approximation, [16] that uses sparsity models to characterize the switching location attack in a noiseless linear system and state recovery constraints for various attack modes. FDI attack and its mitigation in power systems are addressed in [17]–[19]. Attack-resilient state estimation and control in noiseless systems are discussed in [20] and [21]. Performance bound of stealthy attack in a single sensor-remote estimator system using Kalman ﬁlter was characterized in [22].
However, there have been very few attempts for attack design and mitigation in distributed CPS, except [23] for attack detection and secure estimation, [24] for attack detection in networked control system using a certain dynamic watermarking strategy, and [25] for attack detection in power systems. To our knowledge, there has been no attempt to theoretically design an attack strategy in distributed CPS.
B. Our Contribution
In light of the above issues, our contributions in this paper are the following:
1) Under the Kalman-consensus ﬁlter (KCF, see [26]) for distributed estimation, we design a novel attack scheme that steers the estimates in all estimators towards a target value, while respecting a constraint on the attack detection probability under the popular χ2 detector adapted to the distributed setting. The attack scheme is reminiscent of the popular linear attack scheme [5],

but the novelty lies in online learning of the parameters in the attack algorithm via simultaneous perturbation stochastic approximation (SPSA, see [27]). The attack algorithm, unlike the linear attack scheme of [5], uses a non-zero mean Gaussian perturbation to modify the observation made at a node, and this non-zero mean is an afﬁne function of the process estimate at a node. The optimization problem is cast as an online optimization problem, where SPSA is used for online stochastic gradient descent (see [28, Chapter 3]). 2) The constraint on attack detection probability is met by updating a Lagrange multiplier via stochastic approximation at a slower timescale. 3) Though the proposed algorithm involves on-line parameter learning, it can be used off-line to optimize the attack parameters which can then be used in real CPS.

C. Organization The rest of the paper is organized as follows. System
model and the necessary background related to the problem are provided in Section II. The attack design algorithm is developed in Section III, and its performance in evaluated numerically in Section IV. Conclusions are made in Section V.
II. SYSTEM MODEL AND BACKGROUND In this paper, bold capital letters, bold small letters and capital letters with caligraphic font will denote matrices, vectors and sets respectively.

A. Sensing and estimation model
FigWuree c1o)nsoifdeNr aagceonntnneocdteeds, dmenuolttiehdopbywNirel=e.ss{1n,e2tw, ·o·r·k, N(se}e. Tanhde lseettNokf =n.ei|gNhkb|o. uTrhinegreniosdaesdioscfrnetoed-etimkeisstodcehnaostteidc pbryocNesks, {x(t)}t≥0 (where x(t) ∈ Rq) which is a linear Gaussian process evolving as follows:

x(t + 1) = Ax(t) + w(t)

(1)

∼N (0,Q)

where w(t) is zero-mean i.i.d. Gaussian noise. Each agent node is equipped with one or more sensors
who make some observation about the process. The vector observation received at node k at time t is given by:

yk(t) = Hkx(t) + vk(t) ,

(2)

∼N (0,Rk)

where Hk is a matrix of appropriate dimension and vk(t)
is a Gaussian observation noise which is independent across sensors and i.i.d. across t.
At time t, each agent node k ∈ N declares an estimate xˆ(k)(t) using Kalman consensus ﬁltering (KCF, see [26])
which involves the following sequence of steps:
1) Node k computes an intermediate estimate x¯(k)(t) = Axˆ(k)(t − 1).
2) Node k broadcasts x¯(k)(t) to all j ∈ Nk.

xˆ(1)(t)

xˆ(2)(t)

xˆ(3)(t)

xˆ(4)(t)

Figure 1.

Attacked vehicle sending false information to its neighbors
False data injection attack in remote estimation.

3) Node k computes its ﬁnal estimate of the process as:

xˆ(k)(t) = x¯(k)(t) + Gk(yk(t) − Hkx¯(k)(t))

+Ck (x¯(j)(t) − x¯(k)(t))

(3)

j∈Nk

Here Gk and Ck are the Kalman and consensus gain matrices used by node k, respectively.

B. False data injection (FDI) attack
At time t, sensors associated to any subset of nodes At ⊂ N can be under attack. A node k ∈ At receives an observation:

y˜k(t) = Hkx(t) + ek(t) + vk(t),

(4)

where ek(t) is the error injected by the attacker. The attacker seeks to insert the error sequence {ek(t) : k ∈ At}t≥0 in order to introduce error in the estimation. If At = A for all t, then the attack is called a static attack, otherwise the attack is
called a switching location attack. We will consider only static
attack in this paper. We assume that the attacker can observe xˆ(k)(t) for all 1 ≤ k ≤ N once they are computed by the
agent nodes.

C. The χ2 detector

Let us deﬁne the innovation vector at node k by zk(t) := yk(t) − HkAxˆ(k)(t − 1). Let us assume that, under no attack, {zk(t)}t≥0 reaches its steady-state distribution N (0, Σk).
Under a possible attack, a standard technique (see [5], [10]) to detect any anomaly in {zt}t≥0 is the χ2 detec-
tor, which tests whether the innovation vector follows the

desired Gaussian distribution. The detector at each agent

node observes the innovation sequence over a pre-speciﬁed

window of J time-slots, and declares an attack at time τ if

τ t=τ −J+1

zk (t)

Σ−k 1zk(t)

≥

η,

where

η

is

a

threshold

which

can be adjusted to control the false alarm probability. The

covariance matrix Σk can be computed from standard results

on KCF as in [26].

The authors of [5] proposed a linear injection attack to fool the χ2 detector in a centralized, remote estimation setting.
Motivated by [5], we also propose a linear attack, where, at time t, the sensor(s) associated with any node k ∈ A modiﬁes the innovation vector as z˜k(t) = Tkzk(t) + bk(t), where

Tk is a square matrix and bk(t) ∼ N (µk(θ(k)(t − 1)), Sk) is independent Gaussian. The bias term µk(θ(k)(t − 1)) is assumed to take a linear form µk(θ(k)(t − 1)) = Mkθ(k)(t − 1) + dk for suitable matrices and vectors Mk and dk. This is equivalent to modifying the observation vector to y˜k(t). If {Tk, Sk, Mk, dk}1≤k≤N is constant over time t, the attack is called stationary, else non-stationary.
D. The optimization problem

Our proposed algorithm maintains iter-

ates

{Tk(t), Uk(t), Mk(t), dk(t).}1≤k≤N

for

{Tk, Uk, Mk, dk}1≤k≤N , where UkUk = Sk. Let

Fτ =. σ({xˆ(k)(t), yk(t), Tk(t), Uk(t), Mk(t), dk(t),

bk(t)}1≤k≤N , λ(t) : 1 ≤ t ≤ τ )

(6)

be a sigma algebra; this is the information available to the attacker at time (τ + 1) before a new attack.

The attacker seeks to steer the estimate as close as possible to some pre-deﬁned value x∗, while keeping the attack detection probability per unit time under some constraint value α. Note that, the probability of attack detection per unit time slot
can be upper bounded as:

A. Dynamics of deviation from target estimate
Let us assume for the sake of analysis that the attacker uses constant Tk and Sk respectively, for all k ∈ {1, 2, · · · , N }. Under this attack:

P ≤ lim sup 1

TN

τ

P(

z˜ (t) Σ−1z˜ (t) ≥ η)

d T →∞ T + 1 τ =0 k=1 t=τ −J+1 k k k

xˆ(k)(t)

= Axˆ(k)(t − 1) + Gkz˜k(t) + Ck

(x¯(j)(t) − x¯(k)(t))

j∈Nk

≤ lim sup 1

T

N E(

τ t=τ −J+1

z˜k (t)

Σ−k 1z˜k(t))

T →∞ T + 1 τ =0 k=1 η

= Axˆ(k)(t − 1) + Gk(Tk(yk(t) − HkAxˆ(k)(t − 1)) + bk(t))

+ CkA

(xˆ(j)(t − 1) − xˆ(k)(t − 1))

(7)

j∈Nk

= J lim sup 1

TN
E(z˜ (t) Σ−1z˜ (t))

η T →∞ T + 1 τ =0 k=1 k

kk

(5) Let us deﬁne θ(k)(t) =. xˆ(k)(t) − x∗. Let φ˜(t) =. (xˆ(t) − x(t)), where xˆ(t) =. E(x(t)|{yk(τ )}1≤k≤N,τ≤t) =

where the ﬁrst and second inequalities come from union bound and Markov inequality, respectively. Hence, the attacker seeks to solve the following constrained optimization problem:

E(x(t)|Ft) which can be computed by a standard Kalman ﬁlter. Let φ˜(t) ∼ N (0, R(t)), whose distribution can be comtphueteddisbtryibautsitoanndoafrφd (Kt)al=m. a(nx(ﬁtl)te−r.xH∗e)nicseN, c(oxˆn(dti)ti−onxe∗d, oRn(tF))t,.

min lim sup 1 T N E||xˆ(k)(t) − x∗||2 {Tk,Sk,Mk,dk}N k=1 T →∞ T + 1 t=0 k=1

1 TN

−1

αη

s.t. liTm→s∞ up T + 1 t=0 k=1 E(z˜k(t) Σk z˜k(t)) ≤ J

(CP)

This problem can be relaxed by a Lagrange multiplier λ to obtain the following unconstrained optimization problem:

min
{Tk ,Sk ,Mk ,dk }N k=1

lim sup 1

TN
E(||xˆ(k)(t) − x∗||2

T →∞ T + 1 t=0 k=1

+λz˜k(t) Σ−k 1z˜k(t)) (UP)

The following standard result tells us how to choose λ.

Proposition 1. Let us consider (CP) and its relaxed ver-

sion (UP). If there exists a λ∗ ≥ 0 and matrices

{Tk∗, Sk∗, Mk∗, d∗k}Nk=1 such that (i) {Tk∗, Sk∗, Mk∗, d∗k}Nk=1 is the optimal solution of (UP) under λ = λ∗, and (ii) the tuple

({T

∗ k

,

Sk∗

,

M

∗ k

,

d

∗ k

}Nk=1

,

λ∗

)

satisﬁes

the

constraint

in

(CP)

with

equality,

then

({T

∗ k

,

Sk∗

,

M

∗ k

,

d∗k

}Nk=1

,

λ∗

)

is

an

optimal

solution for (CP) as well.

θ(k)(t)

= (A − GkTkHkA)xˆ(k)(t − 1)

+Gk Tk

yk (t)

+Gk bk (t)

.
=Hk Ax(t−1)+Hk w(t−1)+vk (t)

+Ck A

(xˆ(j)(t − 1) − xˆ(k)(t − 1)) − x∗

j∈Nk

= (A − GkTkHkA)θ(k)(t − 1) + GkTkHkAφ(t − 1)

+Ck A

(θ(j)(t − 1) − θ(k)(t − 1)) − (I − A)x∗

j∈Nk

+GkTkHkw(t − 1) + Gkbk(t) + GkTkvk(t)

= (A − GkTkHkA − NkCkA)θ(k)(t − 1)

+Ck A

θ(j)(t − 1) − (I − A)x∗ + GkTkHkAφ(t − 1)

j∈Nk

+GkTkHkw(t − 1) + Gkbk(t) + GkTkvk(t)

(8)

Clearly, E(||θ(k)(t)||2|Ft−1) can be expressed as (9). Note that, given {θ(k)(t − 1) : 1 ≤ k ≤ N },

the function

N k=1

E(||θ(k)

(t)||2

|Ft−1

)

is

quadratic

in

{Tk, Uk, Mk, dk}1≤k≤N .

On the other hand, given Ft−1, x(t − 1) ∼ N (xˆ(t −

1), R(t − 1)) where (xˆ(t − 1), R(t − 1)) can be computed

by a standard Kalman ﬁlter. Now,

III. ATTACK DESIGN
We ﬁrst analytically characterize the dynamics of the deviation (xˆ(k)(t) − x∗) in presence of linear attack, which will be used in developing the attack design algorithm later.

z˜k(t) = Tkzk(t) + bk(t) = Tkyk(t) − TkHkAxˆ(k)(t − 1) + bk(t) = Tk(Hkx(t) + vk(t)) − TkHkAxˆ(k)(t − 1) + bk(t)
= TkHkAx(t − 1) + TkHkw(t − 1) + Tkvk(t) −TkHkAxˆ(k)(t − 1) + bk(t)

E(||θ(k)(t)||2|Ft−1) = ||(A − GkTkHkA − NkCkA)θ(k)(t − 1) + CkA

θ(j)(t − 1) − (I − A)x∗ + Gk(Mkθ(k)(t − 1) + dk)||2

j∈Nk

+Tr(GkTkHkQHkTkGk + GkSkGk + GkTkRkTkGk)

+2 (A − GkTkHkA − NkCkA)θ(k)(t − 1) + CkA

θ(j)(t − 1) − (I − A)x∗ + Gk(Mkθ(k)(t − 1) + dk))

j∈Nk

GkTkHkA E(φ(t − 1)|Ft−1) +

E(||GkTkHkAφ(t − 1)||2|Ft−1)

(9)

=xˆ(t−1)−x∗

=Tr GkTkHkA R(t−1)+(xˆ(t−1)−x∗)(xˆ(t−1)−x∗) A HkTkGk

E(z˜k(t) Σ−k 1z˜k(t)|Ft−1) = Tr Σk− 21 TkHkQHkTk + TkRkTk + Sk + TkHkAR(t − 1)A HkTk
+[TkHkAxˆ(t − 1) − TkHkAxˆ(k)(t − 1) + Mkθ(k)(t − 1) + dk] [TkHkAxˆ(t − 1) − TkHkAxˆ(k)(t − 1) + Mkθ(k)(t − 1) + dk] Σ−k 21 (10)

which, given Ft−1, is distributed as N (TkHkAxˆ(t − 1) − TkHkAxˆ(k)(t − 1) + Mkθ(k)(t − 1) + dk, TkHkQHkTk +

TkRkTk + TkHkAR(t − 1)A HkTk + Sk). Hence,

E(z˜k(t) Σ−k 1z˜k(t)|Ft−1) is given by (10).

N k=1

E(z˜k(t)

Σ−k 1z˜k(t)|Ft−1)

is

also

quadratic

in {Tk, Uk, Mk, dk}1≤k≤N . In case of non-

stationary attack, these results will hold w.r.t.

{Tk(t), Uk(t), Mk(t), dk(t)}1≤k≤N .

.

Hence, the function ft({Tk, Uk, Mk, dk}1≤k≤N ) =

N j=1

E(||θ(j)(t)||2

+

λ(t

−

1)z˜k(t)

Σ−k 1z˜k(t)|Ft−1)

is

also

quadratic in {Tk, Uk, Mk, dk}1≤k≤N . We also note that,

if Tk is ﬁxed (e.g., the identity matrix), then the function

ft({Uk, Mk, dk}1≤k≤N ) is convex in {Uk, Mk, dk}1≤k≤N .

B. The attack design algorithm

In this subsection, we propose an optimal linear attack algo-

rithm for distributed CPS (OLAAD). The OLAAD algorithm

involves two-timescale stochastic approximation [29], which

is basically a stochastic gradient descent algorithm with a

noisy gradient estimate; (UP) is solved via SPSA in the faster

timescale, and λ is updated in the slower timescale.

The algorithm requires three positive step size sequences

{a(t)}t≥0, {b(t)}t≥0 and {c(t)}t≥0 satisfying the follow-

ing criteria: (i)

∞ t=0

a(t)

=

∞ t=0

b(t)

=

∞, (ii)

∞ t=0

a2(t)

<

∞,

∞ t=0

b2(t)

<

∞,

(iii)

limt→∞

b(t) a(t)

=

0,

(iv) limt→∞ c(t) = 0, and (v)

∞ a2(t) t=0 c2(t)

<

∞.

The

ﬁrst

three conditions are standard requirements for two-timescale

stochastic approximation. The fourth condition ensures that

the gradient estimate is asymptotically unbiased, and the ﬁfth

condition is required for the convergence of SPSA.

The OLAAD algorithm Input: {a(t)}t≥0, {b(t)}t≥0, {c(t)}t≥0, α, η, J , Initialization: Tk(0), Sk(0) = Uk(0)Uk(0), Mk(0), dk(0) for all k ∈ N , λ(0) For t = 1, 2, 3, · · · :
1) For each 1 ≤ k ≤ N , the attacker generates random matrices ∆(k)(t), Γ(k)(t), Π(k)(t) and β(k)(t) having
same dimensions as Tk(t − 1), Uk(t − 1), Mk(t − 1) and dk(t − 1) respectively, whose entries are uniformly and independently chosen from the set {−1, 1}.

2) The attacker computes T + =. Tk(t − 1) + c(t)∆(k)(t),

T−

=.

k
Tk(t − 1) − c(t)∆(k)(t), U +

=.

Uk(t −

k
1) + c(t)Γ(k)(t), U −

=.

k
Uk(t − 1) − c(t)Γ(k)(t),

M+

=.

k
Mk(t − 1) + c(t)Π(k)(t),

M−

=.

Mk(t −

1) −k c(t)Π(k)(t), d+k =. dk(t − 1) + c(t)kβ(k)(t), d−k =.

dk+(t−. 1)−+c(t)β+(k)(t),

for
−

.all

1

≤
−

k

≤ N.
−

The

matrices

Sk = (Uk ) Uk and Sk = (Uk ) Uk are computed.

3) The attacker computes:

κ+t =.

N
E (||θ(j)(t)||2 + λ(t − 1)z˜j(t) Σ−j 1z˜j(t)

j=1

|Ft−1, {Tk+, Sk+, Mk+, d+k }1≤k≤N

(11)

using (9) and (10) under {Tk+, Sk+, Mk+, d+k }1≤k≤N . The attacker computes κ−t in a similar way using {Tk−, Sk−, Mk−, d−k }1≤k≤N . 4) The attacker updates each element (i, j) of Tk(t − 1), Uk(t − 1), Mk(t − 1) and dk(t − 1) for all 1 ≤ k ≤ N
as follows:

(κ+t − κ−t )

Tk(t)(i, j) = Tk(t − 1)(i, j) − a(t) ×

(k)

2c(t)∆(i,j)(t)

(κ+t − κ−t )

Uk(t)(i, j) = Uk(t − 1)(i, j) − a(t) ×

(k)

2c(t)Γ(i,j)(t)

(κ+t − κ−t )

Mk(t)(i, j) = Mk(t − 1)(i, j) − a(t) ×

(k)

2c(t)Π(i,j)(t)

(κ+t − κ−t )

dk(t)(i, 1) = dk(t − 1)(i, 1) − a(t) ×

(k)

2c(t)β(i,1)(t)

(12)

The attacker computes Sk(t) =. (Uk(t)) Uk(t) for all 1 ≤ k ≤ N.
5) The sensors make observations {yk(t)}1≤k≤N , which
are accessed by the attacker. 6) The attacker calculates zk(t) = yk(t)−HkAxˆ(k)(t−1)
for all k ∈ {1, 2, · · · , N }.
7) The attacker calculates z˜k(t) = Tk(t)zk(t) + bk(t) for all k ∈ {1, 2, · · · , N }, where bk(t) ∼ N (Mk(t)θ(k)(t− 1) + dk(t), Sk(t)) chosen independently of all other

variables. The observations are accordingly modiﬁed as y˜k(t) = z˜k(t) + HkAxˆ(k)(t − 1) and sent to the agent nodes.
8) The attacker updates the Lagrange multiplier as follows:

N
λ(t) = λ(t−1)+b(t)(

z˜

(t) Σ−1z˜

(t)− αη )

(13)

k

kk

J

k=1

9) The agent nodes compute the estimates locally, using (3) and the modiﬁed {y˜k(t)}1≤k≤N . The agent nodes broadcast their estimates to their neighbouring nodes.

end

Note that, if {Tk}1≤k≤N is kept ﬁxed, then the ﬁrst update in step 4 of OLAAD is not required.

The OLAAD algorithm combines the online stochastic gradient descent (OSGD) algorithm of [28, Chapter 3] with two-timescale stochastic approximation of [29]. The λ(t) iterate is updated in the slower timescale to meet the con-

straint in (CP). In the faster timescale, OSGD is used for

solving

(UP).

Since

limt→∞

b(t) a(t)

=

0,

the

faster

timescale

iterates {Tk(t), Uk(t), Mk(t), dk(t)}1≤k≤N view the slower

timescale iterate λ(t) as quasi-static, while the λ(t) iteration

ﬁnds the faster timescale iterates as almost equilibriated; as if,

the faster timescale iterates are varied in an inner loop and the

slower timescale iterate is varied in an outer loop. Note that,

OLAAD has no guarantee of convergence to globally optimal

solution in general.

IV. NUMERICAL RESULTS
A. Three agent nodes, scalar proces
We consider a line topology with N = 3 agent nodes. Process dimension q = 1 and the observation dimension at each node is 2. The system parameters A, Q, {Rk}1≤k≤3, {Hk}1≤k≤3 are chosen randomly. The KCF parameters {Gk, Ck}1≤k≤3 are computed using a technique from [26], and {Σk}1≤k≤3 are computed by simulating the KCF under no attack.
For FDI attack, we set x∗ = 5, α = 0.3, η = 500, J = 3, λ(0) = 7, a(t) = t00..56 , b(t) = t00..59 , c(t) = 0t0.0.11 , Tk(t) = I for all 1 ≤ k ≤ 3 and for all t ≥ 1, simulated the performance of OLAAD for 1000000 iterations and evaluated its performance between 500000-th to 1000000-th iteration. However, motivated by the ADAM algorithm from [30], we implemented an adaptive step size version of SGD with the basic step sizes being {a(t), b(t)}t≥1,1 though gradient estimation was done via simultaneous perturbation using step size {c(t)}t≥1. In all problem instances, deviation from x∗ means the squared distance of x(k)(t) from x∗, summed over nodes and averaged over time; similar deﬁnition applies to deviation from origin.
We simulated multiple problem instances for different sample paths; some results are tabulated below:
We notice that the attack detection probability is 0 because we consider a stronger constraint (upper bound to the actual attack detection probability) in our formulation. The attack
1Note that, under ADAM, the conditions on step sizes in Section III-B are not necessarily satisﬁed for all sample paths.

Problem instance
1 2 3

Attack detection probability
0 0 0

Deviation from x∗ under FDI
29.3367 27.6588 42.7055

Deviation from x∗ (no attack)
75.3063 75.4367 75.3845

Deviation from origin under FDI
11.0587 12.2885 5.0898

Deviation from origin (no attack)
0.3215 0.4373 0.4001

detection probability also depends on the system realization, and the values of η and J. For some other values of η and J and various system realizations, we obtained the following:

Problem instance
1 2

Attack detection probability 0.1190 0.0047

Deviation from x∗ under FDI
70.8189 46.1039

Deviation from x∗ (no attack)
75.0383 75.2841

Table I N = 3, q = 1

Deviation from origin under FDI
0.2398 11.7185

Deviation from origin (no attack)
0.0014 0.3227

We observe that OLAAD signiﬁcantly reduces the deviation from x∗ = 5, and increases the deviation from the origin which is the mean of x(t). In all instances, constraint on attack detection probability is satisﬁed. This shows that OLAAD is
a viable FDI attack scheme for distributed CPS.

B. Five agent nodes, vector process
Here we used the same setting as before, except that N = 5, process dimension q = 2, x∗ = [55]T , α = 0.1, η = 200, J = 2, a(t) = 0t0.0.65 , b(t) = 0t0.0.95 . The results are tabulated next. It is to be noted that here also we observe the same pattern in results as seen for N = 3.

Problem instance
1 2 3

Attack detection probability
0.0025 0
8.5 × 10−5

Deviation from x∗ under FDI
29.0400 145.9975
22.6360

Deviation from x∗ (no attack)
251.3088 252.0693
255.0649

Deviation from origin under FDI 135.2330
42.1946 177.5157

Deviation from origin (no attack)
1.3124 2.0549 5.1584

However, it was also noticed across problem instances that, if the initial step size values a(1), b(1), c(1) are signiﬁcant, then the iterated might be unstable due to high initial ﬂuctuation; hence, the initial values of the step sizes need to be chosen carefully.
V. CONCLUSIONS
In this paper, we have designed an optimal linear attack for distributed cyber-physical systems. The parameters of the attack scheme were learnt and optimized on-line. Numerical results demonstrated the efﬁcacy of the proposed attack scheme. In future, we seek to extend this work for unknown process and observation dynamics and also prove convergence of the proposed algorithms.
REFERENCES
[1] Yilin Mo and Bruno Sinopoli. Secure control against replay attacks. In Communication, Control, and Computing, 2009. Allerton 2009. 47th Annual Allerton Conference on, pages 911–918. IEEE, 2009.
[2] Yilin Mo, Rohan Chabukswar, and Bruno Sinopoli. Detecting integrity attacks on scada systems. IEEE Transactions on Control Systems Technology, 22(4):1396–1407, 2014.

[3] Yanpeng Guan and Xiaohua Ge. Distributed attack detection and secure estimation of networked cyber-physical systems against false data injection attacks and jamming attacks. IEEE Transactions on Signal and Information Processing over Networks, 4(1):48–59, 2018.
[4] Yuan Chen, Soummya Kar, and José MF Moura. Optimal attack strategies subject to detection constraints against cyber-physical systems. IEEE Transactions on Control of Network Systems, 2017.
[5] Ziyang Guo, Dawei Shi, Karl Henrik Johansson, and Ling Shi. Optimal linear cyber-attack on remote state estimation. IEEE Transactions on Control of Network Systems, 4(1):4–13, 2017.
[6] Wu Guangyu, Sun Jian, and Chen Jie. Optimal data injection attacks in cyber-physical systems. IEEE Transactions on Cybernatics, 48(12):3302–3312, 2018.
[7] Yuan Chen, Soummya Kar, and José MF Moura. Cyber physical attacks with control objectives and detection constraints. In Decision and Control (CDC), 2016 IEEE 55th Conference on, pages 1125–1130. IEEE, 2016.
[8] Fabio Pasqualetti, Florian Dörﬂer, and Francesco Bullo. Attack detection and identiﬁcation in cyber-physical systems. IEEE Transactions on Automatic Control, 58(11):2715–2729, 2013.
[9] Fei Miao, Quanyan Zhu, Miroslav Pajic, and George J Pappas. Coding schemes for securing cyber-physical systems against stealthy data injection attacks. IEEE Transactions on Control of Network Systems, 4(1):106–117, 2017.
[10] Yuzhe Li, Ling Shi, and Tongwen Chen. Detection against linear deception attacks on multi-sensor remote state estimation. IEEE Transactions on Control of Network Systems, 2017.
[11] Shaunak Mishra, Yasser Shoukry, Nikhil Karamchandani, Suhas N Diggavi, and Paulo Tabuada. Secure state estimation against sensor attacks in the presence of noise. IEEE Transactions on Control of Network Systems, 4(1):49–59, 2017.
[12] Miroslav Pajic, Insup Lee, and George J Pappas. Attack-resilient state estimation for noisy dynamical systems. IEEE Transactions on Control of Network Systems, 4(1):82–92, 2017.
[13] Arpan Chattopadhyay and Urbashi Mitra. Attack detection and secure estimation under false data injection attack in cyber-physical systems. In Information Sciences and Systems (CISS), 2018 52nd Annual Conference on, pages 1–6. IEEE, 2018.
[14] Arpan Chattopadhyay, Urbashi Mitra, and Erik G Ström. Secure estimation in v2x networks with injection and packet drop attacks. In 2018 15th International Symposium on Wireless Communication Systems (ISWCS), pages 1–6. IEEE, 2018.
[15] Chattopadhyay Arpan and Mitra Urbashi. Security against false data injection attack in cyber-physical systems. accepted in IEEE Transactions on Control of Network Systems, 2019.
[16] Chensheng Liu, Jing Wu, Chengnian Long, and Yebin Wang. Dynamic state recovery for cyber-physical systems under switching location attacks. IEEE Transactions on Control of Network Systems, 4(1):14– 22, 2017.
[17] Kebina Manandhar, Xiaojun Cao, Fei Hu, and Yao Liu. Detection of faults and attacks including false data injection attack in smart grid using kalman ﬁlter. IEEE transactions on control of network systems, 1(4):370–379, 2014.
[18] Gaoqi Liang, Junhua Zhao, Fengji Luo, Steven R Weller, and Zhao Yang Dong. A review of false data injection attacks against modern power systems. IEEE Transactions on Smart Grid, 8(4):1630–1638, 2017.
[19] Qie Hu, Dariush Fooladivanda, Young Hwan Chang, and Claire J Tomlin. Secure state estimation and control for cyber security of the nonlinear power systems. IEEE Transactions on Control of Network Systems, 2017.
[20] Yorie Nakahira and Yilin Mo. Attack-resilient h2, h-inﬁnity, and l1 state estimator. IEEE Transactions on Automatic Control, 2018.
[21] Hamza Fawzi, Paulo Tabuada, and Suhas Diggavi. Secure estimation and control for cyber-physical systems under adversarial attacks. IEEE Transactions on Automatic Control, 59(6):1454–1467, 2014.
[22] Cheng-Zong Bai, Vijay Gupta, and Fabio Pasqualetti. On kalman ﬁltering with compromised sensors: Attack stealthiness and performance bounds. IEEE Transactions on Automatic Control, 62(12):6641–6648, 2017.
[23] Yanpeng Guan and Xiaohua Ge. Distributed attack detection and secure estimation of networked cyber-physical systems against false data injection attacks and jamming attacks. IEEE Transactions on Signal and Information Processing over Networks, 4(1):48–59, 2017.
[24] Bharadwaj Satchidanandan and Panganamala R Kumar. Dynamic watermarking: Active defense of networked cyber–physical systems. Proceedings of the IEEE, 105(2):219–240, 2016.

[25] Florian Dörﬂer, Fabio Pasqualetti, and Francesco Bullo. Distributed detection of cyber-physical attacks in power networks: A waveform relaxation approach. In 2011 49th Annual Allerton Conference on Communication, Control, and Computing (Allerton), pages 1486–1491. IEEE, 2011.
[26] R. Olfati-Saber. Kalman-consensus ﬁlter : Optimality, stability, and performance. In Conference on Decision and Control, pages 7036–7042. IEEE, 2009.
[27] J.C. Spall. Multivariate stochastic approximation using a simultaneous perturbation gradient approximation. IEEE Transactions on Automatic Control, 37(3):332–341, 1992.
[28] Elad Hazan et al. Introduction to online convex optimization. Foundations and Trends R in Optimization, 2(3-4):157–325, 2016.
[29] Vivek S. Borkar. Stochastic approximation: a dynamical systems viewpoint. Cambridge University Press, 2008.
[30] Diederik P. Kingma and Jimmy Ba. Adam: A method for stochastic optimization. In Yoshua Bengio and Yann LeCun, editors, 3rd International Conference on Learning Representations, ICLR 2015, San Diego, CA, USA, May 7-9, 2015, Conference Track Proceedings, 2015.

